{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>AWS Scripts and Resources Collection</p>"},{"location":"Analytics/Managed%20Apache%20Flink/","title":"Managed Apache Flink","text":""},{"location":"Analytics/Managed%20Apache%20Flink/#kinesis-data-stream","title":"Kinesis Data Stream","text":""},{"location":"Analytics/Managed%20Apache%20Flink/#create-table-source","title":"CREATE TABLE - Source","text":"<pre><code>%flink.ssql\nCREATE TABLE input_table (\n    id INTEGER,\n    level VARCHAR(5),\n    path VARCHAR(13),\n    status INTEGER,\n    event_time TIMESTAMP(0),\n    WATERMARK FOR event_time AS event_time - INTERVAL '5' SECOND\n)\nPARTITIONED BY (id)\nWITH (\n    'connector' = 'kinesis',\n    'stream' = 'input-stream',\n    'aws.region' = 'ap-northeast-2',\n    'scan.stream.initpos' = 'LATEST',\n    'format' = 'json',\n    'json.timestamp-format.standard' = 'ISO-8601'\n);\n</code></pre>"},{"location":"Analytics/Managed%20Apache%20Flink/#create-table-sink","title":"CREATE TABLE - Sink","text":"<pre><code>%flink.ssql\nCREATE TABLE output_table (\n    level VARCHAR(5),\n    window_start TIMESTAMP,\n    window_end TIMESTAMP,\n    counts BIGINT\n)\nWITH (\n    'connector' = 'kinesis',\n    'stream' = 'output-stream',\n    'aws.region' = 'ap-northeast-2',\n    'sink.partitioner' = 'random',\n    'format' = 'json',\n    'json.timestamp-format.standard' = 'ISO-8601'\n);\n</code></pre>"},{"location":"Analytics/Managed%20Apache%20Flink/#tumble","title":"TUMBLE","text":"<pre><code>%flink.ssql\nINSERT INTO output_table\nSELECT level, window_start, window_end, count(*) AS counts\nFROM TABLE(TUMBLE(TABLE input_table, DESCRIPTOR(event_time), INTERVAL '20' SECONDS))\nGROUP BY level, window_start, window_end;\n</code></pre>"},{"location":"Analytics/Managed%20Apache%20Flink/#hop","title":"HOP","text":"<pre><code>%flink.ssql\nINSERT INTO output_table\nSELECT level, window_start, window_end, count(*) AS counts\nFROM TABLE(HOP(TABLE input_table, DESCRIPTOR(event_time), INTERVAL '10' SECONDS, INTERVAL '30' SECONDS))\nGROUP BY level, window_start, window_end;\n</code></pre>"},{"location":"Analytics/Managed%20Apache%20Flink/#cumulate","title":"CUMULATE","text":"<pre><code>%flink.ssql\nINSERT INTO output_table\nSELECT level, window_start, window_end, count(*) AS counts\nFROM TABLE(CUMULATE(TABLE input_table, DESCRIPTOR(event_time), INTERVAL '20' SECONDS, INTERVAL '1' MINUTE))\nGROUP BY level, window_start, window_end;\n</code></pre>"},{"location":"Analytics/Managed%20Apache%20Flink/#session","title":"SESSION","text":"<pre><code>INSERT INTO output_table\nSELECT level,\n    SESSION_START(event_time, INTERVAL '30' SECONDS) AS window_start,\n    SESSION_ROWTIME(event_time, INTERVAL '30' SECONDS) AS window_end,\n    COUNT(*) AS counts\nFROM input_table\nGROUP BY level, SESSION(event_time, INTERVAL '30' SECONDS);\n</code></pre>"},{"location":"Analytics/MSK/Installation%20%26%20Authentication/","title":"Installation &amp; Authentication","text":""},{"location":"Analytics/MSK/Installation%20%26%20Authentication/#install-kafka-client","title":"Install Kafka Client","text":"<pre><code>wget https://downloads.apache.org/kafka/3.6.0/kafka_2.12-3.6.0.tgz -O kafka.tgz\ntar zxvf kafka.tgz\nmv kafka_2.12-3.6.0 kafka\necho 'PATH=$PATH:$HOME/kafka/bin' &gt;&gt; ~/.bash_profile\n. ~/.bash_profile\n\nkafka-topics.sh --version\n</code></pre>"},{"location":"Analytics/MSK/Installation%20%26%20Authentication/#install-ui-for-apache-kafka","title":"Install UI For Apache Kafka","text":"<pre><code>docker run -d \\\n-p 8080:8080  \\\n-v /home/ec2-user/environment/ui_for_apach_kafka:/etc/ui_for_apach_kafka  \\\n-e DYNAMIC_CONFIG_ENABLED=true  \\\nprovectuslabs/kafka-ui\n</code></pre>"},{"location":"Analytics/MSK/Installation%20%26%20Authentication/#iam-authentication","title":"IAM Authentication","text":"<ol> <li>Set the MSK_BOOTSTRAP_ADDRESS variable. <pre><code>echo \"export MSK_BOOTSTRAP_ADDRESS=&lt;MSK_BOOTSTRAP_ADDRESS&gt;\" &gt;&gt; ~/.bash_profile\n. ~/.bash_profile\n</code></pre></li> <li>File Settings <pre><code>cd ~/kafka/libs\nwget https://github.com/aws/aws-msk-iam-auth/releases/download/v1.1.1/aws-msk-iam-auth-1.1.1-all.jar\n\necho -n \"security.protocol=SASL_SSL\nsasl.mechanism=AWS_MSK_IAM \nsasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required; \nsasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler\" &gt; /tmp/client_iam.properties\n</code></pre></li> <li>Example of topic list search. <pre><code>kafka-topics.sh \\\n--bootstrap-server $MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_iam.properties \\\n--list\n</code></pre></li> </ol>"},{"location":"Analytics/MSK/Installation%20%26%20Authentication/#saslscram-authentication","title":"SASL/SCRAM Authentication","text":"<ol> <li>Creates an \u201cOther type of secret\u201d without using the default KMS key. Key/value Example<pre><code>{\n  \"username\": \"admin\",\n  \"password\": \"Admin12#$\"\n}\n</code></pre></li> <li>The secret's name must start with \"AmazonMSK_\".</li> <li>Associate secrets to MSK Cluster.</li> <li>File / Variable Settings <pre><code>echo -n \"KafkaClient {\n   org.apache.kafka.common.security.scram.ScramLoginModule required\n   username=\\\"admin\\\"\n   password=\\\"Admin12#$\\\";\n};\" &gt; /tmp/users_jaas_admin.conf\n\nexport KAFKA_OPTS=-Djava.security.auth.login.config=/tmp/users_jaas_admin.conf\ncp /usr/lib/jvm/java-17-amazon-corretto/lib/security/cacerts /tmp/kafka.client.truststore.jks\n\necho -n \"security.protocol=SASL_SSL\nsasl.mechanism=SCRAM-SHA-512\nssl.truststore.location=/tmp/kafka.client.truststore.jks\" &gt; /tmp/client_sasl.properties\n</code></pre></li> <li>Set the SASL_MSK_BOOTSTRAP_ADDRESS. <pre><code>echo \"export SASL_MSK_BOOTSTRAP_ADDRESS=&lt;SASL_MSK_BOOTSTRAP_ADDRESS&gt;\" &gt;&gt; ~/.bash_profile\n. ~/.bash_profile\n</code></pre></li> <li>Example of topic list search. <pre><code>kafka-topics.sh \\\n--bootstrap-server $SASL_MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_sasl.properties \\\n--list\n</code></pre></li> </ol>"},{"location":"Analytics/MSK/Installation%20%26%20Authentication/#acl","title":"ACL","text":"<ul> <li>Grant full permissions to cluster, group, and topic to the admin account. <pre><code>kafka-acls.sh  \\\n--bootstrap-server $SASL_MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_sasl.properties \\\n--add --allow-principal \"User:admin\" \\\n--operation All \\\n--group=* \\\n--topic=* \\\n--cluster=* \n</code></pre></li> <li>Grant only Read permission to the workshop-acl topic to the test account. <pre><code>kafka-acls.sh  \\\n--bootstrap-server $SASL_MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_sasl.properties \\\n--add --allow-principal \"User:test\" \\\n--operation Read \\\n--group=* \\\n--topic workshop-acl\n</code></pre></li> <li>Current Permission Check <pre><code>kafka-acls.sh \\\n--bootstrap-server $SASL_MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_sasl.properties \\\n--list\n</code></pre></li> </ul>"},{"location":"Analytics/MSK/Topic/","title":"Topic","text":""},{"location":"Analytics/MSK/Topic/#create","title":"Create","text":"<pre><code>kafka-topics.sh \\\n--bootstrap-server $MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_iam.properties \\\n--create --topic workshop-test \\\n--partitions 5  \\\n--replication-factor 3\n</code></pre>"},{"location":"Analytics/MSK/Topic/#list","title":"List","text":"<pre><code>kafka-topics.sh \\\n--bootstrap-server $MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_iam.properties \\\n--list\n</code></pre>"},{"location":"Analytics/MSK/Topic/#describe","title":"Describe","text":"<pre><code>kafka-topics.sh \\\n--bootstrap-server $MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_iam.properties \\\n--describe --topic workshop-test\n</code></pre>"},{"location":"Analytics/MSK/Topic/#producer-test","title":"Producer Test","text":"<pre><code>kafka-console-producer.sh \\\n--bootstrap-server $MSK_BOOTSTRAP_ADDRESS \\\n--producer.config /tmp/client_iam.properties \\\n--topic workshop-test\n</code></pre>"},{"location":"Analytics/MSK/Topic/#consumer-test","title":"Consumer Test","text":"<pre><code>kafka-console-consumer.sh \\\n--bootstrap-server $MSK_BOOTSTRAP_ADDRESS \\\n--consumer.config /tmp/client_iam.properties \\\n--topic workshop-test\n</code></pre>"},{"location":"Analytics/MSK/Topic/#delete","title":"Delete","text":"<pre><code>kafka-topics.sh \\\n--bootstrap-server $MSK_BOOTSTRAP_ADDRESS \\\n--command-config /tmp/client_iam.properties \\\n--delete --topic workshop-test\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Argo%20Rollouts/","title":"Argo Rollouts","text":""},{"location":"CI%20%26%20CD/ArgoCD/Argo%20Rollouts/#install","title":"Install","text":""},{"location":"CI%20%26%20CD/ArgoCD/Argo%20Rollouts/#helm","title":"Helm","text":"<pre><code>helm install rollouts argo/argo-rollouts -n argocd\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Argo%20Rollouts/#cli","title":"CLI","text":"<pre><code>curl -LO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64\nchmod +x ./kubectl-argo-rollouts-linux-amd64\nsudo mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Argo%20Rollouts/#blue-green","title":"Blue / Green","text":"<pre><code>apiVersion: argoproj.io/v1alpha1\nkind: Rollout\nmetadata:\n  name: rollout-bluegreen\nspec:\n  replicas: 2\n  revisionHistoryLimit: 2\n  selector:\n    matchLabels:\n      app: rollout-bluegreen\n  template:\n    metadata:\n      labels:\n        app: rollout-bluegreen\n    spec:\n      containers:\n      - name: rollouts-demo\n        image: argoproj/rollouts-demo:blue\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 8080\n  strategy:\n    blueGreen:\n      activeService: rollout-bluegreen-active\n      previewService: rollout-bluegreen-preview\n      autoPromotionEnabled: false\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Argo%20Rollouts/#promotion","title":"Promotion","text":"<pre><code>kubectl argo rollouts promote rollout-bluegreen\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Argo%20Rollouts/#rollback","title":"Rollback","text":"<pre><code>kubectl argo rollouts undo rollout-bluegreen\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Image%20Updater/","title":"Image Updater","text":""},{"location":"CI%20%26%20CD/ArgoCD/Image%20Updater/#helm-override-value","title":"Helm Override Value","text":"<p>values.yaml<pre><code>config:\n  argocd:\n    grpcWeb: true\n    serverAddress: \"http://argocd-server.argocd\"\n    insecure: true\n    plaintext: true\n  logLevel: debug\n  registries:\n    - name: ECR\n      api_url: \"https://ACCOUNT_ID.dkr.ecr.REGION_CODE.amazonaws.com\"\n      prefix: \"ACCOUNT_ID.dkr.ecr.REGION_CODE.amazonaws.com\"\n      ping: true\n      insecure: false\n      credentials: \"ext:/scripts/auth1.sh\"\n      credsexpire: 10h\nauthScripts:\n  enabled: true\n  scripts:\n    auth1.sh: |\n      #!/bin/sh\n      aws ecr --region REGION_CODE get-authorization-token --output text --query 'authorizationData[].authorizationToken' | base64 -d\n</code></pre> <pre><code>sed -i \"s|ACCOUNT_ID|$AWS_ACCOUNT_ID|g\" values.yaml\nsed -i \"s|REGION_CODE|$AWS_DEFAULT_REGION|g\" values.yaml\n</code></pre></p>"},{"location":"CI%20%26%20CD/ArgoCD/Image%20Updater/#install-with-helm","title":"Install with Helm","text":"<pre><code>helm install argocd-image-updater argo/argocd-image-updater \\\n    --namespace argocd \\\n    --values values.yaml\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Image%20Updater/#annotation-example","title":"Annotation Example","text":"<ul> <li>semver : update to highest allowed version according to given image constraint,</li> <li>newest-build : update to the most recently created image tag,</li> <li>alphabetical : update to the last tag in an alphabetically sorted list</li> <li>digest : update to the most recent pushed version of a mutable tag</li> </ul> <pre><code>argocd-image-updater.argoproj.io/image-list: org/app=&lt;IMAGE_REPOSITORY_URL&gt;/&lt;IMAGE_REPOSITORY_NAME&gt;\nargocd-image-updater.argoproj.io/org_app.allow-tags: any\nargocd-image-updater.argoproj.io/org_app.pull-secret: ext:/scripts/auth1.sh\nargocd-image-updater.argoproj.io/org_app.update-strategy: semver\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Installation/","title":"Installation","text":""},{"location":"CI%20%26%20CD/ArgoCD/Installation/#helm","title":"Helm","text":"<p>values.yaml<pre><code>configs:\n  cm:\n    timeout.reconciliation: 30s\n  params:\n    server.insecure: true\n</code></pre> <pre><code>curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64\nsudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd\nrm argocd-linux-amd64\n\nhelm repo add argo https://argoproj.github.io/argo-helm\nhelm repo update argo\n\nhelm install argocd argo/argo-cd \\\n    --create-namespace \\\n    --namespace argocd \\\n    --values values.yaml\n</code></pre></p>"},{"location":"CI%20%26%20CD/ArgoCD/Installation/#port-forward","title":"Port Forward","text":"<pre><code>kubectl port-forward svc/argocd-server -n argocd --address=0.0.0.0 8080:443\n</code></pre>"},{"location":"CI%20%26%20CD/ArgoCD/Installation/#login","title":"Login","text":"<pre><code>kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\nargocd login 127.0.0.1:8080  # ID : admin\nargocd account update-password\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/ECS/","title":"ECS","text":"<pre><code>version: 0.2\n\nenv:\n  variables:\n    AWS_ACCOUNT_ID: 073813292468\n    REPOSITORY_NAME: wsi-app\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME\n      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\n      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - IMAGE_TAG=${COMMIT_HASH:=latest}\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/ECS/#rolling","title":"Rolling","text":"<pre><code>phases:\n  post_build:\n    commands:\n      - echo Writing image definitions file...\n      - printf '[{\"name\":\"wsi\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG &gt; imagedefinitions.json\n\nartifacts:\n  files:\n    - imagedefinitions.json\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/ECS/#blue-green","title":"Blue / Green","text":"<pre><code>phases:\n  post_build:\n    commands:\n      - echo Writing image details file...\n      - printf '{\"ImageURI\":\"%s\"}' $REPOSITORY_URI:$IMAGE_TAG &gt; imageDetail.json\n\nartifacts:\n  files:\n    - appspec.yaml\n    - taskdef.json\n    - imageDetail.json\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/EKS/","title":"EKS","text":"<pre><code>version: 0.2\n\nenv:\n  variables:\n    AWS_ACCOUNT_ID: 073813292468\n    REPOSITORY_NAME: wsi-app\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME\n      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\n      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n      - IMAGE_TAG=${COMMIT_HASH:=latest}\n      - git config --global credential.helper '!aws codecommit credential-helper $@'\n      - git config --global credential.UseHttpPath true\n      - git config --global user.name \"root\"\n      - git config --global user.email \"root@localhost\"\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - git clone https://git-codecommit.ap-northeast-2.amazonaws.com/v1/repos/sample\n      - cd sample\n      - \"sed -i \\\"s|image: .*|image: $REPOSITORY_URI:$IMAGE_TAG|\\\" rollouts.yaml\"\n      - git add .\n      - git commit -m \"Update Image Tag $IMAGE_TAG\"\n      - git push origin main\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/Golang/","title":"Golang","text":"buildspec.yml<pre><code>version: 0.2\n\nphases:\n  install:\n    runtime-versions:\n      golang: 1.18\n  pre_build:\n    commands:\n      - go mod download\n      - go install github.com/jstemmer/go-junit-report/v2@latest\n      - go install github.com/axw/gocov/gocov@latest\n      - go install github.com/AlekSi/gocov-xml@latest\n  build:\n    commands:\n      - go build -o main main.go\n  post_build:\n    commands:\n      - go test -v 2&gt;&amp;1 ./... | go-junit-report -set-exit-code &gt; test.xml\n      - gocov test | gocov-xml &gt; coverage.xml\n\nreports:\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/go-test-report:\n    files:\n      - test.xml\n    file-format: JUNITXML\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/go-coverage-report:\n    files:\n      - coverage.xml\n    file-format: COBERTURAXML\n\nartifacts:\n  files:\n    - main\n    - scripts/*\n    - templates/*\n    - appspec.yaml\n\ncache:\n  paths:\n    - /go/pkg/**/*\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/Java/","title":"Java","text":"buildspec.yml<pre><code>version: 0.2\n\nphases:\n  install:\n    runtime-versions:\n      java: corretto17\n    commands:\n      - wget -q https://services.gradle.org/distributions/gradle-8.7-bin.zip\n      - mkdir /opt/gradle\n      - unzip -q -d /opt/gradle gradle-8.7-bin.zip\n      - export PATH=$PATH:/opt/gradle/gradle-8.7/bin\n  build:\n    commands:\n      - gradle clean build\n\nreports:\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/java-test-report:\n    files:\n      - '*.xml'\n    base-directory: 'build/test-results/test'\n    discard-paths: yes\n    file-format: JUNITXML\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/java-coverage-report:\n    files:\n      - jacocoTestReport.xml\n    base-directory: 'build/reports/jacoco/test'\n    discard-paths: yes\n    file-format: JACOCOXML\n\nartifacts:\n  files:\n    - build/libs/*.jar\n    - scripts/*\n    - appspec.yaml\n  discard-paths: yes\n\ncache:\n  paths:\n    - /root/.gradle/caches/**/*\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/Python/","title":"Python","text":"buildspec.yml<pre><code>version: 0.2\n\nphases:\n  install:\n    runtime-versions:\n      python: 3.9\n  pre_build:\n    commands:\n      - pip install -r requirements.txt\n  build:\n    commands:\n      - python -m compileall app.py\n      - mv __pycache__/app.cpython-37.pyc app.pyc\n  post_build:\n    commands:\n      - pytest --junitxml=test.xml\n      - coverage run -m pytest\n      - coverage xml\n\nreports:\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/py-test-report:\n    files:\n      - test.xml\n    file-format: JUNITXML\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/py-coverage-report:\n    files:\n      - coverage.xml\n    file-format: COBERTURAXML\n\nartifacts:\n  files:\n    - requirements.txt \n    - app.pyc\n    - scripts/*\n    - templates/*\n    - appspec.yaml\n\ncache:\n  paths:\n    - /root/.cache/pip/**/*\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/SPA%20%28React%2C%20Vue%29/","title":"SPA (React, Vue)","text":""},{"location":"CI%20%26%20CD/CodeBuild/SPA%20%28React%2C%20Vue%29/#install-jest-junit","title":"Install jest-junit","text":"<pre><code>npm install --save jest-junit\n</code></pre>"},{"location":"CI%20%26%20CD/CodeBuild/SPA%20%28React%2C%20Vue%29/#yaml-file","title":"Yaml File","text":"buildspec.yml<pre><code>version: 0.2\n\nphases:\n  install:\n    runtime-versions:\n      nodejs: 16\n  pre_build:\n    commands:\n      - npm install\n  build:\n    commands:\n      - npm run build\n  post_build:\n    commands:\n      - npm test -- --testResultsProcessor=\"jest-junit\" --watchAll=false --ci --coverage\n\nreports:\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/spa-report:\n    files:\n      - junit.xml\n    file-format: JUNITXML\n  arn:aws:codebuild:ap-northeast-2:073813292468:report-group/spa-coverage:\n    files:\n      - coverage/clover.xml\n    file-format: CLOVERXML\n\nartifacts:\n  files:\n    - build/**/*\n  base-directory: 'build'\n\ncache:\n  paths:\n    - node_modules/**/*\n</code></pre>"},{"location":"CI%20%26%20CD/CodeDeploy/EC2/","title":"EC2","text":"appspec.yml<pre><code>version: 0.0\nos: linux\nfiles:\n  - source: /\n    destination: /home/ec2-user\nhooks:\n  ApplicationStop:\n    - location: scripts/stop.sh\n      timeout: 60\n      runas: root\n  AfterInstall:\n    - location: scripts/install.sh\n      timeout: 60\n      runas: root\n  ApplicationStart:\n    - location: scripts/start.sh\n      timeout: 60\n      runas: root\n</code></pre>"},{"location":"CI%20%26%20CD/CodeDeploy/EC2/#scripts","title":"Scripts","text":""},{"location":"CI%20%26%20CD/CodeDeploy/EC2/#stop","title":"Stop","text":"stop.sh<pre><code>#!/bin/bash\nfuser -k 8080/tcp &amp;&amp; echo \"Stop Server\" || echo \"Not Running\"\n</code></pre>"},{"location":"CI%20%26%20CD/CodeDeploy/EC2/#install","title":"Install","text":"<ul> <li>Python install.sh<pre><code>#!/bin/bash\ncd /home/ec2-user\nyum install -y python3-pip\npip install -r requirements.txt\n</code></pre></li> </ul>"},{"location":"CI%20%26%20CD/CodeDeploy/EC2/#start","title":"Start","text":"<ul> <li>Python start.sh<pre><code>#!/bin/bash\ncd /home/ec2-user\nnohup python3 -u app.pyc &gt; nohup.out 2&gt;&amp;1 &amp;\n</code></pre></li> <li>Java start.sh<pre><code>#!/bin/bash\ncd /home/ec2-user\nfilename=$(ls *.jar)\nnohup java -jar $filename &gt; nohup.out 2&gt;&amp;1 &amp;\n</code></pre></li> <li>Golang start.sh<pre><code>#!/bin/bash\ncd /home/ec2-user\nnohup ./main &gt; nohup.out 2&gt;&amp;1 &amp;\n</code></pre></li> </ul>"},{"location":"CI%20%26%20CD/CodeDeploy/ECS/","title":"ECS","text":"appspec.yaml<pre><code>version: 0.0\nResources:\n  - TargetService:\n      Type: AWS::ECS::Service\n      Properties:\n        TaskDefinition: &lt;TASK_DEFINITION&gt;\n        LoadBalancerInfo:\n          ContainerName: wsi-app\n          ContainerPort: 8080\n</code></pre>"},{"location":"CI%20%26%20CD/Github%20Actions/EC2/","title":"EC2","text":"<pre><code>name: Deploy to Amazon EC2\n\non:\n  push:\n    branches:\n    - main\n  workflow_dispatch:\n\nenv:\n  AWS_REGION: ap-northeast-2\n  S3_BUCKET_NAME: deploy-archive-arco\n  CODE_DEPLOY_APPLICATION_NAME: ec2-deploy\n  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: ec2-golang-dg\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: Checkout release\n      uses: actions/checkout@v4\n\n    - name: Setup Go\n      uses: actions/setup-go@v4\n      with:\n        go-version: '1.21'\n\n    - name: Build\n      run: go build -o main\n\n    - name: AWS configure credentials\n      uses: aws-actions/configure-aws-credentials@v2\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: ${{ env.AWS_REGION }}\n\n    - name: Upload to AWS S3\n      run: |\n        aws deploy push \\\n          --application-name $CODE_DEPLOY_APPLICATION_NAME \\\n          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \\\n          --ignore-hidden-files \\\n          --source .\n\n    - name: Deploy to AWS EC2 from S3\n      run: |\n        aws deploy create-deployment \\\n          --application-name $CODE_DEPLOY_APPLICATION_NAME \\\n          --deployment-config-name CodeDeployDefault.AllAtOnce \\\n          --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME \\\n          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip\n</code></pre>"},{"location":"CI%20%26%20CD/Github%20Actions/ECS/","title":"ECS","text":""},{"location":"CI%20%26%20CD/Github%20Actions/ECS/#rolling-update","title":"Rolling Update","text":"<pre><code>name: Deploy to Amazon ECS\n\non:\n  push:\n    branches:\n      - main\n  workflow_dispatch:\n\nenv:\n  AWS_REGION: ap-northeast-2\n  ECR_REPOSITORY: color\n  ECS_SERVICE: color-svc\n  ECS_CLUSTER: demo-cluster\n  TD_NAME: color-td\n  CONTAINER_NAME: color\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v2\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: ${{ env.AWS_REGION }}\n\n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@v1\n\n      - name: Build, tag, and push image to Amazon ECR\n        id: build-image\n        env:\n          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}\n          IMAGE_TAG: ${{ github.sha }}\n        run: |\n          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .\n          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\n          echo \"image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\" &gt;&gt; $GITHUB_OUTPUT\n\n      - name: Download task definition\n        run: |\n          aws ecs describe-task-definition --task-definition $TD_NAME --query taskDefinition &gt; task-definition.json\n\n      - name: Fill in the new image ID in the Amazon ECS task definition\n        id: task-def\n        uses: aws-actions/amazon-ecs-render-task-definition@v1\n        with:\n          task-definition: task-definition.json\n          container-name: ${{ env.CONTAINER_NAME }}\n          image: ${{ steps.build-image.outputs.image }}\n\n      - name: Deploy Amazon ECS task definition\n        uses: aws-actions/amazon-ecs-deploy-task-definition@v1\n        with:\n          task-definition: ${{ steps.task-def.outputs.task-definition }}\n          service: ${{ env.ECS_SERVICE }}\n          cluster: ${{ env.ECS_CLUSTER }}\n          wait-for-service-stability: true\n</code></pre>"},{"location":"CI%20%26%20CD/Github%20Actions/ECS/#blue-green","title":"Blue &amp; Green","text":"<pre><code>name: Deploy to Amazon ECS\n\non:\n  push:\n    branches:\n      - main\n\nenv:\n  AWS_REGION: ap-northeast-2\n  ECR_REPOSITORY: color\n  ECS_CLUSTER: demo-cluster\n  ECS_SERVICE: color-svc\n  ECS_TD: color-td\n  CONTAINER_NAME: color\n  ECS_APP: AppECS-demo-cluster-color-svc\n  ECS_DG: DgpECS-demo-cluster-color-svc\n  ECS_APPSPEC: appspec.yml\n\njobs:\n  deploy:\n    name: Deploy\n    runs-on: ubuntu-latest\n    environment: production\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v2\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: ${{ env.AWS_REGION }}\n\n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@v1\n\n      - name: Build, tag, and push image to Amazon ECR\n        id: build-image\n        env:\n          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}\n          IMAGE_TAG: ${{ github.sha }}\n        run: |\n          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .\n          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\n          echo \"image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\" &gt;&gt; $GITHUB_OUTPUT\n\n      - name: Download task definition\n        run: |\n          aws ecs describe-task-definition --task-definition ${{ env.ECS_TD }} --query taskDefinition &gt; task-definition.json\n\n      - name: Fill in the new image ID in the Amazon ECS task definition\n        id: task-def\n        uses: aws-actions/amazon-ecs-render-task-definition@v1\n        with:\n          task-definition: task-definition.json\n          container-name: ${{ env.CONTAINER_NAME }}\n          image: ${{ steps.build-image.outputs.image }}\n\n      - name: Deploy Amazon ECS task definition\n        uses: aws-actions/amazon-ecs-deploy-task-definition@v1\n        with:\n          task-definition: ${{ steps.task-def.outputs.task-definition }}\n          service: ${{ env.ECS_SERVICE }}\n          cluster: ${{ env.ECS_CLUSTER }}\n          wait-for-service-stability: true\n          codedeploy-appspec: ${{ env.ECS_APPSPEC }}\n          codedeploy-application: ${{ env.ECS_APP }}\n          codedeploy-deployment-group: ${{ env.ECS_DG }}\n</code></pre>"},{"location":"CI%20%26%20CD/Github%20Actions/EKS/","title":"EKS","text":""},{"location":"CI%20%26%20CD/Github%20Actions/EKS/#argocd","title":"ArgoCD","text":"<pre><code>name: Push to ECR Repo\n\non:\n  push:\n    branches:\n      - main\n    paths:\n      - app/**\n  workflow_dispatch:\n\nenv:\n  AWS_REGION: ap-northeast-2\n  ECR_REPOSITORY: color\n\njobs:\n  deploy:\n    name: Deploy\n    runs-on: ubuntu-latest\n    environment: production\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: ${{ env.AWS_REGION }}\n\n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a\n\n      - name: Build, tag, and push image to Amazon ECR\n        id: build-image\n        env:\n          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}\n          IMAGE_TAG: 1.2.0\n        run: |\n          cd app\n          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .\n          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\n</code></pre>"},{"location":"CI%20%26%20CD/Github%20Actions/Test/","title":"Test","text":""},{"location":"CI%20%26%20CD/Github%20Actions/Test/#gradle","title":"Gradle","text":"<pre><code>name: Test Gradle App\n\non:\n  pull_request:\n    branches:\n      - main\n  workflow_dispatch:\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Set up JDK 11\n        uses: actions/setup-java@v4\n        with:\n          java-version: 17\n          distribution: 'corretto'\n\n      - name: Grant execute permission for gradlew\n        run: chmod +x gradlew\n\n      - name: Test with Gradle\n        run: ./gradlew --info test\n</code></pre>"},{"location":"CI%20%26%20CD/Lambda/SPA%20%28React%2C%20Vue%29/","title":"SPA (React, Vue)","text":"<p>Cloudfront Invalidation with Codepipeline <pre><code>import boto3\nimport botocore\nfrom time import time\n\ncf = boto3.client('cloudfront')\ncode_pipeline = boto3.client('codepipeline')\n\ndef create_invalidation():\n    DISTRIBUTION_ID = 'E3V00GOB0EULV5'\n    try:\n        res = cf.create_invalidation(\n            DistributionId=DISTRIBUTION_ID,\n            InvalidationBatch={\n                'Paths': {\n                    'Quantity': 1,\n                    'Items': [\n                        '/*'\n                    ]\n                },\n                'CallerReference': str(time()).replace(\".\", \"\")\n            }\n        )\n        return True\n    except botocore.exceptions.ClientError as e:\n        return False\n\ndef lambda_handler(event, context):\n    job_id = event['CodePipeline.job']['id']\n    if create_invalidation():\n        code_pipeline.put_job_success_result(jobId=job_id)\n    else:\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'message': \"Check CloudWatch Logs.\", 'type': 'JobFailed'})\n</code></pre></p>"},{"location":"Container%20Registry/Dockerfile/","title":"Dockerfile","text":""},{"location":"Container%20Registry/Dockerfile/#golang","title":"Golang","text":""},{"location":"Container%20Registry/Dockerfile/#single","title":"Single","text":"<ul> <li> <p>Alpine Linux <pre><code>FROM public.ecr.aws/docker/library/alpine\n\nWORKDIR /app\n\nCOPY main .\n\nRUN apk --no-cache add curl\n\nRUN adduser -D app \\\n    &amp;&amp; chown -R app:app /app \\\n    &amp;&amp; chmod 755 /app\nUSER app\n\nCMD [\"./main\"]\n</code></pre></p> </li> <li> <p>Amazon Linux <pre><code>FROM public.ecr.aws/amazonlinux/amazonlinux:2023\n\nWORKDIR /app\n\nCOPY main .\n\nRUN yum install -y shadow-utils\n\nRUN useradd app \\\n    &amp;&amp; chown -R app:app /app \\\n    &amp;&amp; chmod 755 /app\nUSER app\n\nCMD [\"./main\"]\n</code></pre></p> </li> </ul>"},{"location":"Container%20Registry/Dockerfile/#multi","title":"Multi","text":"<pre><code>FROM public.ecr.aws/docker/library/golang:alpine AS builder\n\nWORKDIR /build\n\nCOPY main.go ./\n\nRUN go mod init main &amp;&amp; go mod tidy\n\nRUN go build -o main .\n\nFROM public.ecr.aws/docker/library/alpine\n\nWORKDIR /app\n\nCOPY --from=builder /build/main .\n\nRUN apk --no-cache add curl\n\nRUN adduser -D app \\\n    &amp;&amp; chown -R app:app /app \\\n    &amp;&amp; chmod 755 /app\nUSER app\n\nCMD [\"./main\"]\n</code></pre>"},{"location":"Container%20Registry/Dockerfile/#python","title":"Python","text":"<pre><code>FROM public.ecr.aws/docker/library/python:3.9-alpine\n\nWORKDIR /app\nCOPY app.py requirements.txt ./\n\nRUN apk --no-cache add curl\nRUN pip3 install -r requirements.txt\n\nRUN adduser -D app \\\n    &amp;&amp; chown -R app:app /app \\\n    &amp;&amp; chmod 755 /app\nUSER app\n\nCMD [\"python3\", \"app.py\"]\n</code></pre>"},{"location":"Container%20Registry/Dockerfile/#java","title":"Java","text":""},{"location":"Container%20Registry/Dockerfile/#single_1","title":"Single","text":"<pre><code>FROM public.ecr.aws/docker/library/amazoncorretto:17-alpine\n\nWORKDIR /app\n\nRUN apk --no-cache add curl\n\nCOPY build/libs/*-SNAPSHOT.jar app.jar\n\nRUN adduser -D app \\\n    &amp;&amp; chown -R app:app /app \\\n    &amp;&amp; chmod 755 /app\nUSER app\n\nCMD [\"java\",\"-jar\",\"./app.jar\"]\n</code></pre>"},{"location":"Container%20Registry/Dockerfile/#multi_1","title":"Multi","text":"<pre><code>FROM public.ecr.aws/docker/library/gradle:jdk17-alpine AS builder\n\nWORKDIR /\n\nCOPY *.gradle .\nCOPY src src\n\nRUN gradle clean build -x test --no-daemon\n\nFROM public.ecr.aws/docker/library/amazoncorretto:17-alpine\n\nWORKDIR /app\n\nRUN apk --no-cache add curl\n\nCOPY --from=builder /build/libs/*.jar app.jar\n\nRUN adduser -D app \\\n    &amp;&amp; chown -R app:app /app \\\n    &amp;&amp; chmod 755 /app\nUSER app\n\nCMD [\"java\",\"-jar\",\"./app.jar\"]\n</code></pre>"},{"location":"Container%20Registry/GitHub%20Container%20Registry/","title":"GitHub Container Registry","text":""},{"location":"Container%20Registry/GitHub%20Container%20Registry/#personal-access-tokens-classic","title":"Personal access tokens (classic)","text":"<p>Select scopes - write:packages - read:packages - delete:packages</p>"},{"location":"Container%20Registry/GitHub%20Container%20Registry/#login","title":"Login","text":"<pre><code>export CR_PAT=YOUR_TOKEN\necho $CR_PAT | docker login ghcr.io -u USERNAME --password-stdin\n</code></pre>"},{"location":"Container%20Registry/GitHub%20Container%20Registry/#push","title":"Push","text":"<pre><code>docker push ghcr.io/NAMESPACE/IMAGE_NAME:latest\n</code></pre>"},{"location":"Container%20Registry/Multi-platform%20images/","title":"Multi-platform images","text":""},{"location":"Container%20Registry/Multi-platform%20images/#installing-emulators","title":"Installing emulators","text":"<pre><code>docker run --privileged --rm tonistiigi/binfmt --install all\n</code></pre>"},{"location":"Container%20Registry/Multi-platform%20images/#create","title":"Create","text":"<pre><code>docker buildx create --use --name multiarch\n</code></pre>"},{"location":"Container%20Registry/Multi-platform%20images/#build-push","title":"Build &amp; Push","text":"<pre><code>docker buildx build --platform linux/amd64,linux/arm64 \\\n  -t 073813292468.dkr.ecr.ap-northeast-2.amazonaws.com/demo \\\n  --push .\n</code></pre>"},{"location":"Database/Memcached/","title":"Memcached","text":""},{"location":"Database/Memcached/#install-telnet","title":"Install Telnet","text":"<pre><code>sudo yum install -y telnet\n</code></pre>"},{"location":"Database/Memcached/#connect","title":"Connect","text":"<pre><code>telnet $ENDPOINT_URL 11211  # without TLS\nopenssl s_client -quiet -crlf -connect $ENDPOINT_URL:11211  # with TLS\n</code></pre>"},{"location":"Database/Memcached/#usage-example","title":"Usage Example","text":"<pre><code>set a 0 10 5     # Set key \"a\" with 10 seconds expiration and 5 byte value\nhello            # Set value as \"hello\"\n\nget a            # Get value for key \"a\"\n</code></pre>"},{"location":"Database/MongoDB/","title":"MongoDB","text":""},{"location":"Database/MongoDB/#install","title":"Install","text":"<p>/etc/yum.repos.d/mongodb-org-7.0.repo<pre><code>[mongodb-org-7.0]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/amazon/2023/mongodb-org/7.0/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://pgp.mongodb.com/server-7.0.asc\n</code></pre> <pre><code>sudo yum install -y mongodb-mongosh-shared-openssl3\n</code></pre></p>"},{"location":"Database/MongoDB/#connect","title":"Connect","text":"<p>Please note that you need to set the ENDPOINT_URL variable. <pre><code>mongosh --ssl --host $ENDPOINT_URL --sslCAFile global-bundle.pem --username mongo --password mongopass!\n</code></pre></p>"},{"location":"Database/MongoDB/#database","title":"Database","text":"<pre><code>use school\ndb.dropDatabase()\n</code></pre>"},{"location":"Database/MongoDB/#collection","title":"Collection","text":"<pre><code>db.createCollection(\"students\")\n\n# maximum size 10MB, no more than 100 documents\ndb.createCollection(\"teachers\", {capped: true, size: 10000000, max: 100})\n</code></pre>"},{"location":"Database/MongoDB/#insert","title":"Insert","text":"<pre><code>db.students.insertOne({\n    name: \"Larry\", \n    age: 32, \n    gpa: 2.8, \n    fullTime: false,\n    registerDate: new Date(), \n    graduationDate: null, \n    courses: [\"Biology\", \"Chemistry\", \"Calculus\"], \n    address: {street: \"123 Fake St.\", city: \"Bikini Bottom\", zip: 12345}\n})\n\ndb.students.insertMany([\n    {name: \"Patrick\", age: 38, gpa: 1.5}, \n    {name: \"Sandy\", age: 27, gpa: 4.0}, \n    {name: \"Gary\", age: 18, gpa: 2.5}\n])\n</code></pre>"},{"location":"Database/MongoDB/#find","title":"Find","text":"<pre><code>db.students.find({gpa: 4.0}, {_id: false, name: true})  # (Query, Projection)\ndb.students.find({name: {$ne: \"Spongebob\"}})    # Not Equal\n\ndb.students.find({age: {$lt: 27}})  # less than\ndb.students.find({age: {$lte: 27}}) # less than or equal\ndb.students.find({age: {$gt: 27}})  # greater than\ndb.students.find({age: {$gte: 27}}) # greater than or equal\n\ndb.students.find({name: {$in: [\"Spongebob\", \"Patrick\", \"Sandy\"]}})  # in\ndb.students.find({name: {$nin: [\"Spongebob\", \"Patrick\", \"Sandy\"]}}) # not in\n\ndb.students.find({$and: [{fullTime: true}, {age: {$lt: 27}}]})  # True &amp; True -&gt; True\ndb.students.find({$or: [{fullTime: true}, {age: {$lte: 22}}]})  # True &amp; False -&gt; True\ndb.students.find({$nor: [{fullTime: true}, {age: {$lte: 22}}]}) # False &amp; False -&gt; True\ndb.students.find({age: {$not: {$gte: 30}}}) # not\n\ndb.students.find().sort({gpa: 1})  # 1 -&gt; ASC, -1 -&gt; DESC\ndb.students.find().limit(5)\n</code></pre>"},{"location":"Database/MongoDB/#update","title":"Update","text":"<pre><code># (Filter, Update)\ndb.students.updateOne({_id: ObjectId('65f419c70457b0bd5d9ce3f2')}, {$set: {fullTime: true}})\ndb.students.updateMany({fullTime: {$exists: false}}, {$set: {fullTime: true}})\n</code></pre>"},{"location":"Database/MongoDB/#delete","title":"Delete","text":"<pre><code>db.students.deleteOne({_id: ObjectId('65f423ea08740278768bf208')})\ndb.students.deleteMany({registerDate: {$exists: false}})\n</code></pre>"},{"location":"Database/MongoDB/#index","title":"Index","text":"<pre><code>db.students.createIndex({name: 1})\ndb.students.getIndexes()\ndb.students.dropIndex(\"name_1\")\n</code></pre>"},{"location":"Database/MySQL/","title":"MySQL","text":""},{"location":"Database/MySQL/#install","title":"Install","text":""},{"location":"Database/MySQL/#amazon-linux-2023","title":"Amazon Linux 2023","text":"<pre><code>sudo dnf update -y\nsudo dnf install -y mariadb105\n</code></pre>"},{"location":"Database/MySQL/#amazon-linux-2","title":"Amazon Linux 2","text":"<pre><code>sudo yum install -y mariadb\n</code></pre>"},{"location":"Database/MySQL/#connect","title":"Connect","text":"<p>Please note that you need to set the ENDPOINT_URL and USER_NAME(admin) variables. <pre><code>mysql -h $ENDPOINT_URL -P 3306 -u $USER_NAME -p\n</code></pre></p>"},{"location":"Database/MySQL/#database-example","title":"Database Example","text":"<pre><code>CREATE DATABASE demo;\nUSE demo;\n</code></pre>"},{"location":"Database/MySQL/#table-example","title":"Table Example","text":"<pre><code>CREATE TABLE member (\n    idx INT NOT NULL AUTO_INCREMENT,\n    user_id VARCHAR(20) NOT NULL,\n    password VARCHAR(20) NOT NULL,\n    PRIMARY KEY(idx)\n);\n\nCREATE TABLE employees (\n    emp_no      INT             NOT NULL,\n    birth_date  DATE            NOT NULL,\n    first_name  VARCHAR(14)     NOT NULL,\n    last_name   VARCHAR(16)     NOT NULL,\n    gender      ENUM('M','F')   NOT NULL,\n    hire_date   DATE            NOT NULL,\n    PRIMARY KEY (emp_no)\n);\n</code></pre>"},{"location":"Database/MySQL/#crud-example","title":"CRUD Example","text":"<pre><code>INSERT INTO member(user_id, password) VALUES ('admin', 'pw1234');\nsource insert.sql;\nSELECT * FROM member;\nUPDATE member SET password = 'pw5678' WHERE user_id = 'admin';\nDELETE FROM member WHERE user_id = 'admin';\n</code></pre>"},{"location":"Database/MySQL/#index-example","title":"Index Example","text":"<pre><code>CREATE INDEX name ON employees (first_name, last_name);\n</code></pre>"},{"location":"Database/MySQL/#new-user","title":"New User","text":"<pre><code>CREATE USER 'admin'@'%' IDENTIFIED BY 'Mysql1234!';\nGRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION;\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"Database/PostgreSQL/","title":"PostgreSQL","text":""},{"location":"Database/PostgreSQL/#install","title":"Install","text":""},{"location":"Database/PostgreSQL/#amazon-linux-2023","title":"Amazon Linux 2023","text":"<pre><code>sudo dnf update -y\nsudo dnf install -y postgresql15\n</code></pre>"},{"location":"Database/PostgreSQL/#amazon-linux-2","title":"Amazon Linux 2","text":"<pre><code>sudo amazon-linux-extras install -y postgresql14\n</code></pre>"},{"location":"Database/PostgreSQL/#connect","title":"Connect","text":"<p>Please note that you need to set the ENDPOINT_URL, USER_NAME(postgres), and DB_NAME variables. <pre><code>psql --host=$ENDPOINT_URL --port=5432 --username=$USER_NAME --password --dbname=$DB_NAME\n</code></pre></p>"},{"location":"Database/PostgreSQL/#database-example","title":"Database Example","text":"<pre><code>CREATE DATABASE demo with owner postgres;\n\\l+\n\\c demo;\n</code></pre>"},{"location":"Database/PostgreSQL/#schema-example","title":"Schema Example","text":"<pre><code>CREATE SCHEMA wsi authorization postgres;\nset search_path to wsi;\n\\dn+\n</code></pre>"},{"location":"Database/PostgreSQL/#table-example","title":"Table Example","text":"<pre><code>CREATE TABLE public.member (\n    idx SERIAL NOT NULL AUTO_INCREMENT,\n    user_id VARCHAR(20) NOT NULL,\n    password VARCHAR(20) NOT NULL,\n    PRIMARY KEY(idx)\n);\n\\dt\n</code></pre>"},{"location":"Database/PostgreSQL/#crud-example","title":"CRUD Example","text":"<pre><code>INSERT INTO public.member(user_id, password) VALUES ('admin', 'pw1234');\nSELECT * FROM public.member;\nUPDATE public.member SET password = 'pw5678' WHERE user_id = 'admin';\nDELETE FROM public.member WHERE user_id = 'admin';\n</code></pre>"},{"location":"Database/Redis/","title":"Redis","text":""},{"location":"Database/Redis/#install","title":"Install","text":""},{"location":"Database/Redis/#amazon-linux-2023","title":"Amazon Linux 2023","text":"<pre><code>sudo yum install -y redis6\nredis6-cli --version\n</code></pre>"},{"location":"Database/Redis/#amazon-linux-2","title":"Amazon Linux 2","text":"<pre><code>sudo yum -y install openssl-devel gcc\nwget http://download.redis.io/redis-stable.tar.gz\ntar xvzf redis-stable.tar.gz\ncd redis-stable\nmake distclean\nmake redis-cli BUILD_TLS=yes\nsudo install -m 755 src/redis-cli /usr/local/bin/\nredis-cli --version\n</code></pre>"},{"location":"Database/Redis/#connect","title":"Connect","text":"<p>Please note that you need to set the ENDPOINT_URL variable. <pre><code>redis-cli -h $ENDPOINT_URL --tls -p 6379 -c\n</code></pre></p>"},{"location":"Database/Redis/#usage","title":"Usage","text":"<pre><code>set a \"hello\" EX 5\nget a\ndel a\n</code></pre>"},{"location":"EC2%20%26%20Linux/CodeDeploy%20Agent/","title":"CodeDeploy Agent","text":""},{"location":"EC2%20%26%20Linux/CodeDeploy%20Agent/#install-ruby","title":"Install Ruby","text":"<pre><code>yum update -y\nyum install -y ruby\n</code></pre>"},{"location":"EC2%20%26%20Linux/CodeDeploy%20Agent/#install-codedeploy-agent","title":"Install CodeDeploy Agent","text":"<pre><code>AWS_DEFAULT_REGION=\"ap-northeast-2\"\ncd /home/ec2-user\nwget https://aws-codedeploy-$AWS_DEFAULT_REGION.s3.$AWS_DEFAULT_REGION.amazonaws.com/latest/install\nchmod +x ./install\n./install auto\nsystemctl status codedeploy-agent.service\n</code></pre>"},{"location":"EC2%20%26%20Linux/Docker%20Compose/","title":"Docker Compose","text":""},{"location":"EC2%20%26%20Linux/Docker%20Compose/#install","title":"Install","text":"<pre><code>mkdir -p /usr/local/lib/docker/cli-plugins/\ncurl -SL \"https://github.com/docker/compose/releases/latest/download/docker-compose-linux-$(uname -m)\" -o /usr/local/lib/docker/cli-plugins/docker-compose\nchmod +x /usr/local/lib/docker/cli-plugins/docker-compose\n</code></pre>"},{"location":"EC2%20%26%20Linux/Docker%20Compose/#template","title":"Template","text":"compose.yml<pre><code>services:\n  employee:\n    build: employee\n    restart: always\n    environment:\n      MYSQL_USER: admin\n      MYSQL_PASSWORD: admin1234!\n      MYSQL_HOST: apdev-rds-instance.cacgnhyyutg6.ap-northeast-2.rds.amazonaws.com\n      MYSQL_PORT: 3306\n      MYSQL_DBNAME: dev\n    ports:\n      - '8080:8080'\n    logging:\n      driver: awslogs\n      options:\n        awslogs-region: ap-northeast-2\n        awslogs-group: /app/employee\n        awslogs-stream: employee\n</code></pre>"},{"location":"EC2%20%26%20Linux/EC2%20Image%20Builder/","title":"EC2 Image Builder","text":""},{"location":"EC2%20%26%20Linux/EC2%20Image%20Builder/#build","title":"Build","text":""},{"location":"EC2%20%26%20Linux/EC2%20Image%20Builder/#python","title":"Python","text":"<pre><code>name: myapp\ndescription: This is myapp document.\nschemaVersion: 1.0\n\nphases:\n  - name: build\n    steps:\n      - name: InstallPip\n        action: ExecuteBash\n        inputs:\n          commands:\n            - yum install -y python3-pip\n      - name: CreateAppDirectory\n        action: CreateFolder\n        inputs:\n          - path: /opt/myapp\n      - name: DownloadApp\n        action: S3Download\n        inputs:\n          - source: s3://application-bucket-arco/app/*\n            destination: /opt/myapp/\n      - name: DownloadService\n        action: S3Download\n        inputs:\n          - source: s3://application-bucket-arco/daemon/myapp.service\n            destination: /etc/systemd/system/myapp.service\n      - name: DownloadCWAgentConfig\n        action: S3Download\n        inputs:\n          - source: s3://application-bucket-arco/daemon/config.json\n            destination: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json\n      - name: StartCWAgent\n        action: ExecuteBash\n        inputs:\n          commands:\n            - systemctl start amazon-cloudwatch-agent\n            - systemctl enable amazon-cloudwatch-agent\n      - name: InstallModule\n        action: ExecuteBash\n        inputs:\n          commands:\n            - pip install -r /opt/myapp/requirements.txt\n      - name: LoadService\n        action: ExecuteBash\n        inputs:\n          commands:\n            - systemctl daemon-reload\n            - systemctl start myapp\n            - systemctl enable myapp\n  - name: validate\n    steps:\n      - name: ValidateApp\n        action: ExecuteBash\n        inputs:\n          commands:\n            - curl localhost:8080/healthcheck\n</code></pre>"},{"location":"EC2%20%26%20Linux/EC2%20Image%20Builder/#test","title":"Test","text":"<pre><code>name: MyappTestingDocument\ndescription: This is myapp testing document.\nschemaVersion: 1.0\n\nphases:\n  - name: test\n    steps:\n      - name: TestApp\n        action: ExecuteBash\n        inputs:\n          commands:\n            - curl localhost:8080/healthcheck\n</code></pre>"},{"location":"EC2%20%26%20Linux/Linux%20Date/","title":"Linux Date","text":""},{"location":"EC2%20%26%20Linux/Linux%20Date/#kst-update","title":"KST Update","text":"<pre><code>ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime\n</code></pre>"},{"location":"EC2%20%26%20Linux/Linux%20Date/#date-format","title":"Date Format","text":"<p>Date Format</p>"},{"location":"EC2%20%26%20Linux/Publish%20Function/","title":"Publish Function","text":"<pre><code>zip -r function.zip .\naws lambda update-function-code --function-name myFunction --zip-file fileb://myFunction.zip\n</code></pre>"},{"location":"EC2%20%26%20Linux/Systemctl%20Daemon/","title":"Systemctl Daemon","text":"<p>Create file /etc/systemd/system/servicename.service</p>"},{"location":"EC2%20%26%20Linux/Systemctl%20Daemon/#application","title":"Application","text":"<pre><code>[Unit]\nDescription=foo/bar service\n\n[Service]\nType=simple\nEnvironmentFile=/opt/foobar/.env\nExecStart=/opt/foobar/app\nWorkingDirectory=/opt/foobar\nRestart=on-failure\nStandardOutput=file:/var/log/foobar.log\nStandardError=file:/var/log/foobar.log\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"EC2%20%26%20Linux/Systemctl%20Daemon/#instance-restart-terminate","title":"Instance Restart / Terminate","text":"<pre><code>[Unit]\nDescription=my_shutdown Service\nBefore=shutdown.target reboot.target halt.target\nRequires=network-online.target network.target\n\n[Service]\nKillMode=none\nExecStart=/bin/true\nExecStop=/opt/scripts/terminate.sh\nRemainAfterExit=yes\nType=oneshot\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"EC2%20%26%20Linux/Systemctl%20Daemon/#timer","title":"Timer","text":"<p>interval.service<pre><code>[Unit]\nDescription=my_interval service\n\n[Service]\nType=oneshot\nExecStart=/opt/scripts/interval.sh\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> interval.timer<pre><code>[Unit]\nDescription=my_interval timer\n\n[Timer]\nOnCalendar=minutely\n\n[Install]\nWantedBy=timers.target\n</code></pre></p>"},{"location":"EC2%20%26%20Linux/Systemctl%20Daemon/#start-daemon","title":"Start Daemon","text":"<pre><code>systemctl daemon-reload\nsystemctl start servicename\nsystemctl status servicename\nsystemctl enable servicename\n</code></pre>"},{"location":"EKS/AWS%20Load%20Balancer%20Controller/","title":"AWS Load Balancer Controller","text":""},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#subnet-tag","title":"Subnet Tag","text":"Subnet Key Value Private kubernetes.io/role/internal-elb 1 Public kubernetes.io/role/elb 1"},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#create-policy","title":"Create Policy","text":"<pre><code>curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.13.3/docs/install/iam_policy.json\n\naws iam create-policy \\\n    --policy-name AWSLoadBalancerControllerIAMPolicy \\\n    --policy-document file://iam_policy.json\n</code></pre>"},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#create-serviceaccount","title":"Create ServiceAccount","text":"<pre><code>eksctl create iamserviceaccount \\\n  --cluster=$CLUSTER_NAME \\\n  --namespace=kube-system \\\n  --name=aws-load-balancer-controller \\\n  --role-name AmazonEKSLoadBalancerControllerRole \\\n  --attach-policy-arn=arn:aws:iam::$AWS_ACCOUNT_ID:policy/AWSLoadBalancerControllerIAMPolicy \\\n  --approve\n</code></pre>"},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#install-with-helm","title":"Install with Helm","text":"<pre><code>helm repo add eks https://aws.github.io/eks-charts\nhelm repo update eks\n\nhelm install aws-load-balancer-controller eks/aws-load-balancer-controller \\\n  -n kube-system \\\n  --set clusterName=$CLUSTER_NAME \\\n  --set serviceAccount.create=false \\\n  --set serviceAccount.name=aws-load-balancer-controller\n</code></pre>"},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#resources","title":"Resources","text":""},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#ingress","title":"Ingress","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: skills\n  annotations:\n    alb.ingress.kubernetes.io/load-balancer-name: skills-alb\n    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=my-access-log-bucket,access_logs.s3.prefix=my-app\n    alb.ingress.kubernetes.io/target-type: instance\n    alb.ingress.kubernetes.io/target-node-labels: node=app\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/security-groups: sg-xxxx\n    alb.ingress.kubernetes.io/healthcheck-path: /health\n    alb.ingress.kubernetes.io/certificate-arn: $CERTIFICATE_ARN\n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\":443}]'\n    alb.ingress.kubernetes.io/ssl-redirect: '443'\n    alb.ingress.kubernetes.io/actions.response-403: &gt;\n      {\"type\":\"fixed-response\",\"fixedResponseConfig\":{\"contentType\":\"text/plain\",\"statusCode\":\"403\",\"messageBody\":\"403 Forbidden\"}}\nspec:\n  ingressClassName: alb\n  rules:\n    - http:\n        paths:\n          - path: /\n            pathType: Exact\n            backend:\n              service:\n                name: skills\n                port:\n                  number: 80\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: response-403\n                port:\n                  name: use-annotation\n</code></pre>"},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#service","title":"Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: skills\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-name: skills-nlb\n    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance\n    service.beta.kubernetes.io/aws-load-balancer-target-node-labels: node=app\n    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: http\n    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /health\n    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: $CERTIFICATE_ARN\n    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: \"443\"\nspec:\n  type: LoadBalancer\n  loadBalancerClass: service.k8s.aws/nlb\n  selector:\n    app: skills\n  ports:\n    - protocol: TCP\n      port: 443\n      targetPort: 80\n</code></pre>"},{"location":"EKS/AWS%20Load%20Balancer%20Controller/#targetgroupbinding","title":"TargetGroupBinding","text":"<pre><code>apiVersion: elbv2.k8s.aws/v1beta1\nkind: TargetGroupBinding\nmetadata:\n  name: skills\nspec:\n  nodeSelector:\n    matchLabels:\n      node: app\n  serviceRef:\n    name: skills-service\n    port: 80\n  targetGroupARN: $TARGET_ARN\n</code></pre>"},{"location":"EKS/AWS%20Node%20Termination%20Handler%20%28NTH%29/","title":"AWS Node Termination Handler (NTH)","text":"<p>This project ensures that the Kubernetes control plane responds appropriately to events that can cause your EC2 instance to become unavailable, such as EC2 maintenance events, EC2 Spot interruptions, ASG Scale-In, ASG AZ Rebalance, and EC2 Instance Termination via the API or Console. If not handled, your application code may not stop gracefully, take longer to recover full availability, or accidentally schedule work to nodes that are going down.</p>"},{"location":"EKS/AWS%20Node%20Termination%20Handler%20%28NTH%29/#deploy-cloudformation-stack","title":"Deploy CloudFormation Stack","text":"<p>Please note that you need to set the STACK_NAME variable. <pre><code>curl -LO https://raw.githubusercontent.com/aws/aws-node-termination-handler/main/docs/cfn-template.yaml\n\naws cloudformation deploy \\\n    --template-file ./cfn-template.yaml \\\n    --stack-name $STACK_NAME\n</code></pre></p>"},{"location":"EKS/AWS%20Node%20Termination%20Handler%20%28NTH%29/#create-an-asg-termination-lifecycle-hook","title":"Create an ASG Termination Lifecycle Hook","text":"<p>Please note that you need to set the AUTO_SCALING_GROUP_NAME variable. <pre><code>aws autoscaling put-lifecycle-hook \\\n  --lifecycle-hook-name=my-k8s-term-hook \\\n  --auto-scaling-group-name=$AUTO_SCALING_GROUP_NAME \\\n  --lifecycle-transition=autoscaling:EC2_INSTANCE_TERMINATING \\\n  --default-result=CONTINUE \\\n  --heartbeat-timeout=300\n</code></pre></p>"},{"location":"EKS/AWS%20Node%20Termination%20Handler%20%28NTH%29/#auto-scaling-group-tagging","title":"Auto Scaling Group Tagging","text":"<p>Please note that you need to set the AUTO_SCALING_GROUP_NAME variable. <pre><code>aws autoscaling create-or-update-tags \\\n  --tags ResourceId=$AUTO_SCALING_GROUP_NAME,ResourceType=auto-scaling-group,Key=aws-node-termination-handler/managed,Value=,PropagateAtLaunch=true\n</code></pre></p>"},{"location":"EKS/AWS%20Node%20Termination%20Handler%20%28NTH%29/#create-serviceaccount","title":"Create ServiceAccount","text":"<p>nth-policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"autoscaling:CompleteLifecycleAction\",\n                \"autoscaling:DescribeAutoScalingInstances\",\n                \"autoscaling:DescribeTags\",\n                \"ec2:DescribeInstances\",\n                \"sqs:DeleteMessage\",\n                \"sqs:ReceiveMessage\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre> <pre><code>POLICY_ARN=$(aws iam create-policy \\\n    --policy-name nth-policy \\\n    --policy-document file://nth-policy.json \\\n    --query 'Policy.Arn' \\\n    --output text\n)\n\neksctl utils associate-iam-oidc-provider --cluster $CLUSTER_NAME --approve\n\neksctl create iamserviceaccount \\\n    --cluster $CLUSTER_NAME \\\n    --name aws-node-termination-handler \\\n    --namespace kube-system \\\n    --attach-policy-arn $POLICY_ARN \\\n    --role-name AWS_NTH_Role \\\n    --approve\n</code></pre></p>"},{"location":"EKS/AWS%20Node%20Termination%20Handler%20%28NTH%29/#install-with-helm","title":"Install with Helm","text":"<p>Please note that you need to set the STACK_NAME variable. <pre><code>QUEUE_URL=$(aws cloudformation describe-stacks \\\n    --stack-name $STACK_NAME \\\n    --query \"Stacks[0].Outputs[?OutputKey=='QueueURL'].OutputValue\" \\\n    --output text\n)\n\nhelm repo add eks https://aws.github.io/eks-charts\n\nhelm install aws-node-termination-handler eks/aws-node-termination-handler \\\n    --namespace kube-system \\\n    --set serviceAccount.create=false \\\n    --set serviceAccount.name=aws-node-termination-handler \\\n    --set enableSqsTerminationDraining=true \\\n    --set queueURL=$QUEUE_URL\n</code></pre></p>"},{"location":"EKS/Advanced%20Tools/","title":"Advanced Tools","text":""},{"location":"EKS/Advanced%20Tools/#kubectx-kubens","title":"kubectx + kubens","text":"<p>kubectx is a tool to switch between contexts (clusters) on kubectl faster. kubens is a tool to switch between Kubernetes namespaces (and configure them for kubectl) easily. <pre><code>git clone https://github.com/ahmetb/kubectx /opt/kubectx\nln -s /opt/kubectx/kubectx /usr/local/bin/kubectx\nln -s /opt/kubectx/kubens /usr/local/bin/kubens\nkubectx -h\nkubens -h\n</code></pre></p>"},{"location":"EKS/Advanced%20Tools/#k9s","title":"K9s","text":"<p>K9s is a terminal based UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your deployed applications in the wild. <pre><code>K9S_LATEST=$(curl --silent \"https://api.github.com/repos/derailed/k9s/tags\" | jq -r '.[0].name')\ncurl --silent --location \"https://github.com/derailed/k9s/releases/download/${K9S_LATEST}/k9s_Linux_amd64.tar.gz\" | tar xz -C /tmp\nmv /tmp/k9s /usr/local/bin\nk9s version\n</code></pre></p>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/","title":"Basic Tool &amp; Connect","text":""},{"location":"EKS/Basic%20Tool%20%26%20Connect/#install-aws-cli-v2","title":"Install AWS CLI V2","text":"<pre><code>pip3 install awscli --upgrade\n</code></pre>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/#install-docker","title":"Install Docker","text":"<p>Docker is responsible for pushing images to ECR. <pre><code>yum install -y docker\nsystemctl start docker\nsystemctl enable docker\nusermod -a -G docker ec2-user\n</code></pre></p>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/#install-kubectl","title":"Install Kubectl","text":"<p>Kubectl is a command line tool for communicating with a Kubernetes cluster's control plane, using the Kubernetes API. <pre><code>curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.33.0/2025-05-01/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\nkubectl completion bash | tee /etc/bash_completion.d/kubectl &gt; /dev/null\n</code></pre></p> <ul> <li> <p>1.32 Version <pre><code>curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.3/2025-04-17/bin/linux/amd64/kubectl\n</code></pre></p> </li> <li> <p>1.31 Version <pre><code>curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.31.7/2025-04-17/bin/linux/amd64/kubectl\n</code></pre></p> </li> <li> <p>1.30 Version <pre><code>curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.11/2025-04-17/bin/linux/amd64/kubectl\n</code></pre></p> </li> <li> <p>1.29 Version <pre><code>curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.29.15/2025-04-17/bin/linux/amd64/kubectl\n</code></pre></p> </li> </ul>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/#install-helm","title":"Install Helm","text":"<p>Helm is the package manager for Kubernetes. <pre><code>curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3\nchmod 700 get_helm.sh\n./get_helm.sh\n</code></pre></p>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/#install-eksctl","title":"Install eksctl","text":"<p>eksctl is a simple CLI tool for creating and managing clusters on EKS. <pre><code>curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nmv /tmp/eksctl /usr/local/bin\n</code></pre></p>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/#install-all-ec2-user-data-script","title":"Install All (EC2 User Data Script)","text":"<p>Please note that the HOME path must be set to /home/ec2-user. <pre><code>#!/bin/bash\nyum update -y\nyum install -y docker\nsystemctl start docker\nsystemctl enable docker\nusermod -a -G docker ec2-user\ncurl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.33.0/2025-05-01/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\nkubectl completion bash | tee /etc/bash_completion.d/kubectl &gt; /dev/null\ncurl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3\nchmod 700 get_helm.sh\n./get_helm.sh\ncurl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nmv /tmp/eksctl /usr/local/bin\n</code></pre></p>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/#connect-to-eks-cluster","title":"Connect to EKS Cluster","text":""},{"location":"EKS/Basic%20Tool%20%26%20Connect/#set-frequently-used-environment-variables","title":"Set frequently used environment variables","text":"<pre><code>echo \"export CLUSTER_NAME=$(eksctl get clusters -o json | jq -r '.[0].Name')\" &gt;&gt; ~/.bashrc\necho \"export AWS_DEFAULT_REGION=$(aws configure get region)\" &gt;&gt; ~/.bashrc\necho \"export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre>"},{"location":"EKS/Basic%20Tool%20%26%20Connect/#update-kubeconfig","title":"Update Kubeconfig","text":"<pre><code>aws eks update-kubeconfig --name $CLUSTER_NAME\n</code></pre>"},{"location":"EKS/Calico%20NetworkPolicy/","title":"Calico NetworkPolicy","text":""},{"location":"EKS/Calico%20NetworkPolicy/#install-calicoctl","title":"Install calicoctl","text":"<pre><code>curl -L https://github.com/projectcalico/calico/releases/download/v3.27.2/calicoctl-linux-amd64 -o calicoctl\nchmod +x ./calicoctl\nsudo mv ./calicoctl /usr/local/bin/calicoctl\n</code></pre>"},{"location":"EKS/Calico%20NetworkPolicy/#install-calico-with-helm","title":"Install Calico with Helm","text":"<pre><code>helm repo add projectcalico https://docs.tigera.io/calico/charts\necho '{ installation: {kubernetesProvider: EKS }}' &gt; values.yaml\nhelm install calico projectcalico/tigera-operator \\\n  --version v3.29.2 -f values.yaml \\\n  --namespace tigera-operator --create-namespace\n</code></pre>"},{"location":"EKS/Calico%20NetworkPolicy/#permissions-and-environment-variable-settings","title":"Permissions and environment variable settings","text":"<pre><code>cat &lt;&lt; EOF &gt; append.yaml\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  verbs:\n  - patch\nEOF\nkubectl apply -f &lt;(cat &lt;(kubectl get clusterrole aws-node -o yaml) append.yaml)\n\nkubectl set env daemonset aws-node -n kube-system ANNOTATE_POD_IP=true\n\nCALICO_POD_NAME=$(kubectl get pods -n calico-system -o name | grep calico-kube-controllers- | cut -d '/' -f 2)\nkubectl delete pod $CALICO_POD_NAME -n calico-system\n\nCALICO_POD_NAME=$(kubectl get pods -n calico-system -o name | grep calico-kube-controllers- | cut -d '/' -f 2)\nkubectl describe pod $CALICO_POD_NAME -n calico-system | grep vpc.amazonaws.com/pod-ips\n</code></pre>"},{"location":"EKS/Calico%20NetworkPolicy/#resource","title":"Resource","text":""},{"location":"EKS/Calico%20NetworkPolicy/#kubernetes-networkpolicy","title":"Kubernetes NetworkPolicy","text":"<p>NetworkPolicy Maker <pre><code>apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: skills\nspec:\n  podSelector:\n    matchLabels:\n      app: skills\n  policyTypes:\n  - Ingress\n  - Egress\n  ingress:\n    - from:\n      - ipBlock:\n          cidr: 10.0.0.0/24\n    - from:\n      - ipBlock:\n          cidr: 10.0.1.0/24\n    - from:\n      - ipBlock:\n          cidr: 10.0.2.0/24\n  egress:\n    - to:\n      - ipBlock:\n          cidr: 0.0.0.0/0\n      ports:\n        - port: 53\n          protocol: UDP\n        - port: 53\n          protocol: TCP\n        - port: 80\n          protocol: TCP\n        - port: 443\n          protocol: TCP\n</code></pre></p>"},{"location":"EKS/Calico%20NetworkPolicy/#calico-networkpolicy_1","title":"Calico NetworkPolicy","text":"<p>GlobalNetworkPolicy <pre><code>apiVersion: projectcalico.org/v3\nkind: GlobalNetworkPolicy\nmetadata:\n  name: default-deny\nspec:\n  selector: projectcalico.org/namespace not in  {'kube-system', 'calico-system', 'calico-apiserver', 'tigera-operator'}\n  types:\n  - Ingress\n  - Egress\n</code></pre> NetworkPolicy <pre><code>apiVersion: projectcalico.org/v3\nkind: NetworkPolicy\nmetadata:\n  name: match\n  namespace: skills\nspec:\n  selector: app == 'match'\n  ingress:\n    - action: Deny\n      source:\n        selector: app == 'stress'\n    - action: Allow\n      source:\n        nets:\n          - 10.0.0.0/24\n          - 10.0.1.0/24\n  egress:\n    - action: Allow\n      protocol: TCP\n      destination:\n        ports:\n          - 53\n          - 80\n          - 443\n    - action: Allow\n      protocol: UDP\n      destination:\n        ports:\n          - 53\n</code></pre></p>"},{"location":"EKS/Cluster%20Autoscaler/","title":"Cluster Autoscaler","text":"<p>Cluster Autoscaler - a component that automatically adjusts the size of a Kubernetes Cluster so that all pods have a place to run and there are no unneeded nodes.</p>"},{"location":"EKS/Cluster%20Autoscaler/#create-iam-policy","title":"Create IAM Policy","text":"<p>cluster-autoscaler-policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"autoscaling:DescribeAutoScalingGroups\",\n            \"autoscaling:DescribeAutoScalingInstances\",\n            \"autoscaling:DescribeLaunchConfigurations\",\n            \"autoscaling:DescribeScalingActivities\",\n            \"autoscaling:DescribeTags\",\n            \"ec2:DescribeInstanceTypes\",\n            \"ec2:DescribeLaunchTemplateVersions\"\n        ],\n        \"Resource\": [\"*\"]\n    },\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"autoscaling:SetDesiredCapacity\",\n            \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n            \"ec2:DescribeImages\",\n            \"ec2:GetInstanceTypesFromInstanceRequirements\",\n            \"eks:DescribeNodegroup\"\n        ],\n        \"Resource\": [\"*\"]\n    }]\n}\n</code></pre> <pre><code>POLICY_ARN=$(aws iam create-policy \\\n    --policy-name AmazonEKSClusterAutoscalerPolicy \\\n    --policy-document file://cluster-autoscaler-policy.json \\\n    --query 'Policy.Arn' \\\n    --output text\n)\n</code></pre></p>"},{"location":"EKS/Cluster%20Autoscaler/#create-serviceaccount","title":"Create ServiceAccount","text":"<pre><code>eksctl utils associate-iam-oidc-provider --cluster=$CLUSTER_NAME --approve\n\neksctl create iamserviceaccount \\\n    --cluster=$CLUSTER_NAME \\\n    --namespace=kube-system \\\n    --name=cluster-autoscaler \\\n    --attach-policy-arn=$POLICY_ARN \\\n    --override-existing-serviceaccounts \\\n    --approve\n</code></pre>"},{"location":"EKS/Cluster%20Autoscaler/#install-with-helm","title":"Install with Helm","text":"<pre><code>helm repo add autoscaler https://kubernetes.github.io/autoscaler\nhelm repo update autoscaler\n\nhelm install cluster-autoscaler autoscaler/cluster-autoscaler \\\n    --namespace kube-system \\\n    --set autoDiscovery.clusterName=$CLUSTER_NAME \\\n    --set awsRegion=$AWS_DEFAULT_REGION \\\n    --set cloudProvider=aws \\\n    --set extraArgs.logtostderr=true \\\n    --set extraArgs.stderrthreshold=info \\\n    --set extraArgs.v=4 \\\n    --set extraArgs.skip-nodes-with-local-storage=false \\\n    --set extraArgs.expander=least-waste \\\n    --set extraArgs.balance-similar-node-groups=true \\\n    --set extraArgs.skip-nodes-with-system-pods=false \\\n    --set rbac.serviceAccount.create=false \\\n    --set rbac.serviceAccount.name=cluster-autoscaler\n</code></pre>"},{"location":"EKS/EBS%20CSI%20Driver/","title":"EBS CSI Driver","text":""},{"location":"EKS/EBS%20CSI%20Driver/#create-serviceaccount","title":"Create ServiceAccount","text":"<pre><code>eksctl create iamserviceaccount \\\n    --name ebs-csi-controller-sa \\\n    --namespace kube-system \\\n    --cluster $CLUSTER_NAME \\\n    --role-name AmazonEKS_EBS_CSI_DriverRole \\\n    --role-only \\\n    --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \\\n    --approve\n</code></pre>"},{"location":"EKS/EBS%20CSI%20Driver/#create-addon-with-eksctl","title":"Create Addon with Eksctl","text":"<pre><code>eksctl create addon --name aws-ebs-csi-driver --cluster $CLUSTER_NAME --service-account-role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/AmazonEKS_EBS_CSI_DriverRole --force\n</code></pre>"},{"location":"EKS/EFS%20CSI%20Driver/","title":"EFS CSI Driver","text":""},{"location":"EKS/EFS%20CSI%20Driver/#create-serviceaccount","title":"Create ServiceAccount","text":"<pre><code>eksctl create iamserviceaccount \\\n    --name efs-csi-controller-sa \\\n    --namespace kube-system \\\n    --cluster $CLUSTER_NAME \\\n    --role-name AmazonEKS_EFS_CSI_DriverRole \\\n    --role-only \\\n    --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy \\\n    --approve\n</code></pre>"},{"location":"EKS/EFS%20CSI%20Driver/#create-addon-with-eksctl","title":"Create Addon with Eksctl","text":"<pre><code>eksctl create addon --name aws-efs-csi-driver --cluster $CLUSTER_NAME --service-account-role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/AmazonEKS_EFS_CSI_DriverRole --force\n</code></pre>"},{"location":"EKS/EKS%20IAM%20Role/","title":"EKS IAM Role","text":""},{"location":"EKS/EKS%20IAM%20Role/#cluster","title":"Cluster","text":"<p>cluster-trust-policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": \"eks.amazonaws.com\"\n        },\n        \"Action\": \"sts:AssumeRole\"\n    }]\n}\n</code></pre> <pre><code>aws iam create-role \\\n  --role-name eksClusterRole \\\n  --assume-role-policy-document file://cluster-trust-policy.json\n\naws iam attach-role-policy \\\n  --policy-arn arn:aws:iam::aws:policy/AmazonEKSClusterPolicy \\\n  --role-name eksClusterRole\n</code></pre></p>"},{"location":"EKS/EKS%20IAM%20Role/#node","title":"Node","text":"<p>node-role-trust-relationship.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": \"ec2.amazonaws.com\"\n        },\n        \"Action\": \"sts:AssumeRole\"\n    }]\n} \n</code></pre> <pre><code>aws iam create-role \\\n  --role-name AmazonEKSNodeRole \\\n  --assume-role-policy-document file://node-role-trust-relationship.json\n\naws iam attach-role-policy \\\n  --policy-arn arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy \\\n  --role-name AmazonEKSNodeRole\naws iam attach-role-policy \\\n  --policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly \\\n  --role-name AmazonEKSNodeRole\naws iam attach-role-policy \\\n  --policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \\\n  --role-name AmazonEKSNodeRole\n</code></pre></p>"},{"location":"EKS/EKS%20IAM%20Role/#fargate","title":"Fargate","text":"<p>pod-execution-role-trust-policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Condition\": {\n            \"ArnLike\": {\n                \"aws:SourceArn\": \"arn:aws:eks:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:fargateprofile/$CLUSTER_NAME/*\"\n            }\n        },\n        \"Principal\": {\n            \"Service\": \"eks-fargate-pods.amazonaws.com\"\n        },\n        \"Action\": \"sts:AssumeRole\"\n    }]\n}\n</code></pre> <pre><code>aws iam create-role \\\n  --role-name AmazonEKSFargatePodExecutionRole \\\n  --assume-role-policy-document file://pod-execution-role-trust-policy.json\n\naws iam attach-role-policy \\\n  --policy-arn arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy \\\n  --role-name AmazonEKSFargatePodExecutionRole\n</code></pre></p>"},{"location":"EKS/External%20DNS/","title":"External DNS","text":""},{"location":"EKS/External%20DNS/#create-iam-policy","title":"Create IAM Policy","text":"<p>policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"route53:ChangeResourceRecordSets\"\n        ],\n        \"Resource\": [\n            \"arn:aws:route53:::hostedzone/*\"\n        ]\n    },\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"route53:ListHostedZones\",\n            \"route53:ListResourceRecordSets\",\n            \"route53:ListTagsForResource\"\n        ],\n        \"Resource\": [\n            \"*\"\n        ]\n    }]\n}\n</code></pre> <pre><code>aws iam create-policy --policy-name \"AllowExternalDNSUpdates\" \\\n  --policy-document file://policy.json\n\nexport POLICY_ARN=$(aws iam list-policies \\\n  --query 'Policies[?PolicyName==`AllowExternalDNSUpdates`].Arn' --output text)\n</code></pre></p>"},{"location":"EKS/External%20DNS/#create-serviceaccount","title":"Create ServiceAccount","text":"<pre><code>eksctl create iamserviceaccount \\\n  --cluster $CLUSTER_NAME \\\n  --name \"external-dns\" \\\n  --namespace externaldns \\\n  --attach-policy-arn $POLICY_ARN \\\n  --approve\n</code></pre>"},{"location":"EKS/External%20DNS/#install-with-helm","title":"Install with Helm","text":"<p>values.yaml<pre><code>env:\n  - name: AWS_DEFAULT_REGION\n    value: ap-northeast-2\n</code></pre> <pre><code>helm repo add external-dns https://kubernetes-sigs.github.io/external-dns/\nhelm upgrade --install external-dns external-dns/external-dns -f values.yaml \\\n    --version 1.14.3 \\\n    --namespace externaldns \\\n    --set serviceAccount.create=false \\\n    --set serviceAccount.name=external-dns\n</code></pre></p>"},{"location":"EKS/External%20DNS/#use-case","title":"Use Case","text":""},{"location":"EKS/External%20DNS/#ingress","title":"Ingress","text":"<pre><code>metadata:\n  annotations:\n    external-dns.alpha.kubernetes.io/hostname: test.app.local\n</code></pre>"},{"location":"EKS/External%20Secrets%20Operator/","title":"External Secrets Operator","text":""},{"location":"EKS/External%20Secrets%20Operator/#install","title":"Install","text":"<pre><code>helm repo add external-secrets https://charts.external-secrets.io\nhelm install external-secrets \\\n   external-secrets/external-secrets \\\n   -n external-secrets \\\n   --create-namespace \\\n   --set installCRDs=true \\\n   --set webhook.port=9443\n</code></pre>"},{"location":"EKS/External%20Secrets%20Operator/#create-serviceaccount","title":"Create ServiceAccount","text":""},{"location":"EKS/External%20Secrets%20Operator/#secrets-manager","title":"Secrets Manager","text":"<p>Please note that you need to set SECRET_ARN and KEY_ARN. iam_policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\"secretsmanager:GetSecretValue\", \"secretsmanager:DescribeSecret\"],\n        \"Resource\": [\"$SECRET_ARN\"]\n    },\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": [\"kms:Decrypt\"],\n        \"Resource\": [\"$KEY_ARN\"]\n    }]\n}\n</code></pre></p>"},{"location":"EKS/External%20Secrets%20Operator/#command","title":"Command","text":"<p>Please note that you need to set NAMESPACE. <pre><code>POLICY_ARN=$(aws --region \"$AWS_DEFAULT_REGION\" --query Policy.Arn --output text iam create-policy --policy-name secretsmanager-policy --policy-document file://iam_policy.json)\neksctl create iamserviceaccount --name access-secrets --cluster $CLUSTER_NAME --namespace $NAMESPACE --attach-policy-arn $POLICY_ARN --approve --override-existing-serviceaccounts\n</code></pre></p>"},{"location":"EKS/External%20Secrets%20Operator/#secretstore","title":"SecretStore","text":"<p>SecretStore is used to define the external secrets store and the authentication mechanisms to access the declared store. <pre><code>apiVersion: external-secrets.io/v1\nkind: SecretStore\nmetadata:\n  name: aws-secrets\nspec:\n  provider:\n    aws:\n      service: SecretsManager\n      region: ap-northeast-2\n      auth:\n        jwt:\n          serviceAccountRef:\n            name: access-secrets\n</code></pre></p>"},{"location":"EKS/External%20Secrets%20Operator/#externalsecret","title":"ExternalSecret","text":"<p>ExternalSecret defines what data to fetch from the secret store defined in the SecretStore resource.</p>"},{"location":"EKS/External%20Secrets%20Operator/#data","title":"data","text":"<pre><code>apiVersion: external-secrets.io/v1\nkind: ExternalSecret\nmetadata:\n  name: db-secret\nspec:\n  refreshInterval: 1h\n  secretStoreRef:\n    name: aws-secrets\n    kind: SecretStore\n  target:\n    name: db-secret\n    creationPolicy: Owner\n  data:\n  - secretKey: username\n    remoteRef:\n      key: cred/mysql\n      property: username\n  - secretKey: password\n    remoteRef:\n      key: cred/mysql\n      property: password\n</code></pre>"},{"location":"EKS/External%20Secrets%20Operator/#datafrom","title":"dataFrom","text":"<pre><code>apiVersion: external-secrets.io/v1\nkind: ExternalSecret\nmetadata:\n  name: db-secret\nspec:\n  refreshInterval: 1h\n  secretStoreRef:\n    name: aws-secrets\n    kind: SecretStore\n  target:\n    name: db-secret\n    creationPolicy: Owner\n  dataFrom:\n  - extract:\n      key: cred/mysql\n</code></pre>"},{"location":"EKS/Helm%20Chart/","title":"Helm Chart","text":""},{"location":"EKS/Helm%20Chart/#command","title":"Command","text":""},{"location":"EKS/Helm%20Chart/#create","title":"Create","text":"<pre><code>helm create [product]\n</code></pre>"},{"location":"EKS/Helm%20Chart/#check","title":"Check","text":"<pre><code>helm lint [Root Path]\nhelm template [Root Path]\n</code></pre>"},{"location":"EKS/Helm%20Chart/#install-upgrade","title":"Install / Upgrade","text":"<pre><code>helm install [Release Name] . --set version=latest -n wsi --create-namespace\nhelm upgrade [Release Name] . --set version=latest -n wsi\n</code></pre>"},{"location":"EKS/Helm%20Chart/#delete","title":"Delete","text":"<pre><code>helm delete [Release Name]\n</code></pre>"},{"location":"EKS/Helm%20Chart/#file-example","title":"File Example","text":""},{"location":"EKS/Helm%20Chart/#chartyaml","title":"Chart.yaml","text":"<pre><code>apiVersion: v2\n\nname: product\ndescription: Product Helm Chart (Using MySQL Aurora)\ntype: application\n\nversion: 0.1.0\nappVersion: \"1.0.0\"\n</code></pre>"},{"location":"EKS/Helm%20Chart/#valuesyaml","title":"values.yaml","text":"<pre><code>image.tag: \"1.0.0\"\n</code></pre>"},{"location":"EKS/Helm%20Chart/#templatesnotestxt","title":"templates/NOTES.txt","text":"<pre><code>Thank you for installing {{ .Chart.Name }}.\n\nYour release is named {{ .Release.Name }}.\n\nTo learn more about the release, try:\n\n  $ helm status {{ .Release.Name }}\n  $ helm get all {{ .Release.Name }}\n</code></pre>"},{"location":"EKS/Helm%20Chart/#templatesyaml","title":"templates/*.yaml","text":"<pre><code>metadata:\n  name: {{ .Release.Name }}\n  namespace: {{ .Release.Namespace }}\n</code></pre>"},{"location":"EKS/Helm%20Chart/#templatesdeploymentyaml","title":"templates/deployment.yaml","text":"<pre><code>spec:\n  template:\n    spec:\n      containers:\n      - name: nginx\n        image: {{ .Values.image.name }}:{{ .Values.image.tag }}\n</code></pre>"},{"location":"EKS/Horizontal%20Pod%20Autoscaling%C2%A0%28HPA%29/","title":"Horizontal Pod Autoscaling\u00a0(HPA)","text":""},{"location":"EKS/Horizontal%20Pod%20Autoscaling%C2%A0%28HPA%29/#install-metrics-server","title":"Install Metrics Server","text":"<p>Metrics Server collects resource metrics from Kubelets and exposes them in Kubernetes apiserver through Metrics API for use by Horizontal Pod Autoscaler and Vertical Pod Autoscaler. Metrics API can also be accessed by <code>kubectl top</code>, making it easier to debug autoscaling pipelines. <pre><code>helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/\nhelm upgrade --install metrics-server metrics-server/metrics-server -n kube-system\n</code></pre></p>"},{"location":"EKS/Horizontal%20Pod%20Autoscaling%C2%A0%28HPA%29/#hpa-resource","title":"HPA Resource","text":"<pre><code>apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: skills\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: skills\n  minReplicas: 2\n  maxReplicas: 20\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 50\n  behavior:\n    scaleDown:\n      stabilizationWindowSeconds: 60\n</code></pre>"},{"location":"EKS/Job%20with%20AWS%20Batch/","title":"Job with AWS Batch","text":""},{"location":"EKS/Job%20with%20AWS%20Batch/#create-namespace","title":"Create Namespace","text":"<pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\n  name: batch\n  labels:\n    name: batch\n</code></pre>"},{"location":"EKS/Job%20with%20AWS%20Batch/#rbac-setting","title":"RBAC Setting","text":"<p><pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: batch-cluster-role\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"namespaces\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"nodes\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"pods\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"apps\"]\n    resources: [\"daemonsets\", \"deployments\", \"statefulsets\", \"replicasets\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"rbac.authorization.k8s.io\"]\n    resources: [\"clusterroles\", \"clusterrolebindings\"]\n    verbs: [\"get\", \"list\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: batch-cluster-role-binding\nsubjects:\n- kind: User\n  name: batch\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: batch-cluster-role\n  apiGroup: rbac.authorization.k8s.io\n</code></pre> <pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: batch-compute-environment-role\n  namespace: batch\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"pods\"]\n    verbs: [\"create\", \"get\", \"list\", \"watch\", \"delete\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"serviceaccounts\"]\n    verbs: [\"get\", \"list\"]\n  - apiGroups: [\"rbac.authorization.k8s.io\"]\n    resources: [\"roles\", \"rolebindings\"]\n    verbs: [\"get\", \"list\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: batch-compute-environment-role-binding\n  namespace: batch\nsubjects:\n- kind: User\n  name: batch\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: batch-compute-environment-role\n  apiGroup: rbac.authorization.k8s.io\n</code></pre> <pre><code>eksctl create iamidentitymapping \\\n    --cluster $CLUSTER_NAME \\\n    --arn \"arn:aws:iam::$AWS_ACCOUNT_ID:role/AWSServiceRoleForBatch\" \\\n    --username batch\n</code></pre></p>"},{"location":"EKS/Karpenter/","title":"Karpenter","text":"<p>Just-in-time Nodes for Any Kubernetes Cluster</p>"},{"location":"EKS/Karpenter/#aws-infrastructure-setting","title":"AWS Infrastructure Setting","text":"<p>Use CloudFormation to set up the infrastructure needed by the EKS cluster.  <pre><code>KARPENTER_VERSION=$(curl -sL \"https://api.github.com/repos/aws/karpenter/releases/latest\" | jq -r \".tag_name\")\nAMI_ID=$(aws ssm get-parameter --name /aws/service/bottlerocket/aws-k8s-1.31/x86_64/latest/image_id --query \"Parameter.Value\" --output text)\nTEMPOUT=$(mktemp)\n\ncurl -fsSL https://raw.githubusercontent.com/aws/karpenter/\"${KARPENTER_VERSION}\"/website/content/en/preview/getting-started/getting-started-with-karpenter/cloudformation.yaml  &gt; $TEMPOUT \\\n&amp;&amp; aws cloudformation deploy \\\n  --stack-name \"Karpenter-${CLUSTER_NAME}\" \\\n  --template-file \"${TEMPOUT}\" \\\n  --capabilities CAPABILITY_NAMED_IAM \\\n  --parameter-overrides \"ClusterName=${CLUSTER_NAME}\"\n</code></pre></p>"},{"location":"EKS/Karpenter/#iam-setting","title":"IAM Setting","text":"<p>Create a Kubernetes service account and AWS IAM Role, and associate them using IRSA to let Karpenter launch instances. <pre><code>eksctl utils associate-iam-oidc-provider --cluster ${CLUSTER_NAME} --approve\n\neksctl create iamidentitymapping \\\n  --username system:node:{{EC2PrivateDNSName}} \\\n  --cluster \"${CLUSTER_NAME}\" \\\n  --arn \"arn:aws:iam::${AWS_ACCOUNT_ID}:role/KarpenterNodeRole-${CLUSTER_NAME}\" \\\n  --group system:bootstrappers \\\n  --group system:nodes\n\neksctl create iamserviceaccount \\\n  --cluster \"${CLUSTER_NAME}\" --name karpenter --namespace karpenter \\\n  --role-name \"${CLUSTER_NAME}-karpenter\" \\\n  --attach-policy-arn \"arn:aws:iam::${AWS_ACCOUNT_ID}:policy/KarpenterControllerPolicy-${CLUSTER_NAME}\" \\\n  --role-only \\\n  --approve\n</code></pre></p>"},{"location":"EKS/Karpenter/#install","title":"Install","text":"<p>Run helm to install karpenter. <pre><code>KARPENTER_IAM_ROLE_ARN=\"arn:aws:iam::${AWS_ACCOUNT_ID}:role/${CLUSTER_NAME}-karpenter\"\n\nhelm upgrade karpenter oci://public.ecr.aws/karpenter/karpenter \\\n  --install --version ${KARPENTER_VERSION:1} --namespace karpenter --create-namespace \\\n  --set serviceAccount.annotations.\"eks\\.amazonaws\\.com/role-arn\"=${KARPENTER_IAM_ROLE_ARN} \\\n  --set settings.clusterName=${CLUSTER_NAME} \\\n  --set settings.interruptionQueueName=${CLUSTER_NAME} \\\n  --set controller.resources.requests.cpu=1 \\\n  --set controller.resources.requests.memory=1Gi \\\n  --set controller.resources.limits.cpu=1 \\\n  --set controller.resources.limits.memory=1Gi \\\n  --wait\n</code></pre></p>"},{"location":"EKS/Karpenter/#tagging-to-resources","title":"Tagging to Resources","text":"<p>Tag the subnet and security group the node will use. Please note that you need to set the ASG_NAME variable (auto scaling group name of addon node group). <pre><code>SUBNETS=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $ASG_NAME --query 'AutoScalingGroups[0].VPCZoneIdentifier' --output text | tr ',' '\\n')\nfor SUBNET in $SUBNETS\ndo\n    aws ec2 create-tags --resources $SUBNET --tags Key=karpenter.sh/discovery,Value=${CLUSTER_NAME}\ndone\n\nLAUNCH_TEMPLATE_ID=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $ASG_NAME --query 'AutoScalingGroups[0].MixedInstancesPolicy.LaunchTemplate.LaunchTemplateSpecification.LaunchTemplateId' --output text)\nSECURITY_GROUPS=$(aws ec2 describe-launch-template-versions --launch-template-id $LAUNCH_TEMPLATE_ID --versions $Latest --query 'LaunchTemplateVersions[0].LaunchTemplateData.SecurityGroupIds' --output text)\nfor SECURITY_GROUP in $SECURITY_GROUPS\ndo\n    aws ec2 create-tags --resources $SECURITY_GROUP --tags Key=karpenter.sh/discovery,Value=${CLUSTER_NAME}\ndone\n</code></pre></p>"},{"location":"EKS/Karpenter/#create-nodepool","title":"Create NodePool","text":"<p>A single Karpenter NodePool is capable of handling many different pod shapes. Karpenter makes scheduling and provisioning decisions based on pod attributes such as labels and affinity. nodepool.yaml<pre><code>apiVersion: karpenter.sh/v1\nkind: NodePool\nmetadata:\n  name: default\nspec:\n  template:\n    metadata:\n      labels:\n        node: app\n    spec:\n      nodeClassRef:\n        group: karpenter.k8s.aws\n        kind: EC2NodeClass\n        name: default\n      taints:\n        - key: node\n          value: app\n          effect: NoSchedule\n      requirements:\n        - key: kubernetes.io/arch\n          operator: In\n          values: [\"amd64\"]\n        - key: kubernetes.io/os\n          operator: In\n          values: [\"linux\"]\n        - key: karpenter.sh/capacity-type\n          operator: In\n          values: [\"on-demand\"]\n        - key: karpenter.k8s.aws/instance-category\n          operator: In\n          values: [\"c\", \"m\", \"r\"]\n        - key: karpenter.k8s.aws/instance-generation\n          operator: Gt\n          values: [\"2\"]\n#       - key: node.kubernetes.io/instance-type\n#         operator: In\n#         values: [\"t3.medium\", \"t3.large\"]\n      expireAfter: 720h\n  disruption:\n    consolidationPolicy: WhenEmptyOrUnderutilized\n    consolidateAfter: 1m\n  limits:\n    cpu: 1000\n</code></pre> nodeclass.yaml<pre><code>apiVersion: karpenter.k8s.aws/v1\nkind: EC2NodeClass\nmetadata:\n  name: default\nspec:\n  amiFamily: Bottlerocket\n  amiSelectorTerms:\n    - id: ${AMI_ID}\n  role: \"KarpenterNodeRole-${CLUSTER_NAME}\"\n  subnetSelectorTerms:\n    - tags:\n        karpenter.sh/discovery: ${CLUSTER_NAME}\n  securityGroupSelectorTerms:\n    - tags:\n        karpenter.sh/discovery: ${CLUSTER_NAME}\n  metadataOptions:\n    httpPutResponseHopLimit: 1\n  tags:\n    Name: wsi-app-node\n</code></pre></p>"},{"location":"EKS/Keda/","title":"Keda","text":""},{"location":"EKS/Keda/#create-policy","title":"Create Policy","text":"iam_policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"GetQueueAttributes\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"sqs:GetQueueAttributes\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre> <pre><code>aws iam create-policy \\\n    --policy-name SqsGetAttributesPolicy \\\n    --policy-document file://iam_policy.json\n</code></pre>"},{"location":"EKS/Keda/#create-serviceaccount","title":"Create ServiceAccount","text":"<pre><code>kubectl create namespace keda\neksctl create iamserviceaccount \\\n  --cluster=$CLUSTER_NAME \\\n  --namespace=keda \\\n  --name=keda-operator \\\n  --role-name=keda-operator-role \\\n  --attach-policy-arn=arn:aws:iam::$AWS_ACCOUNT_ID:policy/SqsGetAttributesPolicy \\\n  --approve\n</code></pre>"},{"location":"EKS/Keda/#install-with-helm","title":"Install with Helm","text":"<pre><code>helm repo add kedacore https://kedacore.github.io/charts\nhelm install keda kedacore/keda \\\n  -n keda \\\n  --set serviceAccount.operator.create=false \\\n  --set serviceAccount.operator.name=keda-operator\n</code></pre>"},{"location":"EKS/Keda/#scaledobject","title":"ScaledObject","text":"<pre><code>apiVersion: keda.sh/v1alpha1\nkind: ScaledObject\nmetadata:\n  name: sqsconsumer-hpa\n  namespace: keda-sqs-guidance\nspec:\n  scaleTargetRef:\n    name: sqs-consumer-backend\n  minReplicaCount: 2\n  maxReplicaCount: 100\n  pollingInterval: 10\n  cooldownPeriod:  10\n  triggers:\n  - type: aws-sqs-queue\n    metadata:\n      queueURL: https://sqs.ap-northeast-2.amazonaws.com/073813292468/skills-queue\n      activationQueueLength: \"0\"\n      queueLength: \"5\"\n      awsRegion: ap-northeast-2\n      identityOwner: operator\n</code></pre>"},{"location":"EKS/Keda/#deployment-example","title":"Deployment Example","text":"<p>https://github.com/aws-solutions-library-samples/guidance-for-event-driven-application-auto-scaling-with-keda-on-amazon-eks/tree/main/scaledobject-samples/amazonsqs/sample-app <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata: \n  name: sqs-consumer-backend\n  namespace: keda-sqs-guidance\nspec:\n  selector:\n    matchLabels:\n      app: sqs-consumer-backend\n  template: \n    metadata:\n      labels:\n        app: sqs-consumer-backend\n    spec:\n      serviceAccountName: sqsconsumer\n      containers:\n      - name: sqs-consumer\n        image: 073813292468.dkr.ecr.ap-northeast-2.amazonaws.com/sqsconsumer:latest\n        env:\n        - name: RELIABLE_QUEUE_NAME\n          value: skills-queue\n        - name: AWS_REGION\n          value: ap-northeast-2\n        - name: MAX_MSGS_PER_BATCH\n          value: \"5\"\n        - name: MSG_POLL_BACKOFF\n          value: \"2\"\n        - name: MSG_PROCESS_DELAY\n          value: \"10\"\n        - name: TOT_MSGS_TO_PROCESS\n          value: \"10000\"\n        - name: LOG_LEVEL\n          value: INFO\n</code></pre></p>"},{"location":"EKS/Keda/#sqs-test","title":"SQS Test","text":"<p>Please note that you need to set the QUEUE_URL variable. <pre><code>for i in `seq 500`; do aws sqs send-message --queue-url ${QUEUE_URL} --message-body \"XXXX\" --no-cli-pager --output text; done\n</code></pre></p>"},{"location":"EKS/Kyverno/","title":"Kyverno","text":""},{"location":"EKS/Kyverno/#install","title":"Install","text":"<pre><code>helm repo add kyverno https://kyverno.github.io/kyverno/\nhelm repo update\n\nhelm install kyverno kyverno/kyverno -n kyverno --create-namespace \\\n--set admissionController.replicas=3 \\\n--set backgroundController.replicas=2 \\\n--set cleanupController.replicas=2 \\\n--set reportsController.replicas=2\n</code></pre>"},{"location":"EKS/Kyverno/#clusterpolicy","title":"ClusterPolicy","text":"<pre><code>apiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: disallow-latest-tag\nspec:\n  background: false\n  rules:\n  - name: require-image-tag\n    match:\n      any:\n      - resources:\n          kinds:\n          - Pod\n    validate:\n      failureAction: Enforce\n      message: \"An image tag is required.\"\n      foreach:\n        - list: \"request.object.spec.containers\"\n          pattern:\n            image: \"*:*\"\n        - list: \"request.object.spec.initContainers\"\n          pattern:\n            image: \"*:*\"\n        - list: \"request.object.spec.ephemeralContainers\"\n          pattern:\n            image: \"*:*\"\n  - name: validate-image-tag\n    match:\n      any:\n      - resources:\n          kinds:\n          - Pod\n    validate:\n      failureAction: Audit\n      message: \"Using a mutable image tag e.g. 'latest' is not allowed.\"\n      foreach:\n        - list: \"request.object.spec.containers\"\n          pattern:\n            image: \"!*:latest\"\n        - list: \"request.object.spec.initContainers\"\n          pattern:\n            image: \"!*:latest\"\n        - list: \"request.object.spec.ephemeralContainers\"\n          pattern:\n            image: \"!*:latest\"\n</code></pre>"},{"location":"EKS/Launch%20Template%20for%20Node%20Group/","title":"Launch Template for Node Group","text":""},{"location":"EKS/Launch%20Template%20for%20Node%20Group/#addon","title":"Addon","text":"<p>addon-config.json<pre><code>{\n    \"TagSpecifications\": [{\n        \"ResourceType\":\"instance\",\n        \"Tags\":[{\n            \"Key\":\"Name\",\n            \"Value\":\"wsi-addon-node\"\n        }]\n    }],\n    \"BlockDeviceMappings\":[{\n        \"DeviceName\":\"/dev/xvda\",\n        \"Ebs\":{\n            \"VolumeSize\": 30,\n            \"VolumeType\":\"gp2\",\n            \"DeleteOnTermination\":true\n        }\n    }]\n}\n</code></pre> <pre><code>aws ec2 create-launch-template \\\n    --launch-template-name wsi-addon-lt \\\n    --launch-template-data file://addon-config.json\n</code></pre></p>"},{"location":"EKS/Launch%20Template%20for%20Node%20Group/#app","title":"App","text":"<p>app-config.json<pre><code>{\n    \"TagSpecifications\": [{\n        \"ResourceType\":\"instance\",\n        \"Tags\":[{\n            \"Key\":\"Name\",\n            \"Value\":\"wsi-app-node\"\n        }]\n    }],\n    \"BlockDeviceMappings\":[{\n        \"DeviceName\":\"/dev/xvda\",\n        \"Ebs\":{\n            \"VolumeSize\": 30,\n            \"VolumeType\":\"gp2\",\n            \"DeleteOnTermination\":true\n        }\n    }],\n    \"MetadataOptions\": {\n        \"HttpPutResponseHopLimit\": 1\n    }\n}\n</code></pre> <pre><code>aws ec2 create-launch-template \\\n    --launch-template-name wsi-app-lt \\\n    --launch-template-data file://app-config.json\n</code></pre></p>"},{"location":"EKS/Nginx%20Ingress%20Controller/","title":"Nginx Ingress Controller","text":""},{"location":"EKS/Nginx%20Ingress%20Controller/#install","title":"Install","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.10.1/deploy/static/provider/aws/deploy.yaml\n</code></pre>"},{"location":"EKS/Nginx%20Ingress%20Controller/#nlb","title":"NLB","text":"<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: skills\nspec:\n  ingressClassName: nginx\n  rules:\n    - http:\n        paths:\n          - path: /\n            pathType: Exact\n            backend:\n              service:\n                name: skills\n                port:\n                  number: 80\n</code></pre>"},{"location":"EKS/Pod%20Security%20Group/","title":"Pod Security Group","text":""},{"location":"EKS/Pod%20Security%20Group/#attach-policy-to-clusterrole","title":"Attach Policy to ClusterRole","text":"<pre><code>cluster_role=$(aws eks describe-cluster --name $CLUSTER_NAME --query cluster.roleArn --output text | cut -d / -f 2)\naws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/AmazonEKSVPCResourceController --role-name $cluster_role\n</code></pre>"},{"location":"EKS/Pod%20Security%20Group/#enable-pod-eni","title":"Enable Pod ENI","text":"<pre><code>kubectl set env daemonset aws-node -n kube-system ENABLE_POD_ENI=true\nkubectl get cninode -A  # [{\"name\":\"SecurityGroupsForPods\"}]\n</code></pre>"},{"location":"EKS/Pod%20Security%20Group/#additional-actions","title":"Additional Actions","text":"<ul> <li> <p>If you use livenessProbe or readinessProbe <pre><code>kubectl patch daemonset aws-node -n kube-system \\\n  -p '{\"spec\": {\"template\": {\"spec\": {\"initContainers\": [{\"env\":[{\"name\":\"DISABLE_TCP_EARLY_DEMUX\",\"value\":\"true\"}],\"name\":\"aws-vpc-cni-init\"}]}}}}'\n</code></pre></p> </li> <li> <p>If you use NodeLocal DNSCache or Calico Networkpolicy or externalTrafficPolicy is Local <pre><code>kubectl set env daemonset aws-node -n kube-system POD_SECURITY_GROUP_ENFORCING_MODE=standard\n</code></pre></p> </li> </ul>"},{"location":"EKS/Pod%20Security%20Group/#deploy-securitygrouppolicy","title":"Deploy SecurityGroupPolicy","text":"<p>Please note that you will need to set the SG_ID variable. <pre><code>apiVersion: vpcresources.k8s.aws/v1beta1\nkind: SecurityGroupPolicy\nmetadata:\n  name: wsi-sg-policy\nspec:\n  podSelector: \n    matchLabels:\n      app: wsi\n  securityGroups:\n    groupIds:\n      - ${SG_ID}\n</code></pre></p>"},{"location":"EKS/RBAC%20Authorization/","title":"RBAC Authorization","text":""},{"location":"EKS/RBAC%20Authorization/#api-resources","title":"API Resources","text":"<pre><code>kubectl api-resources -o wide\n</code></pre>"},{"location":"EKS/RBAC%20Authorization/#role-clusterrole","title":"Role / ClusterRole","text":"<p>role.yaml<pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: default\n  name: pod-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n</code></pre> clusterrole.yaml<pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: pod-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n</code></pre></p>"},{"location":"EKS/RBAC%20Authorization/#rolebinding-clusterrolebinding","title":"RoleBinding / ClusterRoleBinding","text":"<p>rolebinding.yaml<pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-pods\n  namespace: default\nsubjects:\n- kind: User\n  name: jane\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: pod-reader\n  apiGroup: rbac.authorization.k8s.io\n</code></pre> clusterrolebinding.yaml<pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: read-pods\nsubjects:\n- kind: Group\n  name: manager\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: pod-reader\n  apiGroup: rbac.authorization.k8s.io\n</code></pre></p>"},{"location":"EKS/Reloader/","title":"Reloader","text":"<p>Reloader can watch changes in ConfigMap and Secret and do rolling upgrades on Pods with their associated DeploymentConfigs, Deployments, Daemonsets Statefulsets and Rollouts.</p>"},{"location":"EKS/Reloader/#install","title":"Install","text":"<pre><code>helm repo add stakater https://stakater.github.io/stakater-charts\nhelm install reloader stakater/reloader --namespace reloader --create-namespace\n</code></pre>"},{"location":"EKS/Reloader/#usage","title":"Usage","text":"<pre><code>kind: Deployment\nmetadata:\n  annotations:\n    reloader.stakater.com/auto: \"true\"\n</code></pre>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/","title":"Sync as Kubernetes Secret","text":""},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#install-with-helm","title":"Install with Helm","text":"<p>Secrets Store CSI driver : Secrets Store CSI Driver for Kubernetes secrets - Integrates secrets stores with Kubernetes via a Container Storage Interface (CSI) volume. values.yaml<pre><code>syncSecret:\n  enabled: true\nenableSecretRotation: true\n</code></pre> <pre><code>helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts\nhelm install -n kube-system csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver -f values.yaml\n</code></pre> AWS provider for the Secrets Store CSI Driver : Provider for the Secrets Store CSI driver that integrates with AWS Secrets Manager values.yaml<pre><code>tolerations:\n- key: node\n  operator: Equal\n  value: app\n  effect: NoSchedule\n</code></pre> <pre><code>helm repo add aws-secrets-manager https://aws.github.io/secrets-store-csi-driver-provider-aws\nhelm install -n kube-system secrets-provider-aws aws-secrets-manager/secrets-store-csi-driver-provider-aws -f values.yaml\n</code></pre></p>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#create-serviceaccount","title":"Create ServiceAccount","text":""},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#secrets-manager","title":"Secrets Manager","text":"<p>Please note that you need to set SECRET_ARN and KEY_ARN. iam_policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\"secretsmanager:GetSecretValue\", \"secretsmanager:DescribeSecret\"],\n        \"Resource\": [\"$SECRET_ARN\"]\n    },\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": [\"kms:Decrypt\"],\n        \"Resource\": [\"$KEY_ARN\"]\n    }]\n}\n</code></pre></p>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#ssm-parameter-store","title":"SSM Parameter Store","text":"<p>Please note that you need to set PARAMETER_ARN and KEY_ARN. iam_policy.json<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\"ssm:GetParameter\", \"ssm:GetParameters\"],\n        \"Resource\": [\"$PARAMETER_ARN\"]\n    },\n    {\n        \"Effect\": \"Allow\",\n        \"Action\": [\"kms:Decrypt\"],\n        \"Resource\": [\"$KEY_ARN\"]\n    }]\n}\n</code></pre></p>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#command","title":"Command","text":"<pre><code>POLICY_ARN=$(aws --region \"$AWS_DEFAULT_REGION\" --query Policy.Arn --output text iam create-policy --policy-name secretsmanager-policy --policy-document file://iam_policy.json)\neksctl create iamserviceaccount --name access-secrets-sa --region=\"$AWS_DEFAULT_REGION\" --cluster \"$CLUSTER_NAME\" --namespace=wsi --attach-policy-arn \"$POLICY_ARN\" --approve --override-existing-serviceaccounts\n</code></pre>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#secretproviderclass","title":"SecretProviderClass","text":"<p>To use the Secrets Store CSI driver, create a SecretProviderClass custom resource to provide driver configurations and provider-specific parameters to the CSI driver.</p>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#secrets-manager_1","title":"Secrets Manager","text":"<pre><code>apiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: aws-secrets\nspec:\n  provider: aws\n  secretObjects:\n  - data:\n    - key: DB_CONFIG_JSON\n      objectName: dbsecret\n    secretName: dbinfo\n    type: Opaque\n  parameters:\n    objects: |\n        - objectName: \"dbsecret\"\n          objectType: \"secretsmanager\"\n</code></pre>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#ssm-parameter-store_1","title":"SSM Parameter Store","text":"<pre><code>apiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: aws-secrets\nspec:\n  provider: aws\n  secretObjects:\n  - data:\n    - key: DB_CONFIG_JSON\n      objectName: dbparameter\n    secretName: dbinfo\n    type: Opaque\n  parameters:\n    objects: |\n        - objectName: \"dbparameter\"\n          objectType: \"ssmparameter\"\n</code></pre>"},{"location":"EKS/Sync%20as%20Kubernetes%20Secret/#pod-test","title":"Pod Test","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\nspec:\n  serviceAccountName: access-secrets-sa\n  volumes:\n  - name: secrets-store-inline\n    csi:\n      driver: secrets-store.csi.k8s.io\n      readOnly: true\n      volumeAttributes:\n        secretProviderClass: aws-secrets\n  containers:\n  - image: public.ecr.aws/docker/library/busybox:1.36\n    command:\n      - sleep\n      - \"3600\"\n    imagePullPolicy: IfNotPresent\n    name: busybox\n    volumeMounts:\n    - name: secrets-store-inline\n      mountPath: \"/mnt/secrets-store\"\n      readOnly: true\n    env:\n    - name: DB_CONFIG_JSON\n      valueFrom:\n        secretKeyRef:\n          name: dbinfo\n          key: DB_CONFIG_JSON\n</code></pre>"},{"location":"EKS/k8s%20Resource%20Base/","title":"k8s Resource Base","text":""},{"location":"EKS/k8s%20Resource%20Base/#pod","title":"Pod","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.14.2\n    ports:\n    - containerPort: 80\n</code></pre>"},{"location":"EKS/k8s%20Resource%20Base/#deployment","title":"Deployment","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: skills\nspec:\n  selector:\n    matchLabels:\n      app: skills\n  template:\n    metadata:\n      labels:\n        app: skills\n    spec:\n      terminationGracePeriodSeconds: 60\n      nodeSelector:\n        node: app\n      tolerations:\n      - key: node\n        operator: Equal\n        value: app\n        effect: NoSchedule\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        resources:\n          requests:\n            cpu: 250m\n            memory: 512Mi\n          limits:\n            cpu: 250m\n            memory: 512Mi\n        ports:\n        - containerPort: 80\n      topologySpreadConstraints:\n      - maxSkew: 1\n        minDomains: 2\n        topologyKey: topology.kubernetes.io/zone\n        whenUnsatisfiable: DoNotSchedule\n        labelSelector:\n          matchLabels:\n            app: skills\n</code></pre>"},{"location":"EKS/k8s%20Resource%20Base/#service","title":"Service","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: skills\nspec:\n  type: NodePort\n  selector:\n    app: skills\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre>"},{"location":"EKS/k8s%20Resource%20Base/#secret","title":"Secret","text":"<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: secret-basic-auth\ntype: Opaque\nstringData:\n  username: admin\n  password: t0p-Secret\n</code></pre>"},{"location":"EKS/k8s%20Resource%20Base/#statefulset","title":"StatefulSet","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mysql\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: mysql\n  serviceName: mysql\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n        - name: mysql\n          image: mysql\n          imagePullPolicy: IfNotPresent\n          env:\n            - name: MYSQL_ROOT_PASSWORD\n              value: root1234!\n            - name: MYSQL_USER\n              value: admin\n            - name: MYSQL_PASSWORD\n              value: admin1234!\n            - name: MYSQL_DATABASE\n              value: demo\n          ports:\n            - name: mysql\n              containerPort: 3306\n              protocol: TCP\n          volumeMounts:\n            - name: data\n              mountPath: /var/lib/mysql\n  volumeClaimTemplates:\n    - metadata:\n        name: data\n      spec:\n        accessModes: [\"ReadWriteOnce\"]\n        storageClassName: gp2\n        resources:\n          requests:\n            storage: 10Gi\n</code></pre>"},{"location":"EKS/k8s%20Resource%20Base/#kustomize","title":"Kustomize","text":"kustomization.yaml<pre><code>resources:\n  - deployment.yaml\n  - service.yaml\n  - ingress.yaml\n  - hpa.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n</code></pre>"},{"location":"Endpoint/API%20Gateway/DynamoDB/","title":"DynamoDB","text":""},{"location":"Endpoint/API%20Gateway/DynamoDB/#get-getitem","title":"GET (GetItem)","text":""},{"location":"Endpoint/API%20Gateway/DynamoDB/#integration-request","title":"Integration request","text":"<pre><code>{\n    \"TableName\": \"serverless-user-table\",\n    \"Key\": {\n        \"id\": {\n            \"S\": \"$input.params('id')\"\n        }\n    }\n}\n</code></pre>"},{"location":"Endpoint/API%20Gateway/DynamoDB/#integration-response","title":"Integration response","text":"<pre><code>{\n    \"id\": $input.json('$.Item.id.S'),\n    \"age\": $input.json('$.Item.age.S'),\n    \"company\": $input.json('$.Item.company.S')\n}\n</code></pre>"},{"location":"Endpoint/API%20Gateway/DynamoDB/#post-putitem","title":"POST (PutItem)","text":""},{"location":"Endpoint/API%20Gateway/DynamoDB/#integration-request_1","title":"Integration request","text":"<pre><code>#if($input.params(\"id\").contains(\"admin\"))\n#set($context.responseOverride.status = 500)\n#else\n{ \n    \"TableName\": \"serverless-user-table\",\n    \"Item\": {\n        \"id\": {\n            \"S\": \"$input.params('id')\"\n        },\n        \"age\": {\n            \"S\": \"$input.params('age')\"\n        },\n        \"company\": {\n            \"S\": \"$input.params('company')\"\n        }\n    }\n}\n#end\n</code></pre>"},{"location":"Endpoint/API%20Gateway/DynamoDB/#integration-response_1","title":"Integration response","text":"<pre><code>#if($context.responseOverride.status == 500)\n{\n    \"message\": \"Internal server error\"\n}\n#else\n{\n    \"msg\": \"Success insert data\"\n}\n#end\n</code></pre>"},{"location":"Endpoint/CloudFront/Image%20Resize/","title":"Image Resize","text":""},{"location":"Endpoint/CloudFront/Image%20Resize/#iam-role","title":"IAM Role","text":""},{"location":"Endpoint/CloudFront/Image%20Resize/#trust-policy","title":"Trust Policy","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": [\n                \"edgelambda.amazonaws.com\",\n                \"lambda.amazonaws.com\"\n            ]\n        },\n        \"Action\": \"sts:AssumeRole\"\n    }]\n}\n</code></pre>"},{"location":"Endpoint/CloudFront/Image%20Resize/#inline-policy","title":"Inline Policy","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"lambda:GetFunction\",\n                \"lambda:EnableReplication*\",\n                \"lambda:DisableReplication*\",\n                \"iam:CreateServiceLinkedRole\",\n                \"cloudfront:UpdateDistribution\",\n                \"s3:GetObject\",\n                \"kms:Decrypt\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre>"},{"location":"Endpoint/CloudFront/Image%20Resize/#install","title":"Install","text":"<pre><code>npm init -y\nnpm install --cpu=x64 --os=linux sharp\nnpm install @aws-sdk/client-s3\n</code></pre>"},{"location":"Endpoint/CloudFront/Image%20Resize/#function","title":"Function","text":"<pre><code>import { GetObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport Sharp from 'sharp';\n\nconst S3 = new S3Client({region: 'ap-northeast-2'});\nconst BUCKET = 'wsi-static-arco';\n\nconst supportImageTypes = ['jpg', 'jpeg', 'png', 'webp', 'gif', 'avif', 'tiff'];\n\nexport const handler = async(event, context, callback) =&gt; {\n  const { request, response } = event.Records[0].cf;\n  const { uri } = request;\n\n  const ObjectKey = decodeURIComponent(uri).substring(1);\n  const params = new URLSearchParams(request.querystring);\n  let width = params.get('width');\n  let height = params.get('height');\n\n  if (!(width || height)) {\n    return callback(null, response);\n  }\n\n  const extension = uri.match(/\\/?(.*)\\.(.*)/)[2].toLowerCase();\n  width = parseInt(width, 10) || null;\n  height = parseInt(height, 10) || null;\n\n  let format = extension.toLowerCase();\n  format = format === 'jpg' ? 'jpeg' : format;\n\n  let s3Object;\n  let resizedImage;\n\n  if (!supportImageTypes.some(type =&gt; type === extension)) {\n    responseHandler(\n      403,\n      'Forbidden',\n      'Unsupported image type', [{\n        key: 'Content-Type',\n        value: 'text/plain'\n      }],\n    );\n\n    return callback(null, response);\n  }\n\n  console.log(`width: ${width}, height: ${height}`);\n  console.log('S3 Object key:', ObjectKey);\n\n  try {\n    const command = new GetObjectCommand({\n      Bucket: BUCKET,\n      Key: ObjectKey\n    });\n    s3Object = await S3.send(command);\n  } catch (error) {\n    responseHandler(\n      404,\n      'Not Found',\n      'The image does not exist.', [{ key: 'Content-Type', value: 'text/plain' }],\n    );\n    return callback(null, response);\n  }\n\n  try {\n    const imageBuffer = Buffer.concat(await s3Object.Body.toArray());\n\n    resizedImage = await Sharp(imageBuffer)\n      .resize(width, height)\n      .toFormat(format)\n      .withMetadata()\n      .toBuffer();\n  } catch (error) {\n    responseHandler(\n      500,\n      'Internal Server Error',\n      'Fail to resize image.', [{\n        key: 'Content-Type',\n        value: 'text/plain'\n      }],\n    );\n    return callback(null, response);\n  }\n\n  responseHandler(\n    200,\n    'OK',\n    resizedImage.toString('base64'), [{\n      key: 'Content-Type',\n      value: `image/${format}`\n    },\n    {\n      key: 'Content-Length',\n      value: resizedImage.length.toString()\n    }],\n    'base64'\n  );\n\n  function responseHandler(status, statusDescription, body, headers, bodyEncoding) {\n    response.status = status;\n    response.statusDescription = statusDescription;\n    response.body = body;\n    response.headers = headers.reduce((acc, header) =&gt; {\n      acc[header.key.toLowerCase()] = [{ key: header.key, value: header.value }];\n      return acc;\n    }, {});\n    if (bodyEncoding) {\n      response.bodyEncoding = bodyEncoding;\n    }\n  }\n\n  console.log('Success resizing image');\n\n  return callback(null, response);\n};\n</code></pre>"},{"location":"Endpoint/CloudFront/KMS%20Policy/","title":"KMS Policy","text":"<pre><code>{\n    \"Sid\": \"Allow users or roles to use KMS to CloudFront.\",\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n        \"Service\": [\n            \"cloudfront.amazonaws.com\"\n        ]\n     },\n    \"Action\": [\n        \"kms:Decrypt\",\n        \"kms:Encrypt\",\n        \"kms:GenerateDataKey*\"\n    ],\n    \"Resource\": \"*\",\n    \"Condition\":{\n        \"StringEquals\":{\n            \"aws:SourceArn\": \"arn:aws:cloudfront::&lt;account id&gt;:distribution/&lt;cloudfront distribution id&gt;\"\n        }\n    }\n}\n</code></pre>"},{"location":"Endpoint/CloudFront/Redirect%20To%20Main/","title":"Redirect To Main","text":""},{"location":"Endpoint/CloudFront/Redirect%20To%20Main/#cloudfront-function","title":"CloudFront Function","text":"<pre><code>function handler(event) {\n    const request = event.request;\n    const host = request.headers.host.value;\n    const uri = request.uri;\n\n    if (uri !== \"/index.html\") {\n        const index = `https://${host}/index.html`;\n        return {\n            statusCode: 301,\n            statusDescription: \"Moved Permanently\",\n            headers: {\n                \"location\": { \"value\": index },\n            },\n        };\n    }\n\n    return request;\n}\n</code></pre>"},{"location":"Endpoint/NGINX/Docker/","title":"Docker","text":"Dockerfile<pre><code>FROM nginx:stable\nCOPY nginx.conf /etc/nginx/nginx.conf\n</code></pre>"},{"location":"Endpoint/NGINX/Proxy/","title":"Proxy","text":"nginx.conf<pre><code>user  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log notice;\npid        /run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    server {\n        listen          80;\n        server_name     gateway;\n\n        location / {\n            proxy_pass          http://product;\n            proxy_http_version  1.1;\n        }\n    }\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n</code></pre>"},{"location":"Logging/AWS%20Logging/","title":"AWS Logging","text":""},{"location":"Logging/AWS%20Logging/#aws-service-log","title":"AWS Service Log","text":"<ul> <li>WAF ACL Logs</li> <li>GuardDuty Findings</li> <li>S3 Access Logs</li> <li>VPC Flow Logs</li> <li>DNS Query Logs</li> <li>ELB Access Logs</li> <li>CloudFront Access Logs</li> <li>RDS / DocumentDB Logs</li> <li>EKS Control Plane Logs</li> </ul>"},{"location":"Logging/AWS%20Logging/#log-retention-period","title":"Log Retention Period","text":"<ul> <li>CloudWatch Logs</li> <li>S3 Object Lifecycle Policy</li> </ul>"},{"location":"Logging/AWS%20Logging/#example","title":"Example","text":""},{"location":"Logging/CloudWatch%20Agent/","title":"CloudWatch Agent","text":""},{"location":"Logging/CloudWatch%20Agent/#iam-role","title":"IAM Role","text":"<ul> <li>CloudWatchAgentServerPolicy</li> </ul>"},{"location":"Logging/CloudWatch%20Agent/#install","title":"Install","text":"<pre><code>yum install -y amazon-cloudwatch-agent\n</code></pre>"},{"location":"Logging/CloudWatch%20Agent/#configuration","title":"Configuration","text":""},{"location":"Logging/CloudWatch%20Agent/#wizard","title":"Wizard","text":"<pre><code>/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-config-wizard\n</code></pre>"},{"location":"Logging/CloudWatch%20Agent/#file-example","title":"File Example","text":"<pre><code>{\n    \"agent\": {\n        \"run_as_user\": \"cwagent\"\n    },\n    \"logs\": {\n        \"logs_collected\": {\n            \"files\": {\n                \"collect_list\": [\n                    {\n                        \"file_path\": \"/var/log/myapp.log\",\n                        \"log_group_class\": \"STANDARD\",\n                        \"log_group_name\": \"/app/myapp\",\n                        \"log_stream_name\": \"{instance_id}\",\n                        \"retention_in_days\": -1\n                    }\n                ]\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"Logging/CloudWatch%20Agent/#start","title":"Start","text":"<pre><code>mv /opt/aws/amazon-cloudwatch-agent/bin/config.json /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json\nsystemctl restart amazon-cloudwatch-agent\n</code></pre>"},{"location":"Logging/Data%20Partitioning/","title":"Data Partitioning","text":""},{"location":"Logging/Data%20Partitioning/#not-use-dynamic-partitioning","title":"Not Use Dynamic Partitioning","text":"<p>year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/</p>"},{"location":"Logging/Data%20Partitioning/#partitionkeyfromquery","title":"partitionKeyFromQuery","text":""},{"location":"Logging/Data%20Partitioning/#jq-example","title":"JQ Example","text":"<pre><code>.time| sub(\"\\\\.[[:digit:]]+\"; \"\")| strptime(\"%Y-%m-%d %H:%M:%S\")| strftime(\"%Y\")\n</code></pre>"},{"location":"Logging/Data%20Partitioning/#s3-bucket-prefix","title":"S3 Bucket Prefix","text":"<pre><code>year=!{partitionKeyFromQuery:year}/month=!{partitionKeyFromQuery:month}/day=!{partitionKeyFromQuery:day}/hour=!{partitionKeyFromQuery:hour}/\n</code></pre>"},{"location":"Logging/Data%20Partitioning/#partitionkeyfromlambda","title":"partitionKeyFromLambda","text":""},{"location":"Logging/Data%20Partitioning/#lambda","title":"Lambda","text":"<pre><code>from __future__ import print_function\nimport base64\nimport json\nimport datetime\n\ndef lambda_handler(firehose_records_input, context):\n    print(\"Received records for processing from DeliveryStream: \" + firehose_records_input['deliveryStreamArn']\n          + \", Region: \" + firehose_records_input['region']\n          + \", and InvocationId: \" + firehose_records_input['invocationId'])\n\n    firehose_records_output = {'records': []}\n\n    for firehose_record_input in firehose_records_input['records']:\n        payload = base64.b64decode(firehose_record_input['data'])\n        json_value = json.loads(payload)\n\n        firehose_record_output = {}\n        time = datetime.datetime.strptime(json_value['time'], \"%Y-%m-%dT%H:%M:%SZ\")\n        partition_keys = {\"year\": time.strftime('%Y'),\n                          \"month\": time.strftime('%m'),\n                          \"day\": time.strftime('%d'),\n                          \"hour\": time.strftime('%H')\n                          }\n\n        firehose_record_output = {'recordId': firehose_record_input['recordId'],\n                                  'data': firehose_record_input['data'],\n                                  'result': 'Ok',\n                                  'metadata': { 'partitionKeys': partition_keys }}\n\n        firehose_records_output['records'].append(firehose_record_output)\n\n    return firehose_records_output\n</code></pre>"},{"location":"Logging/Data%20Partitioning/#s3-bucket-prefix_1","title":"S3 Bucket Prefix","text":"<pre><code>year=!{partitionKeyFromLambda:year}/month=!{partitionKeyFromLambda:month}/day=!{partitionKeyFromLambda:day}/hour=!{partitionKeyFromLambda:hour}/\n</code></pre>"},{"location":"Logging/Data%20Partitioning/#partition-projection","title":"Partition Projection","text":"<pre><code>CREATE EXTERNAL TABLE `accesslog`(\n  `time` timestamp, \n  `host` string, \n  `method` string, \n  `path` string, \n  `http` string, \n  `code` smallint)\nPARTITIONED BY ( \n  `year` smallint, \n  `month` tinyint, \n  `day` tinyint, \n  `hour` tinyint)\nROW FORMAT SERDE 'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe' \nSTORED AS INPUTFORMAT 'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat' \nOUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'\nLOCATION 's3://color-application-logs/'\nTBLPROPERTIES (\n  'classification'='parquet',\n  'projection.enabled'='true',\n  'projection.year.range'='2024,2025', \n  'projection.year.type'='integer',\n  'projection.month.digits'='2', \n  'projection.month.range'='1,12',\n  'projection.month.type'='integer',\n  'projection.day.digits'='2',\n  'projection.day.range'='1,31', \n  'projection.day.type'='integer',\n  'projection.hour.digits'='2',\n  'projection.hour.range'='0,23',\n  'projection.hour.type'='integer')\n</code></pre>"},{"location":"Logging/Kinesis%20Agent/","title":"Kinesis Agent","text":""},{"location":"Logging/Kinesis%20Agent/#install","title":"Install","text":"<pre><code>yum install -y aws-kinesis-agent\n</code></pre>"},{"location":"Logging/Kinesis%20Agent/#iam-policy","title":"IAM Policy","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cloudwatch:PutMetricData\",\n                \"kinesis:PutRecords\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre>"},{"location":"Logging/Kinesis%20Agent/#config-files","title":"Config Files","text":""},{"location":"Logging/Kinesis%20Agent/#kinesis-data-stream","title":"Kinesis Data Stream","text":"/etc/aws-kinesis/agent.json<pre><code>{\n  \"cloudwatch.emitMetrics\": true,\n  \"cloudwatch.endpoint\": \"monitoring.ap-northeast-2.amazonaws.com\",\n  \"kinesis.endpoint\": \"kinesis.ap-northeast-2.amazonaws.com\",\n\n  \"flows\": [\n    {\n      \"filePattern\": \"/opt/app/app.log\",\n      \"kinesisStream\": \"skills-stream\",\n      \"dataProcessingOptions\": [\n        {\n          \"optionName\": \"LOGTOJSON\",\n          \"logFormat\": \"COMMONAPACHELOG\",\n          \"matchPattern\": \"^([^ ]*) - \\\\[([^\\\\]]*)\\\\] \\\\[([^\\\\]]*)\\\\] \\\"([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) \\\"([^ ]*)\\\"\\\"\",\n          \"customFieldNames\": [\"host\", \"time\", \"level\", \"method\", \"path\", \"http\", \"code\", \"micro\", \"agent\"]\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"Logging/Kinesis%20Agent/#kinesis-data-firehose","title":"Kinesis Data Firehose","text":"/etc/aws-kinesis/agent.json<pre><code>{\n  \"cloudwatch.emitMetrics\": true,\n  \"cloudwatch.endpoint\": \"monitoring.ap-northeast-2.amazonaws.com\",\n  \"firehose.endpoint\": \"firehose.ap-northeast-2.amazonaws.com\",\n\n  \"flows\": [\n    {\n      \"filePattern\": \"/opt/app/app.log\",\n      \"deliveryStream\": \"skills-firehose\",\n      \"dataProcessingOptions\": [\n        {\n          \"optionName\": \"LOGTOJSON\",\n          \"logFormat\": \"COMMONAPACHELOG\",\n          \"matchPattern\": \"^([^ ]*) - \\\\[([^\\\\]]*)\\\\] \\\\[([^\\\\]]*)\\\\] \\\"([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) \\\"([^ ]*)\\\"\\\"\",\n          \"customFieldNames\": [\"host\", \"time\", \"level\", \"method\", \"path\", \"http\", \"code\", \"micro\", \"agent\"]\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"Logging/Kinesis%20Agent/#start","title":"Start","text":"<pre><code>service aws-kinesis-agent start\nchkconfig aws-kinesis-agent on\n</code></pre>"},{"location":"Logging/Rsyslog/","title":"Rsyslog","text":""},{"location":"Logging/Rsyslog/#install","title":"Install","text":"<pre><code>yum install -y rsyslog\nsystemctl start rsyslog\nsystemctl enable rsyslog\n</code></pre>"},{"location":"Logging/Rsyslog/#logs","title":"Logs","text":"File Path Description /var/log/secure Logs related to authentication-based access /var/log/messages A file where standard messages occurring on the system are logged. /var/log/dmesg Log output when the system boots /var/log/xferlog A file in which actions related to FTP connections are recorded. /var/log/cron File where cron-related information is recorded /var/log/boot.log Information related to the daemon that operates during booting is recorded. /var/log/lastlog A file (binary) in which the last information of each user who connected using telnet or ssh is recorded - lastlog command /var/log/wtmp Log (binary) including records of users connected using console, telnet, ftp, etc., records of system reboots, etc. - last command /var/log/btmp A log opposite to wtmp that records connection failures (binary) - lastb command"},{"location":"Logging/Rsyslog/#varlogsecure","title":"/var/log/secure","text":"<ul> <li>SSH Connect Pattern <pre><code>%Accepted|Failed%\n</code></pre></li> </ul>"},{"location":"Logging/Athena/ALB%20Access%20Log/","title":"ALB Access Log","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS alb_access_logs (\n            type string,\n            time string,\n            elb string,\n            client_ip string,\n            client_port int,\n            target_ip string,\n            target_port int,\n            request_processing_time double,\n            target_processing_time double,\n            response_processing_time double,\n            elb_status_code int,\n            target_status_code string,\n            received_bytes bigint,\n            sent_bytes bigint,\n            request_verb string,\n            request_url string,\n            request_proto string,\n            user_agent string,\n            ssl_cipher string,\n            ssl_protocol string,\n            target_group_arn string,\n            trace_id string,\n            domain_name string,\n            chosen_cert_arn string,\n            matched_rule_priority string,\n            request_creation_time string,\n            actions_executed string,\n            redirect_url string,\n            lambda_error_reason string,\n            target_port_list string,\n            target_status_code_list string,\n            classification string,\n            classification_reason string,\n            conn_trace_id string\n            )\n            PARTITIONED BY\n            (\n             day STRING\n            )\n            ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.RegexSerDe'\n            WITH SERDEPROPERTIES (\n            'serialization.format' = '1',\n            'input.regex' = \n        '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \\\"([^ ]*) (.*) (- |[^ ]*)\\\" \\\"([^\\\"]*)\\\" ([A-Z0-9-_]+) ([A-Za-z0-9.-]*) ([^ ]*) \\\"([^\\\"]*)\\\" \\\"([^\\\"]*)\\\" \\\"([^\\\"]*)\\\" ([-.0-9]*) ([^ ]*) \\\"([^\\\"]*)\\\" \\\"([^\\\"]*)\\\" \\\"([^ ]*)\\\" \\\"([^\\\\s]+?)\\\" \\\"([^\\\\s]+)\\\" \\\"([^ ]*)\\\" \\\"([^ ]*)\\\" ?([^ ]*)?'\n            )\n            LOCATION 's3://centralized-logs-demo/alb-access/AWSLogs/073813292468/elasticloadbalancing/ap-northeast-2/'\n            TBLPROPERTIES\n            (\n             \"projection.enabled\" = \"true\",\n             \"projection.day.type\" = \"date\",\n             \"projection.day.range\" = \"2025/01/17,NOW\",\n             \"projection.day.format\" = \"yyyy/MM/dd\",\n             \"projection.day.interval\" = \"1\",\n             \"projection.day.interval.unit\" = \"DAYS\",\n             \"storage.location.template\" = \"s3://centralized-logs-demo/alb-access/AWSLogs/073813292468/elasticloadbalancing/ap-northeast-2/${day}\"\n            )\n</code></pre>"},{"location":"Logging/Athena/CloudTrail/","title":"CloudTrail","text":""},{"location":"Logging/Athena/CloudTrail/#create-table","title":"CREATE TABLE","text":"<pre><code>CREATE EXTERNAL TABLE cloudtrail_seoul (\n    eventVersion STRING,\n    userIdentity STRUCT&lt;\n        type: STRING,\n        principalId: STRING,\n        arn: STRING,\n        accountId: STRING,\n        invokedBy: STRING,\n        accessKeyId: STRING,\n        userName: STRING,\n        sessionContext: STRUCT&lt;\n            attributes: STRUCT&lt;\n                mfaAuthenticated: STRING,\n                creationDate: STRING&gt;,\n            sessionIssuer: STRUCT&lt;\n                type: STRING,\n                principalId: STRING,\n                arn: STRING,\n                accountId: STRING,\n                username: STRING&gt;,\n            ec2RoleDelivery: STRING,\n            webIdFederationData: MAP&lt;STRING,STRING&gt;&gt;&gt;,\n    eventTime STRING,\n    eventSource STRING,\n    eventName STRING,\n    awsRegion STRING,\n    sourceIpAddress STRING,\n    userAgent STRING,\n    errorCode STRING,\n    errorMessage STRING,\n    requestParameters STRING,\n    responseElements STRING,\n    additionalEventData STRING,\n    requestId STRING,\n    eventId STRING,\n    resources ARRAY&lt;STRUCT&lt;\n        arn: STRING,\n        accountId: STRING,\n        type: STRING&gt;&gt;,\n    eventType STRING,\n    apiVersion STRING,\n    readOnly STRING,\n    recipientAccountId STRING,\n    serviceEventDetails STRING,\n    sharedEventID STRING,\n    vpcEndpointId STRING,\n    tlsDetails STRUCT&lt;\n        tlsVersion: STRING,\n        cipherSuite: STRING,\n        clientProvidedHostHeader: STRING&gt;\n)\nCOMMENT 'CloudTrail table for worldskills-log-centralized bucket'\nPARTITIONED BY (`timestamp` string)\nROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'\nSTORED AS INPUTFORMAT 'com.amazon.emr.cloudtrail.CloudTrailInputFormat'\nOUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'\nLOCATION \n  's3://worldskills-log-centralized/cloudtrail/AWSLogs/073813292468/CloudTrail/ap-northeast-2'\nTBLPROPERTIES (\n  'projection.enabled'='true', \n  'projection.timestamp.format'='yyyy/MM/dd', \n  'projection.timestamp.interval'='1', \n  'projection.timestamp.interval.unit'='DAYS', \n  'projection.timestamp.range'='2024/01/01,NOW', \n  'projection.timestamp.type'='date', \n  'storage.location.template'='s3://worldskills-log-centralized/cloudtrail/AWSLogs/073813292468/CloudTrail/ap-northeast-2/${timestamp}');\n</code></pre>"},{"location":"Logging/Athena/CloudTrail/#query-example","title":"Query Example","text":"<pre><code>SELECT \n    eventsource, \n    eventname,\n    useridentity.sessioncontext.attributes.creationdate,\n    useridentity.sessioncontext.sessionissuer.arn\nFROM cloudtrail_seoul\nWHERE useridentity.sessioncontext.sessionissuer.arn IS NOT NULL\nORDER BY eventsource, eventname\nLIMIT 10;\n</code></pre>"},{"location":"Logging/Athena/S3%20Access%20Logs/","title":"S3 Access Logs","text":"<pre><code>CREATE EXTERNAL TABLE s3_access_logs (\n `bucketowner` STRING, \n `bucket_name` STRING, \n `requestdatetime` STRING, \n `remoteip` STRING, \n `requester` STRING, \n `requestid` STRING, \n `operation` STRING, \n `key` STRING, \n `request_uri` STRING, \n `httpstatus` STRING, \n `errorcode` STRING, \n `bytessent` BIGINT, \n `objectsize` BIGINT, \n `totaltime` STRING, \n `turnaroundtime` STRING, \n `referrer` STRING, \n `useragent` STRING, \n `versionid` STRING, \n `hostid` STRING, \n `sigv` STRING, \n `ciphersuite` STRING, \n `authtype` STRING, \n `endpoint` STRING, \n `tlsversion` STRING,\n `accesspointarn` STRING,\n `aclrequired` STRING)\n PARTITIONED BY (\n   `timestamp` string)\nROW FORMAT SERDE \n 'org.apache.hadoop.hive.serde2.RegexSerDe' \nWITH SERDEPROPERTIES ( \n 'input.regex'='([^ ]*) ([^ ]*) \\\\[(.*?)\\\\] ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) (\\\"[^\\\"]*\\\"|-) (-|[0-9]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) (\\\"[^\\\"]*\\\"|-) ([^ ]*)(?: ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*))?.*$') \nSTORED AS INPUTFORMAT \n 'org.apache.hadoop.mapred.TextInputFormat' \nOUTPUTFORMAT \n 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'\nLOCATION\n 's3://centralized-logs-demo/static-s3/073813292468/ap-northeast-2/static-demo-s3/'\n TBLPROPERTIES (\n  'projection.enabled'='true', \n  'projection.timestamp.format'='yyyy/MM/dd', \n  'projection.timestamp.interval'='1', \n  'projection.timestamp.interval.unit'='DAYS', \n  'projection.timestamp.range'='2025/01/18,NOW', \n  'projection.timestamp.type'='date', \n  'storage.location.template'='s3://centralized-logs-demo/static-s3/073813292468/ap-northeast-2/static-demo-s3/${timestamp}')\n</code></pre>"},{"location":"Logging/Athena/Update%20Partition/","title":"Update Partition","text":"<pre><code>import boto3\n\ndef lambda_handler(event, context):\n    client = boto3.client('athena')\n\n    config = {\n        'OutputLocation': 's3://skills-app-arco/output/',\n    }\n    sql = 'MSCK REPAIR TABLE `skills_table`'\n    context = {'Database': 'skills_db'}\n\n    client.start_query_execution(QueryString = sql, \n                                 QueryExecutionContext = context,\n                                 ResultConfiguration = config)\n</code></pre>"},{"location":"Logging/Athena/VPC%20Flow%20Logs/","title":"VPC Flow Logs","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS vpc_flow_logs (\n  version int,\n  account_id string,\n  interface_id string,\n  srcaddr string,\n  dstaddr string,\n  srcport int,\n  dstport int,\n  protocol bigint,\n  packets bigint,\n  bytes bigint,\n  start bigint,\n  `end` bigint,\n  action string,\n  log_status string,\n  vpc_id string,\n  subnet_id string,\n  instance_id string,\n  tcp_flags int,\n  type string,\n  pkt_srcaddr string,\n  pkt_dstaddr string,\n  az_id string,\n  sublocation_type string,\n  sublocation_id string,\n  pkt_src_aws_service string,\n  pkt_dst_aws_service string,\n  flow_direction string,\n  traffic_path int\n)\nPARTITIONED BY (accid string, region string, day string)\nROW FORMAT DELIMITED\nFIELDS TERMINATED BY ' '\nLOCATION 's3://centralized-logs-demo/vpc-flow/'\nTBLPROPERTIES\n(\n\"skip.header.line.count\"=\"1\",\n\"projection.enabled\" = \"true\",\n\"projection.accid.type\" = \"enum\",\n\"projection.accid.values\" = \"073813292468\",\n\"projection.region.type\" = \"enum\",\n\"projection.region.values\" = \"ap-northeast-1,ap-northeast-2\",\n\"projection.day.type\" = \"date\",\n\"projection.day.range\" = \"2025/01/18,NOW\",\n\"projection.day.format\" = \"yyyy/MM/dd\",\n\"storage.location.template\" = \"s3://centralized-logs-demo/vpc-flow/AWSLogs/${accid}/vpcflowlogs/${region}/${day}\"\n)\n</code></pre>"},{"location":"Logging/Athena/WAF%20Logs/","title":"WAF Logs","text":"<pre><code>CREATE EXTERNAL TABLE `waf_logs`(\n  `timestamp` bigint,\n  `formatversion` int,\n  `webaclid` string,\n  `terminatingruleid` string,\n  `terminatingruletype` string,\n  `action` string,\n  `terminatingrulematchdetails` array &lt;\n                                    struct &lt;\n                                        conditiontype: string,\n                                        sensitivitylevel: string,\n                                        location: string,\n                                        matcheddata: array &lt; string &gt;\n                                          &gt;\n                                     &gt;,\n  `httpsourcename` string,\n  `httpsourceid` string,\n  `rulegrouplist` array &lt;\n                      struct &lt;\n                          rulegroupid: string,\n                          terminatingrule: struct &lt;\n                                              ruleid: string,\n                                              action: string,\n                                              rulematchdetails: array &lt;\n                                                                   struct &lt;\n                                                                       conditiontype: string,\n                                                                       sensitivitylevel: string,\n                                                                       location: string,\n                                                                       matcheddata: array &lt; string &gt;\n                                                                          &gt;\n                                                                    &gt;\n                                                &gt;,\n                          nonterminatingmatchingrules: array &lt;\n                                                              struct &lt;\n                                                                  ruleid: string,\n                                                                  action: string,\n                                                                  overriddenaction: string,\n                                                                  rulematchdetails: array &lt;\n                                                                                       struct &lt;\n                                                                                           conditiontype: string,\n                                                                                           sensitivitylevel: string,\n                                                                                           location: string,\n                                                                                           matcheddata: array &lt; string &gt;\n                                                                                              &gt;\n                                                                   &gt;,\n                                                                  challengeresponse: struct &lt;\n                                                                            responsecode: string,\n                                                                            solvetimestamp: string\n                                                                              &gt;,\n                                                                  captcharesponse: struct &lt;\n                                                                            responsecode: string,\n                                                                            solvetimestamp: string\n                                                                              &gt;\n                                                                    &gt;\n                                                             &gt;,\n                          excludedrules: string\n                            &gt;\n                       &gt;,\n`ratebasedrulelist` array &lt;\n                         struct &lt;\n                             ratebasedruleid: string,\n                             limitkey: string,\n                             maxrateallowed: int\n                               &gt;\n                          &gt;,\n  `nonterminatingmatchingrules` array &lt;\n                                    struct &lt;\n                                        ruleid: string,\n                                        action: string,\n                                        rulematchdetails: array &lt;\n                                                             struct &lt;\n                                                                 conditiontype: string,\n                                                                 sensitivitylevel: string,\n                                                                 location: string,\n                                                                 matcheddata: array &lt; string &gt;\n                                                                    &gt;\n                                                             &gt;,\n                                        challengeresponse: struct &lt;\n                                                            responsecode: string,\n                                                            solvetimestamp: string\n                                                             &gt;,\n                                        captcharesponse: struct &lt;\n                                                            responsecode: string,\n                                                            solvetimestamp: string\n                                                             &gt;\n                                          &gt;\n                                     &gt;,\n  `requestheadersinserted` array &lt;\n                                struct &lt;\n                                    name: string,\n                                    value: string\n                                      &gt;\n                                 &gt;,\n  `responsecodesent` string,\n  `httprequest` struct &lt;\n                    clientip: string,\n                    country: string,\n                    headers: array &lt;\n                                struct &lt;\n                                    name: string,\n                                    value: string\n                                      &gt;\n                                 &gt;,\n                    uri: string,\n                    args: string,\n                    httpversion: string,\n                    httpmethod: string,\n                    requestid: string\n                      &gt;,\n  `labels` array &lt;\n               struct &lt;\n                   name: string\n                     &gt;\n                &gt;,\n  `captcharesponse` struct &lt;\n                        responsecode: string,\n                        solvetimestamp: string,\n                        failureReason: string\n                          &gt;,\n  `challengeresponse` struct &lt;\n                        responsecode: string,\n                        solvetimestamp: string,\n                        failureReason: string\n                        &gt;,\n  `ja3Fingerprint` string,\n  `oversizefields` string,\n  `requestbodysize` int,\n  `requestbodysizeinspectedbywaf` int\n)\nPARTITIONED BY (`year` int, `month` int, `day` int, `hour` int) \nROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe' \nSTORED AS INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' \nOUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'\nLOCATION 's3://centralized-logs-demo/waf/'\nTBLPROPERTIES(\n    'projection.enabled' = 'true',\n    'projection.year.range'='2024,2025', \n    'projection.year.type'='integer',\n    'projection.month.digits'='2', \n    'projection.month.range'='1,12',\n    'projection.month.type'='integer',\n    'projection.day.digits'='2',\n    'projection.day.range'='1,31', \n    'projection.day.type'='integer',\n    'projection.hour.digits'='2',\n    'projection.hour.range'='0,23',\n    'projection.hour.type'='integer')\n</code></pre>"},{"location":"Logging/Fluent-Bit/EC2/","title":"EC2","text":""},{"location":"Logging/Fluent-Bit/EC2/#install","title":"Install","text":"<pre><code>curl https://raw.githubusercontent.com/fluent/fluent-bit/master/install.sh | sh\n\nsystemctl start fluent-bit\nsystemctl enable fluent-bit\n\nln -s /opt/fluent-bit/bin/fluent-bit /usr/local/bin/fluent-bit\n</code></pre>"},{"location":"Logging/Fluent-Bit/EC2/#config-file","title":"Config File","text":"<pre><code>cd /etc/fluent-bit\nvim fluent-bit.conf\n</code></pre>"},{"location":"Logging/Fluent-Bit/EC2/#input-example","title":"INPUT Example","text":"<pre><code>[INPUT]\n    Name   tail\n    Path   /app/app.log\n    Tag    kinesis\n    Parser color\n</code></pre>"},{"location":"Logging/Fluent-Bit/EC2/#filter-example","title":"FILTER Example","text":"<pre><code>[FILTER]\n    Name    grep\n    Match   *\n    Exclude log /healthcheck\n</code></pre>"},{"location":"Logging/Fluent-Bit/EC2/#output-example","title":"OUTPUT Example","text":"<pre><code>[OUTPUT]\n    Name            kinesis_streams\n    Match           kinesis\n    region          ap-northeast-2\n    stream          wsi-log\n    time_key        time\n    time_key_format %Y-%m-%d %H:%M:%S.%3N\n</code></pre>"},{"location":"Logging/Fluent-Bit/EC2/#parser-file","title":"Parser File","text":"<p><pre><code>cd /etc/fluent-bit\nvim parsers.conf\n</code></pre> <pre><code># [2023-08-21 20:51:47,662] 127.0.0.1 - - GET /v1/color/red HTTP/1.1 200\n[PARSER]\n    Name        color\n    Format      regex\n    Regex       ^\\[(?&lt;time&gt;[^\\]]*)\\] (?&lt;host&gt;[^ ]*) - - (?&lt;method&gt;[^ ]*) (?&lt;path&gt;[^ ]*) (?&lt;HTTP&gt;[^ ]*) (?&lt;code&gt;[^ ]*)\n    Time_Key    time\n    Time_Format %Y-%m-%d %H:%M:%S,%L\n    Time_Keep   Off\n    Types       code:integer\n\n# 127.0.0.1 - [14/Aug/2024:23:54:45 +0900] \"GET /log HTTP/1.1\" 200 \"curl/7.54.1\"\n[PARSER]\n    Name        app\n    Format      regex\n    Regex       ^(?&lt;clientip&gt;[^ ]*) - \\[(?&lt;time&gt;[^\\]]*)\\] \"(?&lt;method&gt;[^ ]*) (?&lt;path&gt;[^ ]*) (?&lt;protocol&gt;[^\"]*)\" (?&lt;responsecode&gt;[^ ]*) \"(?&lt;useragent&gt;[^\"]*)\"\n    Time_Key    time\n    Time_Keep   On\n    Time_Format %d/%b/%Y:%H:%M:%S %z\n</code></pre></p>"},{"location":"Logging/Fluent-Bit/ECS/","title":"ECS","text":""},{"location":"Logging/Fluent-Bit/ECS/#environment-variables-set-by-init-tag","title":"Environment Variables set by init tag","text":"<pre><code>AWS_REGION / ECS_LAUNCH_TYPE / ECS_CLUSTER / ECS_FAMILY\nECS_TASK_ARN / ECS_TASK_ID / ECS_REVISION / ECS_TASK_DEFINITION\n</code></pre>"},{"location":"Logging/Fluent-Bit/ECS/#config-file-example","title":"Config File Example","text":"extra.conf<pre><code>[SERVICE]\n    log_level    info\n    Parsers_File /fluent-bit/parsers/extra.conf\n\n[INPUT]\n    Name              tail\n    Tag               service-log\n    Path              /app/log/app.log\n    Skip_Long_Lines   On\n    Refresh_Interval  10\n    Rotate_Wait       30\n\n[FILTER]\n    Name    grep\n    Match   *\n    Exclude log /healthcheck\n\n[FILTER]\n    Name     parser\n    Match    *\n    Key_Name log\n    Parser   demo\n\n[OUTPUT]\n    Name              cloudwatch_logs\n    Match             *\n    region            ap-northeast-2\n    log_group_name    /wsi/webapp/product\n    log_stream_name   ${ECS_TASK_ID}\n    auto_create_group true\n    retry_limit       2\n</code></pre> parsers.conf<pre><code>[PARSER]\n    Name        demo\n    Format      regex\n    Regex       ([^\\s]+)\\s(?&lt;time&gt;[^|]*)\\s\\|\\s(?&lt;status&gt;[^ ]*)\\s\\|\\s+(?&lt;latency&gt;[^ ]*)\\s\\|\\s+(?&lt;client_ip&gt;[^ ]*)\\s\\|\\s(?&lt;method&gt;[^ ]*)\\s+\"(?&lt;path&gt;[^ ]*)\"\n    Time_Key    time\n    Time_Format %Y/%m/%d - %H:%M:%S\n    Time_Keep   Off\n    Types       status:integer\n</code></pre>"},{"location":"Logging/Fluent-Bit/ECS/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM public.ecr.aws/aws-observability/aws-for-fluent-bit:init-latest\nCOPY extra.conf /fluent-bit/conf/extra.conf\nCOPY parsers.conf /fluent-bit/parsers/extra.conf\n</code></pre>"},{"location":"Logging/Fluent-Bit/ECS/#task-definition","title":"Task Definition","text":"<pre><code>\"firelensConfiguration\": {\n    \"type\": \"fluentbit\",\n    \"options\": {\n        \"config-file-type\": \"file\",\n        \"config-file-value\": \"/fluent-bit/conf/extra.conf\"\n    }\n}\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28DaemonSet%29/","title":"EKS (Daemonset)","text":""},{"location":"Logging/Fluent-Bit/EKS%20%28DaemonSet%29/#namespace","title":"Namespace","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cloudwatch-namespace.yaml\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28DaemonSet%29/#serviceaccount","title":"ServiceAccount","text":"<pre><code>aws iam create-policy \\\n    --policy-name FluentBitIAMPolicy \\\n    --policy-document file://iam_policy.json\n\neksctl create iamserviceaccount \\\n  --cluster=$CLUSTER_NAME \\\n  --namespace=amazon-cloudwatch \\\n  --name=fluent-bit \\\n  --role-name FluentBitIAMRole \\\n  --attach-policy-arn=arn:aws:iam::$AWS_ACCOUNT_ID:policy/FluentBitIAMPolicy \\\n  --approve\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28DaemonSet%29/#configmap","title":"ConfigMap","text":""},{"location":"Logging/Fluent-Bit/EKS%20%28DaemonSet%29/#cluster-info","title":"Cluster Info","text":"<pre><code>FluentBitHttpPort='2020'\nFluentBitReadFromHead='Off'\n[[ ${FluentBitReadFromHead} = 'On' ]] &amp;&amp; FluentBitReadFromTail='Off'|| FluentBitReadFromTail='On'\n[[ -z ${FluentBitHttpPort} ]] &amp;&amp; FluentBitHttpServer='Off' || FluentBitHttpServer='On'\nkubectl create configmap fluent-bit-cluster-info \\\n--from-literal=cluster.name=${CLUSTER_NAME} \\\n--from-literal=http.server=${FluentBitHttpServer} \\\n--from-literal=http.port=${FluentBitHttpPort} \\\n--from-literal=read.head=${FluentBitReadFromHead} \\\n--from-literal=read.tail=${FluentBitReadFromTail} \\\n--from-literal=logs.region=${AWS_DEFAULT_REGION} -n amazon-cloudwatch\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28DaemonSet%29/#config","title":"Config","text":"<p>configmap.yaml<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: fluent-bit-config\n  namespace: amazon-cloudwatch\n  labels:\n    k8s-app: fluent-bit\ndata:\n  fluent-bit.conf: |\n    [SERVICE]\n        Flush                     5\n        Grace                     30\n        Log_Level                 error\n        Daemon                    off\n        Parsers_File              parsers.conf\n        HTTP_Server               ${HTTP_SERVER}\n        HTTP_Listen               0.0.0.0\n        HTTP_Port                 ${HTTP_PORT}\n        storage.path              /var/fluent-bit/state/flb-storage/\n        storage.sync              normal\n        storage.checksum          off\n        storage.backlog.mem_limit 5M\n\n    [INPUT]\n        Name                tail\n        Tag                 application.*\n        Path                /var/log/containers/customer*.log\n        multiline.parser    docker, cri\n        DB                  /var/fluent-bit/state/flb_container.db\n        Mem_Buf_Limit       50MB\n        Skip_Long_Lines     On\n        Refresh_Interval    10\n        Rotate_Wait         30\n        storage.type        filesystem\n        Read_from_Head      ${READ_FROM_HEAD}\n\n    [FILTER]\n        Name                kubernetes\n        Match               application.*\n        Kube_URL            https://kubernetes.default.svc:443\n        Kube_Tag_Prefix     application.var.log.containers.\n        Merge_Log           On\n        Merge_Log_Key       log_processed\n        K8S-Logging.Parser  On\n        K8S-Logging.Exclude Off\n        Labels              Off\n        Annotations         Off\n        Use_Kubelet         On\n        Kubelet_Port        10250\n        Buffer_Size         0\n\n    [OUTPUT]\n        Name                cloudwatch_logs\n        Match               application.var.log.containers.customer*\n        region              ${AWS_REGION}\n        log_group_name      /wsi/webapp/customer\n        log_stream_prefix   ${HOST_NAME}-\n        auto_create_group   true\n\n  parsers.conf: |\n    [PARSER]\n        Name   app\n        Format regex\n        Regex  ^(?&lt;year&gt;[^-]*)-(?&lt;month&gt;[^-]*)-(?&lt;day&gt;[^ ]*) (?&lt;hour&gt;[^:]*):(?&lt;minute&gt;[^:]*):(?&lt;second&gt;[^,]*),[^ ]* - - (?&lt;ip&gt;[^ ]*) (?&lt;port&gt;[^ ]*) (?&lt;method&gt;[^ ]*) (?&lt;path&gt;[^ ]*) (?&lt;statuscode&gt;[^ ]*)\n</code></pre> <pre><code>kubectl apply -f configmap.yaml\n</code></pre></p>"},{"location":"Logging/Fluent-Bit/EKS%20%28DaemonSet%29/#daemonset","title":"DaemonSet","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/ArcoKim/AWS-Study/main/docs/Logging/Fluent-Bit/daemonset.yaml\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Fargate%29/","title":"EKS (Fargate)","text":""},{"location":"Logging/Fluent-Bit/EKS%20%28Fargate%29/#create-namespace","title":"Create Namespace","text":"<pre><code>kind: Namespace\napiVersion: v1\nmetadata:\n  name: aws-observability\n  labels:\n    aws-observability: enabled\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Fargate%29/#create-policy","title":"Create Policy","text":"<pre><code>aws iam create-policy --policy-name eks-fargate-logging-policy --policy-document file://iam_policy.json\n\naws iam attach-role-policy \\\n  --policy-arn arn:aws:iam::$AWS_ACCOUNT_ID:policy/eks-fargate-logging-policy \\\n  --role-name AmazonEKSFargatePodExecutionRole\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Fargate%29/#resources","title":"Resources","text":""},{"location":"Logging/Fluent-Bit/EKS%20%28Fargate%29/#cloudwatch-logs","title":"CloudWatch Logs","text":"<pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: aws-logging\n  namespace: aws-observability\ndata:\n  flb_log_cw: \"false\"  # Set to true to ship Fluent Bit process logs to CloudWatch.\n  filters.conf: |\n    [FILTER]\n        Name     parser\n        Match    *\n        Key_name log\n        Parser   crio\n    [FILTER]\n        Name                kubernetes\n        Match               kube.*\n        Merge_Log           On\n        Keep_Log            Off\n        Buffer_Size         0\n        Kube_Meta_Cache_TTL 300s\n  output.conf: |\n    [OUTPUT]\n        Name               cloudwatch_logs\n        Match              kube.*\n        region             ap-northeast-2\n        log_group_name     /aws/eks/fargate/app\n        log_stream_prefix  fluent-bit-\n        log_retention_days 60\n        auto_create_group  true\n  parsers.conf: |\n    [PARSER]\n        Name        crio\n        Format      Regex\n        Regex       ^(?&lt;time&gt;[^ ]+) (?&lt;stream&gt;stdout|stderr) (?&lt;logtag&gt;P|F) (?&lt;log&gt;.*)$\n        Time_Key    time\n        Time_Format %Y-%m-%dT%H:%M:%S.%L%z\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Fargate%29/#opensearch","title":"OpenSearch","text":"<pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: aws-logging\n  namespace: aws-observability\ndata:\n  output.conf: |\n    [OUTPUT]\n      Name               es\n      Match              *\n      Host               search-example-gjxdcilagiprbglqn42jsty66y.region-code.es.amazonaws.com\n      Port               443\n      Index              app-log\n      AWS_Auth           On\n      AWS_Region         ap-northeast-2\n      tls                On\n      Time_Key           time\n      Suppress_Type_Name On\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Fargate%29/#kinesis-data-firehose","title":"Kinesis Data Firehose","text":"<pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: aws-logging\n  namespace: aws-observability\ndata:\n  output.conf: |\n    [OUTPUT]\n     Name            kinesis_firehose\n     Match           *\n     region          ap-northeast-2\n     delivery_stream demo-firehose\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/","title":"EKS (Sidecar)","text":""},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/#serviceaccount","title":"ServiceAccount","text":"<pre><code>aws iam create-policy \\\n    --policy-name FluentdIAMPolicy \\\n    --policy-document file://iam_policy.json\n\neksctl create iamserviceaccount \\\n  --cluster=$CLUSTER_NAME \\\n  --namespace=fluentd \\\n  --name=fluentd \\\n  --role-name FluentdIAMPolicy \\\n  --attach-policy-arn=arn:aws:iam::$AWS_ACCOUNT_ID:policy/FluentdIAMPolicy \\\n  --approve\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/#configmap","title":"ConfigMap","text":""},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/#fluent-bit","title":"Fluent-Bit","text":"<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: fluent-bit-config\n  namespace: app\ndata:\n  fluent-bit.conf: |-\n    [SERVICE]\n        Flush             5\n        Grace             30\n        Log_Level         info\n        Daemon            off\n        HTTP_Server       Off\n\n    [INPUT]\n        Name              tail\n        Tag               ${POD_NAME}\n        Path              /log/app.log\n        Refresh_Interval  10\n\n    [OUTPUT]\n        Name              forward\n        Match             *\n        Host              fluentd.fluentd\n        Port              24224\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/#fluentd","title":"Fluentd","text":"<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: fluentd-config\n  namespace: fluentd\ndata:\n  fluent.conf: |-\n    &lt;source&gt;\n      @type forward\n      bind 0.0.0.0\n      port 24224\n    &lt;/source&gt;\n\n    &lt;match service-a-**&gt;\n      @type cloudwatch_logs\n      region ap-northeast-2\n      log_group_name /app/sample\n      log_stream_name sample\n      auto_create_stream true\n      &lt;buffer&gt;\n        flush_interval 5\n      &lt;/buffer&gt;\n    &lt;/match&gt;\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/#pod","title":"Pod","text":""},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/#application","title":"Application","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sample\n  namespace: app\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: sample\n  template:\n    metadata:\n      labels:\n        app: sample\n    spec:\n      terminationGracePeriodSeconds: 60\n      containers:\n      - name: sample\n        image: sample\n        resources:\n          requests:\n            cpu: 250m\n            memory: 512Mi\n          limits:\n            cpu: 250m\n            memory: 512Mi\n        ports:\n          - containerPort: 8080\n        volumeMounts:\n          - name: log-volume\n            mountPath: /log\n      - name: default-fluentbit\n        image: fluent/fluent-bit:latest\n        imagePullPolicy: IfNotPresent\n        env:\n          - name: POD_NAME\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.name\n        volumeMounts:\n          - name: config-volume\n            mountPath: /fluent-bit/etc/\n          - name: log-volume\n            mountPath: /log\n      volumes:\n        - name: log-volume\n          emptyDir: {}\n        - name: config-volume\n          configMap:\n            name: fluent-bit-config\n</code></pre>"},{"location":"Logging/Fluent-Bit/EKS%20%28Sidecar%29/#fluentd_1","title":"Fluentd","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluentd\n  namespace: fluentd\nspec:\n  selector:\n    matchLabels:\n      k8s-app: fluentd-logging\n  template:\n    metadata:\n      labels:\n        k8s-app: fluentd-logging\n    spec:\n      terminationGracePeriodSeconds: 30\n      serviceAccountName: fluentd\n      containers:\n      - name: fluentd\n        image: fluent/fluentd-kubernetes-daemonset:v1.10.3-debian-cloudwatch-1.0\n        resources:\n          limits:\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        ports:\n          - containerPort: 24224\n        volumeMounts:\n          - name: config-volume\n            mountPath: /fluentd/etc\n      volumes:\n        - name: config-volume\n          configMap:\n            name: fluentd-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: fluentd\n  namespace: fluentd\nspec:\n  type: ClusterIP\n  selector:\n    k8s-app: fluentd-logging\n  ports:\n    - protocol: TCP\n      port: 24224\n      targetPort: 24224\n</code></pre>"},{"location":"Logging/Fluent-Bit/IAM%20Policy/","title":"IAM Policy","text":""},{"location":"Logging/Fluent-Bit/IAM%20Policy/#cloudwatch-logs","title":"CloudWatch Logs","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"logs:CreateLogStream\",\n            \"logs:CreateLogGroup\",\n            \"logs:DescribeLogGroups\",\n            \"logs:DescribeLogStreams\",\n            \"logs:PutLogEvents\",\n            \"logs:PutRetentionPolicy\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n</code></pre>"},{"location":"Logging/Fluent-Bit/IAM%20Policy/#kinesis-data-streams","title":"Kinesis Data Streams","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"kinesis:PutRecords\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n</code></pre>"},{"location":"Logging/Fluent-Bit/IAM%20Policy/#kinesis-data-firehose","title":"Kinesis Data Firehose","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"firehose:PutRecordBatch\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n</code></pre>"},{"location":"Logging/Fluent-Bit/IAM%20Policy/#opensearch","title":"OpenSearch","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"es:ESHttp*\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n</code></pre>"},{"location":"Monitoring/Amazon%20Prometheus/","title":"Amazon Prometheus","text":""},{"location":"Monitoring/Amazon%20Prometheus/#create-iam-role","title":"Create IAM Role","text":"createIRSA-AMPIngest.sh<pre><code>#!/bin/bash -e\nSERVICE_ACCOUNT_NAMESPACE=monitoring\nOIDC_PROVIDER=$(aws eks describe-cluster --name $CLUSTER_NAME --query \"cluster.identity.oidc.issuer\" --output text | sed -e \"s/^https:\\/\\///\")\nSERVICE_ACCOUNT_AMP_INGEST_NAME=amp-iamproxy-ingest-service-account\nSERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE=amp-iamproxy-ingest-role\nSERVICE_ACCOUNT_IAM_AMP_INGEST_POLICY=AMPIngestPolicy\n\ncat &lt;&lt;EOF &gt; TrustPolicy.json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Federated\": \"arn:aws:iam::${AWS_ACCOUNT_ID}:oidc-provider/${OIDC_PROVIDER}\"\n        },\n        \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n        \"Condition\": {\n            \"StringEquals\": {\n                \"${OIDC_PROVIDER}:sub\": \"system:serviceaccount:${SERVICE_ACCOUNT_NAMESPACE}:${SERVICE_ACCOUNT_AMP_INGEST_NAME}\"\n            }\n        }\n    }]\n}\nEOF\n\ncat &lt;&lt;EOF &gt; PermissionPolicyIngest.json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"aps:RemoteWrite\", \n            \"aps:GetSeries\", \n            \"aps:GetLabels\",\n            \"aps:GetMetricMetadata\"\n        ], \n        \"Resource\": \"*\"\n    }]\n}\nEOF\n\nfunction getRoleArn() {\n  OUTPUT=$(aws iam get-role --role-name $1 --query 'Role.Arn' --output text 2&gt;&amp;1)\n\n  # Check for an expected exception\n  if [[ $? -eq 0 ]]; then\n    echo $OUTPUT\n  elif [[ -n $(grep \"NoSuchEntity\" &lt;&lt;&lt; $OUTPUT) ]]; then\n    echo \"\"\n  else\n    &gt;&amp;2 echo $OUTPUT\n    return 1\n  fi\n}\n\nSERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE_ARN=$(getRoleArn $SERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE)\nif [ \"$SERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE_ARN\" = \"\" ]; \nthen\n\n  SERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE_ARN=$(aws iam create-role \\\n  --role-name $SERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE \\\n  --assume-role-policy-document file://TrustPolicy.json \\\n  --query \"Role.Arn\" --output text)\n\n  SERVICE_ACCOUNT_IAM_AMP_INGEST_ARN=$(aws iam create-policy --policy-name $SERVICE_ACCOUNT_IAM_AMP_INGEST_POLICY \\\n  --policy-document file://PermissionPolicyIngest.json \\\n  --query 'Policy.Arn' --output text)\n\n  aws iam attach-role-policy \\\n  --role-name $SERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE \\\n  --policy-arn $SERVICE_ACCOUNT_IAM_AMP_INGEST_ARN  \nelse\n    echo \"$SERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE_ARN IAM role for ingest already exists\"\nfi\necho $SERVICE_ACCOUNT_IAM_AMP_INGEST_ROLE_ARN\n\neksctl utils associate-iam-oidc-provider --cluster $CLUSTER_NAME --approve\n</code></pre>"},{"location":"Monitoring/Amazon%20Prometheus/#install-with-helm","title":"Install with Helm","text":"<p>Please note that you need to set the WORKSPACE_ID variable. values.yaml<pre><code>serviceAccounts:\n  server:\n    name: amp-iamproxy-ingest-service-account\n    annotations: \n      eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/amp-iamproxy-ingest-role\nserver:\n  remoteWrite:\n    - url: https://aps-workspaces.${AWS_DEFAULT_REGION}.amazonaws.com/workspaces/${WORKSPACE_ID}/api/v1/remote_write\n      sigv4:\n        region: ${AWS_DEFAULT_REGION}\n      queue_config:\n        max_samples_per_send: 1000\n        max_shards: 200\n        capacity: 2500\n  service:\n    type: NodePort\n</code></pre> <pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics\nhelm repo update\n\nhelm install prometheus prometheus-community/prometheus -n monitoring -f values.yaml\n</code></pre></p>"},{"location":"Monitoring/CloudWatch%20Logs%20Insights/","title":"CloudWatch Logs Insights","text":""},{"location":"Monitoring/CloudWatch%20Logs%20Insights/#2xx-filter","title":"2XX Filter","text":"<pre><code>fields @timestamp, @message\n| filter @message like /\\| 2[0-9][0-9] \\|/\n| filter @message not like /\\/healthcheck/\n| sort @timestamp desc\n| limit 100\n</code></pre>"},{"location":"Monitoring/Container%20Insights/","title":"Container Insights","text":""},{"location":"Monitoring/Container%20Insights/#create-serviceaccount","title":"Create ServiceAccount","text":"<pre><code>eksctl create iamserviceaccount \\\n  --name cloudwatch-agent \\\n  --namespace amazon-cloudwatch --cluster $CLUSTER_NAME \\\n  --role-name AmazonEKS_CloudWatch_DriverRole  \\\n  --attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n  --role-only \\\n  --approve\n</code></pre>"},{"location":"Monitoring/Container%20Insights/#create-addon-with-awscli","title":"Create Addon with AWSCLI","text":"<pre><code>aws eks create-addon \\\n  --addon-name amazon-cloudwatch-observability \\\n  --cluster-name $CLUSTER_NAME \\\n  --service-account-role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/AmazonEKS_CloudWatch_DriverRole \\\n  --configuration-values '{ \"containerLogs\": { \"enabled\": false } }'\n</code></pre>"},{"location":"Monitoring/Grafana/","title":"Grafana","text":""},{"location":"Monitoring/Grafana/#install-with-helm","title":"Install with Helm","text":"<p>values.yaml<pre><code>adminUser: admin\nadminPassword: admin1234!\n\nservice:\n  type: NodePort\n\npersistence:\n  enabled: true\n</code></pre> <pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\n\nhelm install grafana grafana/grafana -n monitoring -f values.yaml\n</code></pre></p>"},{"location":"Monitoring/Grafana/#grafana-dashboard-examples-using-prometheus","title":"Grafana Dashboard Examples (Using Prometheus)","text":"Title Import Kubernetes cluster monitoring (via Prometheus) 3119 Kubernetes Pods Monitoring 6417 Kubernetes Deployment Statefulset Daemonset metrics 8588 Kubernetes Cluster 7249 Kubernetes All-in-one Cluster Monitoring KR 13770"},{"location":"Monitoring/Istio%20Monitoring/","title":"Istio Monitoring","text":""},{"location":"Monitoring/Istio%20Monitoring/#install-with-samples","title":"Install with Samples","text":"<pre><code>kubectl apply -f ~/istio-*/samples/addons\n</code></pre>"},{"location":"Monitoring/Prometheus%20Stack/","title":"Prometheus Stack","text":""},{"location":"Monitoring/Prometheus%20Stack/#install-with-helm","title":"Install with Helm","text":"<p>values.yaml<pre><code>grafana:\n  adminPassword: admin1234!\n</code></pre> <pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n\nhelm install prometheus-stack prometheus-community/kube-prometheus-stack -n monitoring -f values.yaml\n</code></pre></p>"},{"location":"Search/CRUD/","title":"CRUD","text":""},{"location":"Search/CRUD/#create","title":"Create","text":""},{"location":"Search/CRUD/#with-document-id","title":"With Document ID","text":"<pre><code>PUT demo/_create/1\n{\n    \"time\": \"2024-01-25T06:21:32.442423121Z\",\n    \"stream\": \"stdout\",\n    \"value\": \"hello\",\n    \"order\": 1,\n    \"tag\": {\n        \"Name\": \"arcokim\",\n        \"job\": \"developer\"\n    }\n}\n</code></pre>"},{"location":"Search/CRUD/#without-document-id","title":"Without document ID","text":"<pre><code>POST demo/_doc\n{\n    \"time\": \"2024-01-25T06:21:32.442423121Z\",\n    \"stream\": \"stdout\",\n    \"value\": \"hello\",\n    \"order\": 1,\n    \"tag\": {\n        \"Name\": \"arcokim\",\n        \"job\": \"developer\"\n    }\n}\n</code></pre>"},{"location":"Search/CRUD/#read","title":"Read","text":"<pre><code>GET demo/_doc/1\n</code></pre>"},{"location":"Search/CRUD/#update","title":"Update","text":""},{"location":"Search/CRUD/#update-all","title":"Update All","text":"<pre><code>PUT demo/_doc/1\n{\n    \"time\": \"2024-01-25T06:21:32.442423121Z\",\n    \"stream\": \"stderr\",\n    \"value\": \"hello [updated]\",\n    \"order\": 2,\n    \"tag\": {\n        \"Name\": \"arcokim\",\n        \"job\": \"developer\"\n    }\n}\n</code></pre>"},{"location":"Search/CRUD/#only-some-updates","title":"Only some updates","text":"<pre><code>POST demo/_update/1\n{\n    \"doc\": {\n        \"stream\": \"stderr\",\n        \"value\": \"hello [updated]\"\n    }\n}\n</code></pre>"},{"location":"Search/CRUD/#delete","title":"Delete","text":"<pre><code>DELETE demo/_doc/1\n</code></pre>"},{"location":"Search/Index/","title":"Index","text":""},{"location":"Search/Index/#create-index","title":"Create Index","text":"<pre><code>PUT demo\n{\n  \"settings\": {\n    \"index\": {\n      \"number_of_shards\": 2,\n      \"number_of_replicas\": 1\n    }\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"time\": {\"type\": \"date\"},\n      \"stream\": {\"type\": \"keyword\"},\n      \"value\": {\"type\": \"text\"},\n      \"order\": {\"type\": \"integer\"},\n      \"tag\": {\"type\": \"object\"}\n    }\n  }\n}\n</code></pre>"},{"location":"Search/OpenSearch%20Permission/","title":"OpenSearch Permission","text":""},{"location":"Search/OpenSearch%20Permission/#grant-all-access-to-iam-role","title":"Grant All Access to IAM Role","text":"<p>Please note that you need to set several variables. <pre><code>ENDPOINT_URL=https://$(aws opensearch describe-domain --domain-name $DOMAIN_NAME --output text --query \"DomainStatus.Endpoint\")\ncurl -sS -u \"$USERNAME:$PASSWORD\" -X PATCH $ENDPOINT_URL/_opendistro/_security/api/rolesmapping/all_access?pretty -H 'Content-Type: application/json' -d '[{\"op\": \"add\", \"path\": \"/backend_roles\", \"value\": [\"'$IAM_ROLE_ARN'\"]}]'\n</code></pre></p>"},{"location":"Security/AWS%20WAF/","title":"AWS WAF","text":""},{"location":"Security/AWS%20WAF/#owasp-top-10-xss","title":"OWASP Top 10 &amp;&amp; XSS","text":"<ul> <li>Core rule set</li> </ul>"},{"location":"Security/AWS%20WAF/#sql-injection","title":"SQL Injection","text":"<ul> <li>SQL database</li> </ul>"},{"location":"Security/AWS%20WAF/#log4shell","title":"Log4shell","text":"<ul> <li>AWSManagedRulesKnownBadInputsRuleSet</li> <li>AWSManagedRulesAnonymousIpList</li> <li>AWSManagedRulesCommonRuleSet</li> </ul>"},{"location":"Security/IAM%20Policy/","title":"IAM Policy","text":""},{"location":"Security/IAM%20Policy/#runinstances-requesttag","title":"RunInstances (RequestTag)","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowToDescribeAll\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"AllowRunInstances\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": [\n                \"arn:aws:ec2:*::image/*\",\n                \"arn:aws:ec2:*::snapshot/*\",\n                \"arn:aws:ec2:*:*:subnet/*\",\n                \"arn:aws:ec2:*:*:network-interface/*\",\n                \"arn:aws:ec2:*:*:security-group/*\",\n                \"arn:aws:ec2:*:*:key-pair/*\",\n                \"arn:aws:ec2:*:*:volume/*\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowRunInstancesWithRestrictions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:*:*:instance/*\"\n            ],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:RequestTag/wsi-project\": \"developer\"\n                }\n            }\n        },\n        {\n            \"Sid\": \"AllowCreateTagsOnlyLaunching\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:*:*:instance/*\"\n            ],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:CreateAction\": [\n                        \"RunInstances\"\n                    ]\n                }\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"Security/IAM%20Policy/#terminateinstances-resourcetag","title":"TerminateInstances (ResourceTag)","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowToDescribeAll\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"AllowTerminateInstancesWithRestrictions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:TerminateInstances\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:ResourceTag/wsi-project\": \"developer\"\n                }\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"Security/Keycloak/","title":"Keycloak","text":""},{"location":"Security/Keycloak/#install","title":"Install","text":"<pre><code>docker run -d -p 8080:8080 --name keycloak -e KC_BOOTSTRAP_ADMIN_USERNAME=admin -e KC_BOOTSTRAP_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak:26.1.0 start-dev\ndocker exec -it keycloak bash\ncd /opt/keycloak/bin\n./kcadm.sh config credentials --server http://localhost:8080 --realm master --user admin\n./kcadm.sh update realms/master -s sslRequired=NONE\n</code></pre>"},{"location":"Security/Linux%20Secure/","title":"Linux Secure","text":""},{"location":"Security/Linux%20Secure/#ssh-connect","title":"SSH Connect","text":"<ul> <li>Modify /etc/pam.d/system-auth, /etc/pam.d/password-auth</li> <li>Example : After 5 failed attempts, lock for 120 seconds <pre><code># Add to the \"auth\" section second line\nauth        required      pam_faillock.so preauth silent audit deny=5 unlock_time=120 fail_interval=300\n\n# Add to the \"auth\" section fourth line\nauth        [default=die] pam_faillock.so authfail audit deny=5 unlock_time=120\n\n# Add to the \"account\" section second line\naccount     required      pam_faillock.so\n</code></pre></li> </ul>"},{"location":"Security/AWS%20Config/Preserve%20Security%20Group/","title":"Preserve Security Group","text":""},{"location":"Security/AWS%20Config/Preserve%20Security%20Group/#add-permission","title":"Add Permission","text":"<pre><code>aws lambda add-permission --function-name preserve-ssh --action lambda:InvokeFunction --statement-id config --principal config.amazonaws.com\n</code></pre>"},{"location":"Security/AWS%20Config/Preserve%20Security%20Group/#iam-policy","title":"IAM Policy","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"config:PutEvaluations\",\n            \"ec2:DescribeInstances\",\n            \"ec2:DescribeSecurityGroups\",\n            \"ec2:AuthorizeSecurityGroup*\",\n            \"ec2:RevokeSecurityGroup*\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n</code></pre>"},{"location":"Security/AWS%20Config/Preserve%20Security%20Group/#function","title":"Function","text":"<pre><code>import boto3\nimport botocore\nimport json\n\nAPPLICABLE_RESOURCES = [\"AWS::EC2::SecurityGroup\"]\n\ndef evaluate_compliance(configuration_item):\n    if configuration_item[\"resourceType\"] not in APPLICABLE_RESOURCES:\n        return {\n            \"compliance_type\" : \"NOT_APPLICABLE\",\n            \"annotation\" : \"The rule doesn't apply to resources of type \" +\n            configuration_item[\"resourceType\"] + \".\"\n        }\n\n    if configuration_item[\"configurationItemStatus\"] == \"ResourceDeleted\":\n        return {\n            \"compliance_type\": \"NOT_APPLICABLE\",\n            \"annotation\": \"The configurationItem was deleted and therefore cannot be validated.\"\n        }\n\n    group_id = configuration_item[\"configuration\"][\"groupId\"]\n    ec2 = boto3.client(\"ec2\")\n\n    response = ec2.describe_instances(\n        Filters=[\n            {\n                'Name': 'tag:Name',\n                'Values': [\n                    'wsi-test',\n                ]\n            }\n        ]\n    )\n\n    securityGroups = [securityGroup['GroupId'] for securityGroup in response['Reservations'][0]['Instances'][0]['SecurityGroups']]\n    if group_id not in securityGroups:\n        return {\n            \"compliance_type\": \"COMPLIANT\",\n            \"annotation\": \"The group is in the exception list.\"\n        }\n\n    try:\n        response = ec2.describe_security_groups(GroupIds=[group_id])\n    except botocore.exceptions.ClientError as e:\n        return {\n            \"compliance_type\" : \"NON_COMPLIANT\",\n            \"annotation\" : \"describe_security_groups failure on group \" + group_id\n        }\n\n    sg_ingress = response[\"SecurityGroups\"][0][\"IpPermissions\"]\n    REQUIRED_INGRESS = [\n        {\"IpProtocol\" : \"tcp\",\"FromPort\" : 22,\"ToPort\" : 22,\"UserIdGroupPairs\" : [],\"IpRanges\" : [{\"CidrIp\" : \"118.221.173.107/32\"}],\"PrefixListIds\" : [],\"Ipv6Ranges\" : []},\n        {\"IpProtocol\" : \"tcp\",\"FromPort\" : 80,\"ToPort\" : 80,\"UserIdGroupPairs\" : [{\"GroupId\": group_id, \"UserId\": \"828680151668\"}],\"IpRanges\" : [],\"Ipv6Ranges\" : [],\"PrefixListIds\" : []},\n        {\"IpProtocol\" : \"tcp\",\"FromPort\" : 3306,\"ToPort\" : 3306,\"UserIdGroupPairs\" : [{\"GroupId\": group_id, \"UserId\": \"828680151668\"}],\"IpRanges\" : [],\"Ipv6Ranges\" : [],\"PrefixListIds\" : []}\n    ]\n    REQUIRED_EGRESS = [\n        {\"IpProtocol\" : \"tcp\",\"FromPort\" : 22,\"ToPort\" : 22,\"UserIdGroupPairs\" : [],\"IpRanges\" : [{\"CidrIp\" : \"0.0.0.0/0\"}],\"PrefixListIds\" : [],\"Ipv6Ranges\" : []},\n        {\"IpProtocol\" : \"tcp\",\"FromPort\" : 80,\"ToPort\" : 80,\"UserIdGroupPairs\" : [],\"IpRanges\" : [{\"CidrIp\" : \"0.0.0.0/0\"}],\"PrefixListIds\" : [],\"Ipv6Ranges\" : []}, \n        {\"IpProtocol\" : \"tcp\",\"FromPort\" : 443,\"ToPort\" : 443,\"UserIdGroupPairs\" : [],\"IpRanges\" : [{\"CidrIp\" : \"0.0.0.0/0\"}],\"PrefixListIds\" : [],\"Ipv6Ranges\" : []}\n    ]\n    authorize_ingress = [item for item in REQUIRED_INGRESS if item not in sg_ingress]\n    revoke_ingress = [item for item in sg_ingress if item not in REQUIRED_INGRESS]\n\n    if authorize_ingress or revoke_ingress:\n        annotation_message = \"Permissions were modified.\"\n    else:\n        annotation_message = \"Permissions are correct.\"\n\n    if authorize_ingress:\n        try:\n            ec2.authorize_security_group_ingress(GroupId=group_id, IpPermissions=authorize_ingress)\n            annotation_message += \" ingress : \" + str(len(authorize_ingress)) + \" new authorization(s).\"\n        except botocore.exceptions.ClientError as e:\n            return {\n                \"complianctype\" : \"NON_COMPLIANT\",\n                \"annotation\" : \"authorize_security_group_ingress failure on group \" + group_id\n            }\n\n    if revoke_ingress:\n        try:\n            ec2.revoke_security_group_ingress(GroupId=group_id, IpPermissions=revoke_ingress)\n            annotation_message += \" ingress : \" + str(len(revoke_ingress)) + \" new revocation(s).\"\n        except botocore.exceptions.ClientError as e:\n            return {\n                \"compliance_type\" : \"NON_COMPLIANT\",\n                \"annotation\" : \"revoke_security_group_ingress failure on group \" + group_id\n            }\n\n    sg_egress = response[\"SecurityGroups\"][0][\"IpPermissionsEgress\"]\n    authorize_egress = [item for item in REQUIRED_EGRESS if item not in sg_egress]\n    revoke_egress = [item for item in sg_egress if item not in REQUIRED_EGRESS]\n\n    if authorize_egress or revoke_egress:\n        annotation_message = \"Permissions were modified.\"\n    else:\n        annotation_message = \"Permissions are correct.\"\n\n    if authorize_egress:\n        try:\n            ec2.authorize_security_group_egress(GroupId=group_id, IpPermissions=authorize_egress)\n            annotation_message += \" egress : \" + str(len(authorize_egress)) + \" new authorization(s).\"\n        except botocore.exceptions.ClientError as e:\n            return {\n                \"compliance_type\" : \"NON_COMPLIANT\",\n                \"annotation\" : \"authorize_security_group_egress failure on group \" + group_id\n            }\n\n    if revoke_egress:\n        try:\n            ec2.revoke_security_group_egress(GroupId=group_id, IpPermissions=revoke_egress)\n            annotation_message += \" egress : \" + str(len(revoke_egress)) + \" new revocation(s).\"\n        except botocore.exceptions.ClientError as e:\n            return {\n                \"compliance_type\" : \"NON_COMPLIANT\",\n                \"annotation\" : \"revoke_security_group_egress failure on group \" + group_id\n            }\n\n    return {\n        \"compliance_type\": \"COMPLIANT\",\n        \"annotation\": annotation_message\n    }\n\ndef lambda_handler(event, context):\n    invoking_event = json.loads(event['invokingEvent'])\n    configuration_item = invoking_event[\"configurationItem\"]\n\n    evaluation = evaluate_compliance(configuration_item)\n\n    config = boto3.client('config')\n\n    config.put_evaluations(\n        Evaluations=[\n            {\n                'ComplianceResourceType': invoking_event['configurationItem']['resourceType'],\n                'ComplianceResourceId': invoking_event['configurationItem']['resourceId'],\n                'ComplianceType': evaluation[\"compliance_type\"],\n                \"Annotation\": evaluation[\"annotation\"],\n                'OrderingTimestamp': invoking_event['configurationItem']['configurationItemCaptureTime']\n            },\n        ],\n        ResultToken=event['resultToken'])\n</code></pre>"},{"location":"Security/AWS%20Config/S3%20Permission/","title":"S3 Permission","text":"<pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AWSConfigBucketPermissionsCheck\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Action\": \"s3:GetBucketAcl\",\n      \"Resource\": \"arn:aws:s3:::centralized-logs-demo\",\n      \"Condition\": { \n        \"StringEquals\": {\n          \"AWS:SourceAccount\": \"073813292468\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AWSConfigBucketExistenceCheck\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Action\": \"s3:ListBucket\",\n      \"Resource\": \"arn:aws:s3:::centralized-logs-demo\",\n      \"Condition\": { \n        \"StringEquals\": {\n          \"AWS:SourceAccount\": \"073813292468\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AWSConfigBucketDelivery\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"config.amazonaws.com\"\n      },\n      \"Action\": \"s3:PutObject\",\n      \"Resource\": \"arn:aws:s3:::centralized-logs-demo/config/AWSLogs/073813292468/Config/*\",\n      \"Condition\": { \n        \"StringEquals\": { \n          \"s3:x-amz-acl\": \"bucket-owner-full-control\",\n          \"AWS:SourceAccount\": \"073813292468\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"Service%20Mesh/Istio/Resource/","title":"Resource","text":""},{"location":"Service%20Mesh/Istio/Resource/#gateway","title":"Gateway","text":"<pre><code>apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default controller\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n</code></pre>"},{"location":"Service%20Mesh/Istio/Resource/#virtualservice","title":"VirtualService","text":""},{"location":"Service%20Mesh/Istio/Resource/#from-gateway","title":"From Gateway","text":"<pre><code>apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: bookinfo\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - bookinfo-gateway\n  http:\n  - match:\n    - uri:\n        exact: /productpage\n    - uri:\n        prefix: /static\n    - uri:\n        exact: /login\n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        host: productpage\n        port:\n          number: 9080\n</code></pre>"},{"location":"Service%20Mesh/Istio/Resource/#routing-to-only-v1-version","title":"Routing to only V1 Version","text":"<pre><code>apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: productpage\nspec:\n  hosts:\n  - productpage\n  http:\n  - route:\n    - destination:\n        host: productpage\n        subset: v1\n</code></pre>"},{"location":"Service%20Mesh/Istio/Resource/#header-based-routing","title":"Header Based Routing","text":"<pre><code>apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews\n        subset: v2\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n</code></pre>"},{"location":"Service%20Mesh/Istio/Resource/#fault","title":"Fault","text":"<pre><code>apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n  - ratings\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    fault:\n      abort:\n        percentage:\n          value: 50.0\n        httpStatus: 500\n      delay:\n        percentage:\n          value: 50.0\n        fixedDelay: 7s\n    route:\n    - destination:\n        host: ratings\n        subset: v2\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n</code></pre>"},{"location":"Service%20Mesh/Istio/Resource/#traffic-shaping","title":"Traffic Shaping","text":"<pre><code>apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n      weight: 50\n    - destination:\n        host: reviews\n        subset: v3\n      weight: 50\n</code></pre>"},{"location":"Service%20Mesh/Istio/Resource/#destinationrule","title":"DestinationRule","text":"<pre><code>apiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: productpage\nspec:\n  host: productpage\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n</code></pre>"},{"location":"Service%20Mesh/Istio/Setting/","title":"Setting","text":""},{"location":"Service%20Mesh/Istio/Setting/#install-istioctl","title":"Install istioctl","text":"<pre><code>curl -L https://istio.io/downloadIstio | sh -\nsudo cp istio-*/bin/istioctl /usr/local/bin/istioctl\nistioctl version\n</code></pre>"},{"location":"Service%20Mesh/Istio/Setting/#istio-profile","title":"Istio profile","text":"default demo minimal remote empty preview ambient Core components istio-egressgateway \u2714 istio-ingressgateway \u2714 \u2714 \u2714 istiod \u2714 \u2714 \u2714 \u2714 \u2714 CNI \u2714 Ztunnel \u2714 <pre><code>istioctl install --set profile=demo -y\nkubectl -n istio-system get pod,svc\n</code></pre>"},{"location":"Service%20Mesh/Istio/Setting/#istio-operator","title":"Istio operator","text":"<pre><code>istioctl operator init\nkubectl -n istio-operator get all\n</code></pre>"},{"location":"Service%20Mesh/Istio/Setting/#profile-example","title":"Profile Example","text":"profile.yaml<pre><code>apiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: istio-profile\n  namespace: istio-system\nspec:\n  profile: demo\n  components:\n    ingressGateways:\n      - name: istio-ingressgateway\n        enabled: true\n        k8s:\n          service:\n            type: NodePort\n</code></pre>"},{"location":"Service%20Mesh/Istio/Setting/#install-sidecar","title":"Install Sidecar","text":"Resource Label Enabled value Disabled value Namespace istio-injection enabled disabled Pod sidecar.istio.io/inject \"true\" \"false\""},{"location":"Service%20Mesh/Istio/Setting/#namespace-config","title":"Namespace Config","text":"<pre><code>kubectl label namespace default istio-injection=enabled --overwrite\n</code></pre>"},{"location":"Service%20Mesh/Istio/Setting/#pod-config","title":"Pod Config","text":"<pre><code>spec:\n  template:\n    metadata:\n      labels:\n        sidecar.istio.io/inject: \"false\"\n</code></pre>"},{"location":"Tools/Curl/","title":"Curl","text":""},{"location":"Tools/Curl/#get","title":"GET","text":"<pre><code>curl \"http://localhost:8080/data?key1=value1&amp;key2=value2\"\n</code></pre>"},{"location":"Tools/Curl/#post","title":"POST","text":"<pre><code>curl -d '{\"key1\":\"value1\", \"key2\":\"value2\"}' \\\n-H \"Content-Type: application/json\" \\\n-X POST http://localhost:8080/data\n</code></pre>"},{"location":"Tools/Curl/#with-header","title":"With Header","text":"<pre><code>curl -I google.com  # Only Header\ncurl -i google.com  # Header with Body\n</code></pre>"},{"location":"Tools/Git/","title":"Git","text":"<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p>"},{"location":"Tools/Git/#ready","title":"Ready","text":"<pre><code>USER_NAME=\"&lt;user_name&gt;\"\nUSER_EMAIL=\"&lt;user_email&gt;\"\n\nsudo yum install -y git\n\ngit config --global credential.helper '!aws codecommit credential-helper $@'\ngit config --global credential.UseHttpPath true\n\ngit config --global user.name $USER_NAME\ngit config --global user.email $USER_EMAIL\n</code></pre>"},{"location":"Tools/Git/#sparse-checkout","title":"Sparse Checkout","text":"<pre><code>git init\ngit sparse-checkout init\ngit sparse-checkout set \"/scripts/\"\ngit remote add -f origin git@github.com:chinsun9/reponame.git\ngit pull origin main\n</code></pre>"},{"location":"Tools/Github%20CLI/","title":"Github CLI","text":"<pre><code>type -p yum-config-manager &gt;/dev/null || sudo yum install yum-utils\nsudo yum-config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo\nsudo yum install gh\n</code></pre>"},{"location":"Tools/Gradle/","title":"Gradle","text":"<pre><code>wget https://services.gradle.org/distributions/gradle-8.7-bin.zip\nmkdir /opt/gradle\nunzip -d /opt/gradle gradle-8.7-bin.zip\nexport PATH=$PATH:/opt/gradle/gradle-8.7/bin\n</code></pre>"},{"location":"Tools/NPM/","title":"NPM (Node.js)","text":""},{"location":"Tools/NPM/#install","title":"Install","text":"<pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash\nnvm install 20\n\nnode -v\nnpm -v\n</code></pre>"},{"location":"Tools/SSH%20%26%20SCP/","title":"SSH &amp; SCP","text":""},{"location":"Tools/SSH%20%26%20SCP/#password-port-change","title":"Password &amp; Port Change","text":"<pre><code>sed -i 's/#Port 22/Port 37722/' /etc/ssh/sshd_config\nsed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config\nsystemctl restart sshd\necho 'Semye0ng2@23$$$' | passwd --stdin ec2-user\n</code></pre>"},{"location":"Tools/SSH%20%26%20SCP/#ssh-command-example","title":"SSH Command Example","text":"<pre><code>ssh ec2-user@13.125.158.16 -i skills-key.pem -p 22\n</code></pre>"},{"location":"Tools/SSH%20%26%20SCP/#ssh-tunneling-example","title":"SSH Tunneling Example","text":"<pre><code>ssh -L 8080:127.0.0.1:8080 ec2-user@43.202.41.246 -i key.pem\n</code></pre>"},{"location":"Tools/SSH%20%26%20SCP/#scp-command-example","title":"SCP Command Example","text":"<pre><code>scp -r -P 4272 -i skills-key.pem stress ec2-user@13.125.158.16:/home/ec2-user/stress\n</code></pre>"},{"location":"Tools/SSH%20%26%20SCP/#vscode-config","title":"VSCode Config","text":"<pre><code>Host Bastion\n  HostName &lt;PUBLIC_IP&gt;\n  User ec2-user\n  Port 22\n  IdentityFile &lt;KEY_PATH&gt;\n</code></pre>"},{"location":"Tools/Stress%20Application/","title":"Stress Application","text":""},{"location":"Tools/Stress%20Application/#stress","title":"Stress","text":""},{"location":"Tools/Stress%20Application/#install","title":"Install","text":"<ul> <li>Amazon Linux 2023 <pre><code>sudo yum install -y stress\n</code></pre></li> <li>Amazon Linux 2 <pre><code>sudo amazon-linux-extras install epel -y\nsudo yum install stress -y\n</code></pre></li> </ul>"},{"location":"Tools/Stress%20Application/#start","title":"Start","text":"<pre><code>stress -c 1 # &lt;number of cores&gt;\n</code></pre>"},{"location":"Tools/Stress%20Application/#locust","title":"Locust","text":""},{"location":"Tools/Stress%20Application/#install_1","title":"Install","text":"<pre><code>pip install locust\n</code></pre>"},{"location":"Tools/Stress%20Application/#write-python-file","title":"Write Python File","text":"locustfile.py<pre><code>from locust import task, FastHttpUser\n\nclass MyUser(FastHttpUser):\n    @task\n    def index(self):\n        self.client.get(\"/v1/match\", params={\"token\":\"cccccccc\"})\n</code></pre>"},{"location":"Tools/Stress%20Application/#start_1","title":"Start","text":"<pre><code>locust -f locustfile.py\n</code></pre>"},{"location":"Tools/Terraform/","title":"Terraform","text":"<p>Terraform is an infrastructure as code tool that lets you build, change, and version infrastructure safely and efficiently.</p>"},{"location":"Tools/Terraform/#install","title":"Install","text":"<pre><code>yum install -y yum-utils\nyum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\nyum install -y terraform\n</code></pre>"},{"location":"Tools/pip/","title":"pip","text":"<pre><code>curl -O https://bootstrap.pypa.io/get-pip.py\npython3 get-pip.py --user\n</code></pre>"},{"location":"VPC/Client%20VPN/","title":"Client VPN","text":""},{"location":"VPC/Client%20VPN/#download","title":"Download","text":"<ul> <li>AWS Client VPN<ul> <li>https://aws.amazon.com/ko/vpn/client-vpn-download/</li> </ul> </li> <li>EasyRSA<ul> <li>https://github.com/OpenVPN/easy-rsa/releases</li> </ul> </li> </ul>"},{"location":"VPC/Client%20VPN/#certificate","title":"Certificate","text":"<pre><code>.\\EasyRSA-Start.bat\n\n./easyrsa init-pki\n./easyrsa build-ca nopass\n./easyrsa --san=DNS:server build-server-full server.com nopass\n./easyrsa build-client-full client1.domain.tld nopass\n\nexit\n</code></pre>"},{"location":"VPC/Client%20VPN/#acm","title":"ACM","text":"<pre><code>aws acm import-certificate --certificate fileb://pki/issued/server.com.crt --private-key fileb://pki/private/server.com.key --certificate-chain fileb://pki/ca.crt\naws acm import-certificate --certificate fileb://pki/issued/client1.domain.tld.crt --private-key fileb://pki/private/client1.domain.tld.key --certificate-chain fileb://pki/ca.crt\n</code></pre>"},{"location":"VPC/IPv4/","title":"IPv4","text":""},{"location":"VPC/IPv4/#vpc","title":"VPC","text":"Name CIDR Options skills-vpc 10.0.0.0/16 Enable DNS resolution &amp; Enable DNS hostnames"},{"location":"VPC/IPv4/#subnets","title":"Subnets","text":"Name CIDR Options skills-public-a 10.0.0.0/24 Enable auto-assign public IPv4 address skills-public-c 10.0.1.0/24 Enable auto-assign public IPv4 address skills-private-a 10.0.2.0/24 skills-private-c 10.0.3.0/24 skills-data-a 10.0.4.0/24 skills-data-c 10.0.5.0/24"},{"location":"VPC/IPv4/#internet-gateways","title":"Internet gateways","text":"Name Attach skills-igw skills-vpc"},{"location":"VPC/IPv4/#nat-gateways","title":"NAT gateways","text":"Name Subnet skills-nat-a skills-public-a skills-nat-c skills-public-c"},{"location":"VPC/IPv4/#route-tables","title":"Route tables","text":""},{"location":"VPC/IPv4/#public","title":"Public","text":"Name Subnet associations skills-public-rt skills-public-a skills-public-c Destination Target 0.0.0.0/0 skills-igw 10.0.0.0/16 local"},{"location":"VPC/IPv4/#private","title":"Private","text":"Name Subnet associations skills-private-a-rt skills-private-a skills-private-c-rt skills-private-c <ul> <li>private-a</li> </ul> Destination Target 0.0.0.0/0 skills-nat-a 10.0.0.0/16 local <ul> <li>private-c</li> </ul> Destination Target 0.0.0.0/0 skills-nat-c 10.0.0.0/16 local"},{"location":"VPC/IPv4/#protected","title":"Protected","text":"Name Subnet associations skills-data-rt skills-data-a skills-data-c Destination Target 10.0.0.0/16 local"},{"location":"VPC/IPv6/","title":"IPv6","text":""},{"location":"VPC/IPv6/#vpc","title":"VPC","text":"Name IPv4 CIDR IPv6 CIDR Options skills-vpc 10.0.0.0/16 Amazon-provided IPv6 CIDR block (2406:da12:f67:3800::/56) Enable DNS resolution &amp; Enable DNS hostnames"},{"location":"VPC/IPv6/#subnets","title":"Subnets","text":"Name IPv4 CIDR IPv6 CIDR Options skills-public-a 10.0.0.0/24 2406:da12:f67:3800::/64 Enable auto-assign public IPv4 address skills-public-c 10.0.1.0/24 2406:da12:f67:3801::/64 Enable auto-assign public IPv4 address skills-private-a 10.0.2.0/24 2406:da12:f67:3802::/64 skills-private-c 10.0.3.0/24 2406:da12:f67:3803::/64 skills-data-a 10.0.4.0/24 2406:da12:f67:3804::/64 skills-data-c 10.0.5.0/24 2406:da12:f67:3805::/64"},{"location":"VPC/IPv6/#internet-gateways","title":"Internet gateways","text":"Name Attach skills-igw skills-vpc"},{"location":"VPC/IPv6/#nat-gateways","title":"NAT gateways","text":"Name Subnet skills-nat-a skills-public-a skills-nat-c skills-public-c"},{"location":"VPC/IPv6/#egress-only-internet-gateways","title":"Egress only internet gateways","text":"Name Attach skills-eigw skills-vpc"},{"location":"VPC/IPv6/#route-tables","title":"Route tables","text":""},{"location":"VPC/IPv6/#public","title":"Public","text":"Name Subnet associations skills-public-rt skills-public-a skills-public-c Destination Target 0.0.0.0/0 skills-igw ::/0 skills-igw 10.0.0.0/16 local 2406:da12:f67:3800::/56 local"},{"location":"VPC/IPv6/#private","title":"Private","text":"Name Subnet associations skills-private-a-rt skills-private-a skills-private-c-rt skills-private-c <ul> <li>private-a</li> </ul> Destination Target ::/0 skills-eigw 64:ff9b::/96 skills-nat-a 2406:da12:f67:3800::/56 local 0.0.0.0/0 skills-nat-a 10.0.0.0/16 local <ul> <li>private-c</li> </ul> Destination Target ::/0 skills-eigw 64:ff9b::/96 skills-nat-c 2406:da12:f67:3800::/56 local 0.0.0.0/0 skills-nat-c 10.0.0.0/16 local"},{"location":"VPC/IPv6/#protected","title":"Protected","text":"Name Subnet associations skills-data-rt skills-data-a skills-data-c Destination Target 10.0.0.0/16 local 2406:da12:f67:3800::/56 local"},{"location":"VPC/VPC%20Flow%20Logs/","title":"VPC Flow Logs","text":""},{"location":"VPC/VPC%20Flow%20Logs/#trust-policy","title":"Trust Policy","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": \"vpc-flow-logs.amazonaws.com\"\n        },\n        \"Action\": \"sts:AssumeRole\"\n    }]\n} \n</code></pre>"},{"location":"VPC/VPC%20Flow%20Logs/#iam-policy","title":"IAM Policy","text":""},{"location":"VPC/VPC%20Flow%20Logs/#cloudwatch-logs","title":"CloudWatch Logs","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"logs:CreateLogGroup\",\n            \"logs:CreateLogStream\",\n            \"logs:PutLogEvents\",\n            \"logs:DescribeLogGroups\",\n            \"logs:DescribeLogStreams\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}   \n</code></pre>"}]}